# github.com/dolthub/swiss/minswiss
github.com/dolthub/swiss/minswiss.main STEXT size=301 args=0x0 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:11)	TEXT	github.com/dolthub/swiss/minswiss.main(SB), ABIInternal, $64-0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:11)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:11)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:11)	JLS	291
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:11)	PCDATA	$0, $-1
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:11)	SUBQ	$64, SP
	0x000e 00014 (D:\gitee\swiss\minswiss\main.go:11)	MOVQ	BP, 56(SP)
	0x0013 00019 (D:\gitee\swiss\minswiss\main.go:11)	LEAQ	56(SP), BP
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:11)	FUNCDATA	$0, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:11)	FUNCDATA	$1, gclocals路CnDyI2HjYXFz19SsOj98tw==(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:12)	LEAQ	github.com/dolthub/swiss/minswiss..dict.NewSwissMap[int64,int64](SB), AX
	0x001f 00031 (D:\gitee\swiss\minswiss\main.go:12)	MOVL	$16, BX
	0x0024 00036 (D:\gitee\swiss\minswiss\main.go:12)	PCDATA	$1, $0
	0x0024 00036 (D:\gitee\swiss\minswiss\main.go:12)	CALL	github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64](SB)
	0x0029 00041 (D:\gitee\swiss\minswiss\main.go:12)	MOVQ	AX, github.com/dolthub/swiss/minswiss..autotmp_9+48(SP)
	0x002e 00046 (D:\gitee\swiss\minswiss\main.go:13)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:13)	MOVL	$1, CX
	0x003a 00058 (D:\gitee\swiss\minswiss\main.go:13)	MOVL	$4, DI
	0x003f 00063 (D:\gitee\swiss\minswiss\main.go:13)	PCDATA	$1, $1
	0x003f 00063 (D:\gitee\swiss\minswiss\main.go:13)	NOP
	0x0040 00064 (D:\gitee\swiss\minswiss\main.go:13)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put(SB)
	0x0045 00069 (D:\gitee\swiss\minswiss\main.go:14)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_9+48(SP), AX
	0x004a 00074 (D:\gitee\swiss\minswiss\main.go:14)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x0051 00081 (D:\gitee\swiss\minswiss\main.go:14)	MOVL	$12, CX
	0x0056 00086 (D:\gitee\swiss\minswiss\main.go:14)	MOVL	$45, DI
	0x005b 00091 (D:\gitee\swiss\minswiss\main.go:14)	NOP
	0x0060 00096 (D:\gitee\swiss\minswiss\main.go:14)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put(SB)
	0x0065 00101 (D:\gitee\swiss\minswiss\main.go:15)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_9+48(SP), AX
	0x006a 00106 (D:\gitee\swiss\minswiss\main.go:15)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x0071 00113 (D:\gitee\swiss\minswiss\main.go:15)	MOVL	$123, CX
	0x0076 00118 (D:\gitee\swiss\minswiss\main.go:15)	MOVL	$456, DI
	0x007b 00123 (D:\gitee\swiss\minswiss\main.go:15)	NOP
	0x0080 00128 (D:\gitee\swiss\minswiss\main.go:15)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put(SB)
	0x0085 00133 (D:\gitee\swiss\minswiss\main.go:16)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_9+48(SP), AX
	0x008a 00138 (D:\gitee\swiss\minswiss\main.go:16)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x0091 00145 (D:\gitee\swiss\minswiss\main.go:16)	MOVL	$123, CX
	0x0096 00150 (D:\gitee\swiss\minswiss\main.go:16)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get(SB)
	0x009b 00155 (D:\gitee\swiss\minswiss\main.go:16)	MOVQ	AX, github.com/dolthub/swiss/minswiss..autotmp_10+40(SP)
	0x00a0 00160 (D:\gitee\swiss\minswiss\main.go:16)	MOVB	BL, github.com/dolthub/swiss/minswiss..autotmp_11+39(SP)
	0x00a4 00164 (D:\gitee\swiss\minswiss\main.go:16)	CALL	runtime.printlock(SB)
	0x00a9 00169 (D:\gitee\swiss\minswiss\main.go:16)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_10+40(SP), AX
	0x00ae 00174 (D:\gitee\swiss\minswiss\main.go:16)	CALL	runtime.printint(SB)
	0x00b3 00179 (D:\gitee\swiss\minswiss\main.go:16)	CALL	runtime.printsp(SB)
	0x00b8 00184 (D:\gitee\swiss\minswiss\main.go:16)	MOVBLZX	github.com/dolthub/swiss/minswiss..autotmp_11+39(SP), AX
	0x00bd 00189 (D:\gitee\swiss\minswiss\main.go:16)	NOP
	0x00c0 00192 (D:\gitee\swiss\minswiss\main.go:16)	CALL	runtime.printbool(SB)
	0x00c5 00197 (D:\gitee\swiss\minswiss\main.go:16)	CALL	runtime.printnl(SB)
	0x00ca 00202 (D:\gitee\swiss\minswiss\main.go:16)	CALL	runtime.printunlock(SB)
	0x00cf 00207 (D:\gitee\swiss\minswiss\main.go:17)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_9+48(SP), AX
	0x00d4 00212 (D:\gitee\swiss\minswiss\main.go:17)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x00db 00219 (D:\gitee\swiss\minswiss\main.go:17)	MOVL	$456, CX
	0x00e0 00224 (D:\gitee\swiss\minswiss\main.go:17)	PCDATA	$1, $0
	0x00e0 00224 (D:\gitee\swiss\minswiss\main.go:17)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get(SB)
	0x00e5 00229 (D:\gitee\swiss\minswiss\main.go:17)	MOVQ	AX, github.com/dolthub/swiss/minswiss..autotmp_10+40(SP)
	0x00ea 00234 (D:\gitee\swiss\minswiss\main.go:17)	MOVB	BL, github.com/dolthub/swiss/minswiss..autotmp_11+39(SP)
	0x00ee 00238 (D:\gitee\swiss\minswiss\main.go:17)	CALL	runtime.printlock(SB)
	0x00f3 00243 (D:\gitee\swiss\minswiss\main.go:17)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_10+40(SP), AX
	0x00f8 00248 (D:\gitee\swiss\minswiss\main.go:17)	CALL	runtime.printint(SB)
	0x00fd 00253 (D:\gitee\swiss\minswiss\main.go:17)	NOP
	0x0100 00256 (D:\gitee\swiss\minswiss\main.go:17)	CALL	runtime.printsp(SB)
	0x0105 00261 (D:\gitee\swiss\minswiss\main.go:17)	MOVBLZX	github.com/dolthub/swiss/minswiss..autotmp_11+39(SP), AX
	0x010a 00266 (D:\gitee\swiss\minswiss\main.go:17)	CALL	runtime.printbool(SB)
	0x010f 00271 (D:\gitee\swiss\minswiss\main.go:17)	CALL	runtime.printnl(SB)
	0x0114 00276 (D:\gitee\swiss\minswiss\main.go:17)	CALL	runtime.printunlock(SB)
	0x0119 00281 (D:\gitee\swiss\minswiss\main.go:18)	MOVQ	56(SP), BP
	0x011e 00286 (D:\gitee\swiss\minswiss\main.go:18)	ADDQ	$64, SP
	0x0122 00290 (D:\gitee\swiss\minswiss\main.go:18)	RET
	0x0123 00291 (D:\gitee\swiss\minswiss\main.go:18)	NOP
	0x0123 00291 (D:\gitee\swiss\minswiss\main.go:11)	PCDATA	$1, $-1
	0x0123 00291 (D:\gitee\swiss\minswiss\main.go:11)	PCDATA	$0, $-2
	0x0123 00291 (D:\gitee\swiss\minswiss\main.go:11)	CALL	runtime.morestack_noctxt(SB)
	0x0128 00296 (D:\gitee\swiss\minswiss\main.go:11)	PCDATA	$0, $-1
	0x0128 00296 (D:\gitee\swiss\minswiss\main.go:11)	JMP	0
	0x0000 49 3b 66 10 0f 86 19 01 00 00 48 83 ec 40 48 89  I;f.......H..@H.
	0x0010 6c 24 38 48 8d 6c 24 38 48 8d 05 00 00 00 00 bb  l$8H.l$8H.......
	0x0020 10 00 00 00 e8 00 00 00 00 48 89 44 24 30 48 8d  .........H.D$0H.
	0x0030 1d 00 00 00 00 b9 01 00 00 00 bf 04 00 00 00 90  ................
	0x0040 e8 00 00 00 00 48 8b 44 24 30 48 8d 1d 00 00 00  .....H.D$0H.....
	0x0050 00 b9 0c 00 00 00 bf 2d 00 00 00 0f 1f 44 00 00  .......-.....D..
	0x0060 e8 00 00 00 00 48 8b 44 24 30 48 8d 1d 00 00 00  .....H.D$0H.....
	0x0070 00 b9 7b 00 00 00 bf c8 01 00 00 0f 1f 44 00 00  ..{..........D..
	0x0080 e8 00 00 00 00 48 8b 44 24 30 48 8d 1d 00 00 00  .....H.D$0H.....
	0x0090 00 b9 7b 00 00 00 e8 00 00 00 00 48 89 44 24 28  ..{........H.D$(
	0x00a0 88 5c 24 27 e8 00 00 00 00 48 8b 44 24 28 e8 00  .\$'.....H.D$(..
	0x00b0 00 00 00 e8 00 00 00 00 0f b6 44 24 27 0f 1f 00  ..........D$'...
	0x00c0 e8 00 00 00 00 e8 00 00 00 00 e8 00 00 00 00 48  ...............H
	0x00d0 8b 44 24 30 48 8d 1d 00 00 00 00 b9 c8 01 00 00  .D$0H...........
	0x00e0 e8 00 00 00 00 48 89 44 24 28 88 5c 24 27 e8 00  .....H.D$(.\$'..
	0x00f0 00 00 00 48 8b 44 24 28 e8 00 00 00 00 0f 1f 00  ...H.D$(........
	0x0100 e8 00 00 00 00 0f b6 44 24 27 e8 00 00 00 00 e8  .......D$'......
	0x0110 00 00 00 00 e8 00 00 00 00 48 8b 6c 24 38 48 83  .........H.l$8H.
	0x0120 c4 40 c3 e8 00 00 00 00 e9 d3 fe ff ff           .@...........
	rel 27+4 t=14 github.com/dolthub/swiss/minswiss..dict.NewSwissMap[int64,int64]+0
	rel 37+4 t=7 github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64]+0
	rel 49+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 65+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put+0
	rel 77+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 97+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put+0
	rel 109+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 129+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put+0
	rel 141+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 151+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get+0
	rel 165+4 t=7 runtime.printlock+0
	rel 175+4 t=7 runtime.printint+0
	rel 180+4 t=7 runtime.printsp+0
	rel 193+4 t=7 runtime.printbool+0
	rel 198+4 t=7 runtime.printnl+0
	rel 203+4 t=7 runtime.printunlock+0
	rel 215+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 225+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get+0
	rel 239+4 t=7 runtime.printlock+0
	rel 249+4 t=7 runtime.printint+0
	rel 257+4 t=7 runtime.printsp+0
	rel 267+4 t=7 runtime.printbool+0
	rel 272+4 t=7 runtime.printnl+0
	rel 277+4 t=7 runtime.printunlock+0
	rel 292+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.noescape STEXT nosplit size=1 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	TEXT	github.com/dolthub/swiss/minswiss.noescape(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.noescape.arginfo1(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.noescape.argliveinfo(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	PCDATA	$0, $-2
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:162)	PCDATA	$3, $1
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:165)	RET
	0x0000 c3                                               .
github.com/dolthub/swiss/minswiss.swissMetaMatchH2 STEXT nosplit size=55 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:261)	TEXT	github.com/dolthub/swiss/minswiss.swissMetaMatchH2(SB), NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:261)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:261)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:261)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.swissMetaMatchH2.arginfo1(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:261)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.swissMetaMatchH2.argliveinfo(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:261)	PCDATA	$3, $1
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:263)	MOVBQSX	BL, CX
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:263)	MOVQ	$72340172838076673, DX
	0x000e 00014 (D:\gitee\swiss\minswiss\main.go:263)	IMULQ	CX, DX
	0x0012 00018 (D:\gitee\swiss\minswiss\main.go:263)	XORQ	(AX), DX
	0x0015 00021 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-72340172838076673, CX
	0x001f 00031 (D:\gitee\swiss\minswiss\main.go:264)	LEAQ	(CX)(DX*1), AX
	0x0023 00035 (D:\gitee\swiss\minswiss\main.go:264)	NOTQ	DX
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:264)	ANDQ	DX, AX
	0x0029 00041 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-9187201950435737472, CX
	0x0033 00051 (D:\gitee\swiss\minswiss\main.go:264)	ANDQ	CX, AX
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:264)	RET
	0x0000 48 0f be cb 48 ba 01 01 01 01 01 01 01 01 48 0f  H...H.........H.
	0x0010 af d1 48 33 10 48 b9 ff fe fe fe fe fe fe fe 48  ..H3.H.........H
	0x0020 8d 04 11 48 f7 d2 48 21 d0 48 b9 80 80 80 80 80  ...H..H!.H......
	0x0030 80 80 80 48 21 c8 c3                             ...H!..
github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty STEXT nosplit size=39 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:267)	TEXT	github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:267)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:267)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:267)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty.arginfo1(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:267)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty.argliveinfo(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:267)	PCDATA	$3, $1
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:268)	MOVQ	(AX), AX
	0x0003 00003 (D:\gitee\swiss\minswiss\main.go:268)	MOVQ	$-9187201950435737472, CX
	0x000d 00013 (D:\gitee\swiss\minswiss\main.go:268)	XORQ	CX, AX
	0x0010 00016 (D:\gitee\swiss\minswiss\main.go:269)	MOVQ	$-72340172838076673, DX
	0x001a 00026 (D:\gitee\swiss\minswiss\main.go:269)	ADDQ	AX, DX
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:269)	NOTQ	AX
	0x0020 00032 (D:\gitee\swiss\minswiss\main.go:269)	ANDQ	DX, AX
	0x0023 00035 (D:\gitee\swiss\minswiss\main.go:269)	ANDQ	CX, AX
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:269)	RET
	0x0000 48 8b 00 48 b9 80 80 80 80 80 80 80 80 48 31 c8  H..H.........H1.
	0x0010 48 ba ff fe fe fe fe fe fe fe 48 01 c2 48 f7 d0  H.........H..H..
	0x0020 48 21 d0 48 21 c8 c3                             H!.H!..
github.com/dolthub/swiss/minswiss.swissNextMatch STEXT nosplit size=48 args=0x8 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:272)	TEXT	github.com/dolthub/swiss/minswiss.swissNextMatch(SB), NOSPLIT|ABIInternal, $0-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:272)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:272)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:272)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.swissNextMatch.arginfo1(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:272)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.swissNextMatch.argliveinfo(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:272)	PCDATA	$3, $1
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:273)	MOVQ	(AX), DX
	0x0003 00003 (D:\gitee\swiss\minswiss\main.go:273)	BSFQ	DX, CX
	0x0007 00007 (D:\gitee\swiss\minswiss\main.go:273)	MOVL	$64, BX
	0x000c 00012 (D:\gitee\swiss\minswiss\main.go:273)	CMOVQEQ	BX, CX
	0x0010 00016 (D:\gitee\swiss\minswiss\main.go:274)	CMPL	CX, $64
	0x0013 00019 (D:\gitee\swiss\minswiss\main.go:274)	SBBQ	BX, BX
	0x0016 00022 (D:\gitee\swiss\minswiss\main.go:274)	MOVL	$1, SI
	0x001b 00027 (D:\gitee\swiss\minswiss\main.go:274)	SHLQ	CX, SI
	0x001e 00030 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	BX, SI
	0x0021 00033 (D:\gitee\swiss\minswiss\main.go:274)	NOTQ	SI
	0x0024 00036 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	DX, SI
	0x0027 00039 (D:\gitee\swiss\minswiss\main.go:274)	MOVQ	SI, (AX)
	0x002a 00042 (D:\gitee\swiss\minswiss\main.go:275)	SHRL	$3, CX
	0x002d 00045 (D:\gitee\swiss\minswiss\main.go:275)	MOVL	CX, AX
	0x002f 00047 (D:\gitee\swiss\minswiss\main.go:275)	RET
	0x0000 48 8b 10 48 0f bc ca bb 40 00 00 00 48 0f 44 cb  H..H....@...H.D.
	0x0010 83 f9 40 48 19 db be 01 00 00 00 48 d3 e6 48 21  ..@H.......H..H!
	0x0020 de 48 f7 d6 48 21 d6 48 89 30 c1 e9 03 89 c8 c3  .H..H!.H.0......
github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64] STEXT dupok size=606 args=0x10 locals=0xe8 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:101)	TEXT	github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64](SB), DUPOK|ABIInternal, $232-16
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:101)	LEAQ	-104(SP), R12
	0x0005 00005 (D:\gitee\swiss\minswiss\main.go:101)	CMPQ	R12, 16(R14)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-2
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:101)	JLS	578
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-1
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:101)	SUBQ	$232, SP
	0x0016 00022 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	BP, 224(SP)
	0x001e 00030 (D:\gitee\swiss\minswiss\main.go:101)	LEAQ	224(SP), BP
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$0, gclocals路Tumw6UTxFRAq+KySimItaw==(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$1, gclocals路Phyq/d6BZbzUZVVjvsVctA==(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$2, github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64].stkobj(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64].arginfo1(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64].argliveinfo(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$3, $1
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	AX, github.com/dolthub/swiss/minswiss..dict+240(SP)
	0x002e 00046 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$3, $2
	0x002e 00046 (D:\gitee\swiss\minswiss\main.go:102)	LEAL	6(BX), DX
	0x0031 00049 (D:\gitee\swiss\minswiss\main.go:102)	MOVL	DX, SI
	0x0033 00051 (D:\gitee\swiss\minswiss\main.go:102)	SHLQ	$32, DX
	0x0037 00055 (D:\gitee\swiss\minswiss\main.go:102)	IMUL3Q	$613566757, SI, SI
	0x003e 00062 (D:\gitee\swiss\minswiss\main.go:102)	ADDQ	SI, DX
	0x0041 00065 (D:\gitee\swiss\minswiss\main.go:102)	RCRQ	$1, DX
	0x0044 00068 (D:\gitee\swiss\minswiss\main.go:102)	SHRQ	$34, DX
	0x0048 00072 (D:\gitee\swiss\minswiss\main.go:103)	TESTL	DX, DX
	0x004a 00074 (D:\gitee\swiss\minswiss\main.go:103)	JNE	83
	0x004c 00076 (D:\gitee\swiss\minswiss\main.go:103)	MOVL	$1, SI
	0x0051 00081 (D:\gitee\swiss\minswiss\main.go:103)	JMP	99
	0x0053 00083 (D:\gitee\swiss\minswiss\main.go:106)	MOVQ	DX, SI
	0x0056 00086 (D:\gitee\swiss\minswiss\main.go:106)	SHRL	$1, DX
	0x0058 00088 (D:\gitee\swiss\minswiss\main.go:106)	ADDL	SI, DX
	0x005a 00090 (D:\gitee\swiss\minswiss\main.go:105)	CMPL	SI, $128
	0x0060 00096 (D:\gitee\swiss\minswiss\main.go:110)	CMOVLHI	DX, SI
	0x0063 00099 (D:\gitee\swiss\minswiss\main.go:110)	MOVL	SI, github.com/dolthub/swiss/minswiss.groups+28(SP)
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:110)	MOVL	SI, CX
	0x0069 00105 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	CX, github.com/dolthub/swiss/minswiss..autotmp_33+40(SP)
	0x006e 00110 (D:\gitee\swiss\minswiss\main.go:110)	LEAQ	type:github.com/dolthub/swiss/minswiss.swissMetadata(SB), AX
	0x0075 00117 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	CX, BX
	0x0078 00120 (D:\gitee\swiss\minswiss\main.go:110)	PCDATA	$1, $0
	0x0078 00120 (D:\gitee\swiss\minswiss\main.go:110)	CALL	runtime.makeslice(SB)
	0x007d 00125 (D:\gitee\swiss\minswiss\main.go:110)	PCDATA	$0, $-2
	0x007d 00125 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	AX, github.com/dolthub/swiss/minswiss..autotmp_34+152(SP)
	0x0085 00133 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	github.com/dolthub/swiss/minswiss..dict+240(SP), DX
	0x008d 00141 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	24(DX), SI
	0x0091 00145 (D:\gitee\swiss\minswiss\main.go:111)	PCDATA	$0, $-1
	0x0091 00145 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_33+40(SP), BX
	0x0096 00150 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	BX, CX
	0x0099 00153 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	SI, AX
	0x009c 00156 (D:\gitee\swiss\minswiss\main.go:111)	PCDATA	$1, $1
	0x009c 00156 (D:\gitee\swiss\minswiss\main.go:111)	NOP
	0x00a0 00160 (D:\gitee\swiss\minswiss\main.go:111)	CALL	runtime.makeslice(SB)
	0x00a5 00165 (D:\gitee\swiss\minswiss\main.go:111)	PCDATA	$0, $-2
	0x00a5 00165 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	AX, github.com/dolthub/swiss/minswiss..autotmp_35+144(SP)
	0x00ad 00173 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	github.com/dolthub/swiss/minswiss..dict+240(SP), DX
	0x00b5 00181 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	(DX), DX
	0x00b8 00184 (<unknown line number>)	NOP
	0x00b8 00184 (D:\gitee\swiss\minswiss\main.go:242)	MOVQ	(DX), DX
	0x00bb 00187 (D:\gitee\swiss\minswiss\main.go:242)	PCDATA	$0, $-1
	0x00bb 00187 (D:\gitee\swiss\minswiss\main.go:242)	MOVQ	DX, github.com/dolthub/swiss/minswiss..dict+128(SP)
	0x00c3 00195 (<unknown line number>)	NOP
	0x00c3 00195 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_21+176(SP)
	0x00cc 00204 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_21+192(SP)
	0x00d5 00213 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_21+208(SP)
	0x00de 00222 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_22+48(SP), DI
	0x00e3 00227 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-2
	0x00e3 00227 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	-48(DI), DI
	0x00e7 00231 (D:\gitee\swiss\minswiss\main.go:255)	DUFFZERO	$336
	0x00fa 00250 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-1
	0x00fa 00250 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_22+48(SP), SI
	0x00ff 00255 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	SI, github.com/dolthub/swiss/minswiss..autotmp_21+192(SP)
	0x0107 00263 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$1, $2
	0x0107 00263 (D:\gitee\swiss\minswiss\main.go:255)	CALL	runtime.fastrand(SB)
	0x010c 00268 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-2
	0x010c 00268 (D:\gitee\swiss\minswiss\main.go:255)	MOVL	AX, github.com/dolthub/swiss/minswiss..autotmp_21+188(SP)
	0x0113 00275 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	github.com/dolthub/swiss/minswiss..dict+128(SP), DX
	0x011b 00283 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	(DX), DX
	0x011e 00286 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-1
	0x011e 00286 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	DX, github.com/dolthub/swiss/minswiss.a+160(SP)
	0x0126 00294 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_21+176(SP), DX
	0x012e 00302 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	DX, github.com/dolthub/swiss/minswiss.a+168(SP)
	0x0136 00310 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	github.com/dolthub/swiss/minswiss.a+160(SP), SI
	0x013e 00318 (D:\gitee\swiss\minswiss\main.go:257)	TESTB	AL, (DX)
	0x0140 00320 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	72(SI), DX
	0x0144 00324 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	DX, github.com/dolthub/swiss/minswiss..autotmp_36+136(SP)
	0x014c 00332 (D:\gitee\swiss\minswiss\main.go:257)	MOVL	github.com/dolthub/swiss/minswiss..autotmp_21+188(SP), SI
	0x0153 00339 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	SI, github.com/dolthub/swiss/minswiss..autotmp_37+32(SP)
	0x0158 00344 (D:\gitee\swiss\minswiss\main.go:109)	LEAQ	type:github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64](SB), AX
	0x015f 00351 (D:\gitee\swiss\minswiss\main.go:109)	PCDATA	$1, $3
	0x015f 00351 (D:\gitee\swiss\minswiss\main.go:109)	NOP
	0x0160 00352 (D:\gitee\swiss\minswiss\main.go:109)	CALL	runtime.newobject(SB)
	0x0165 00357 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_33+40(SP), DX
	0x016a 00362 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	DX, 8(AX)
	0x016e 00366 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	DX, 16(AX)
	0x0172 00370 (D:\gitee\swiss\minswiss\main.go:113)	MOVL	github.com/dolthub/swiss/minswiss.groups+28(SP), SI
	0x0176 00374 (D:\gitee\swiss\minswiss\main.go:113)	LEAL	(SI)(SI*2), DI
	0x0179 00377 (D:\gitee\swiss\minswiss\main.go:113)	LEAL	(SI)(DI*2), SI
	0x017c 00380 (D:\gitee\swiss\minswiss\main.go:110)	PCDATA	$0, $-2
	0x017c 00380 (D:\gitee\swiss\minswiss\main.go:110)	CMPL	runtime.writeBarrier(SB), $0
	0x0183 00387 (D:\gitee\swiss\minswiss\main.go:110)	JNE	402
	0x0185 00389 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_34+152(SP), CX
	0x018d 00397 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	CX, (AX)
	0x0190 00400 (D:\gitee\swiss\minswiss\main.go:110)	JMP	421
	0x0192 00402 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	AX, DI
	0x0195 00405 (D:\gitee\swiss\minswiss\main.go:110)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_34+152(SP), CX
	0x019d 00413 (D:\gitee\swiss\minswiss\main.go:110)	NOP
	0x01a0 00416 (D:\gitee\swiss\minswiss\main.go:110)	CALL	runtime.gcWriteBarrierCX(SB)
	0x01a5 00421 (D:\gitee\swiss\minswiss\main.go:111)	PCDATA	$0, $-1
	0x01a5 00421 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	DX, 32(AX)
	0x01a9 00425 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	DX, 40(AX)
	0x01ad 00429 (D:\gitee\swiss\minswiss\main.go:111)	PCDATA	$0, $-2
	0x01ad 00429 (D:\gitee\swiss\minswiss\main.go:111)	CMPL	runtime.writeBarrier(SB), $0
	0x01b4 00436 (D:\gitee\swiss\minswiss\main.go:111)	JNE	452
	0x01b6 00438 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_35+144(SP), CX
	0x01be 00446 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	CX, 24(AX)
	0x01c2 00450 (D:\gitee\swiss\minswiss\main.go:111)	JMP	469
	0x01c4 00452 (D:\gitee\swiss\minswiss\main.go:111)	LEAQ	24(AX), DI
	0x01c8 00456 (D:\gitee\swiss\minswiss\main.go:111)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_35+144(SP), CX
	0x01d0 00464 (D:\gitee\swiss\minswiss\main.go:111)	CALL	runtime.gcWriteBarrierCX(SB)
	0x01d5 00469 (D:\gitee\swiss\minswiss\main.go:112)	PCDATA	$0, $-1
	0x01d5 00469 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_37+32(SP), CX
	0x01da 00474 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	CX, 56(AX)
	0x01de 00478 (D:\gitee\swiss\minswiss\main.go:112)	PCDATA	$0, $-2
	0x01de 00478 (D:\gitee\swiss\minswiss\main.go:112)	CMPL	runtime.writeBarrier(SB), $0
	0x01e5 00485 (D:\gitee\swiss\minswiss\main.go:112)	JNE	501
	0x01e7 00487 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_36+136(SP), CX
	0x01ef 00495 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	CX, 48(AX)
	0x01f3 00499 (D:\gitee\swiss\minswiss\main.go:112)	JMP	518
	0x01f5 00501 (D:\gitee\swiss\minswiss\main.go:112)	LEAQ	48(AX), DI
	0x01f9 00505 (D:\gitee\swiss\minswiss\main.go:112)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_36+136(SP), CX
	0x0201 00513 (D:\gitee\swiss\minswiss\main.go:112)	CALL	runtime.gcWriteBarrierCX(SB)
	0x0206 00518 (D:\gitee\swiss\minswiss\main.go:113)	PCDATA	$0, $-1
	0x0206 00518 (D:\gitee\swiss\minswiss\main.go:113)	MOVL	SI, 80(AX)
	0x0209 00521 (D:\gitee\swiss\minswiss\main.go:116)	MOVQ	(AX), CX
	0x020c 00524 (D:\gitee\swiss\minswiss\main.go:116)	MOVQ	8(AX), DX
	0x0210 00528 (D:\gitee\swiss\minswiss\main.go:116)	XORL	BX, BX
	0x0212 00530 (D:\gitee\swiss\minswiss\main.go:117)	JMP	557
	0x0214 00532 (D:\gitee\swiss\minswiss\main.go:118)	MOVQ	BX, SI
	0x0217 00535 (D:\gitee\swiss\minswiss\main.go:118)	SHLQ	$4, BX
	0x021b 00539 (D:\gitee\swiss\minswiss\main.go:118)	MOVQ	$-9187201950435737472, DI
	0x0225 00549 (D:\gitee\swiss\minswiss\main.go:118)	MOVQ	DI, (CX)(BX*1)
	0x0229 00553 (D:\gitee\swiss\minswiss\main.go:117)	LEAQ	1(SI), BX
	0x022d 00557 (D:\gitee\swiss\minswiss\main.go:117)	CMPQ	BX, DX
	0x0230 00560 (D:\gitee\swiss\minswiss\main.go:117)	JLT	532
	0x0232 00562 (D:\gitee\swiss\minswiss\main.go:120)	PCDATA	$1, $-1
	0x0232 00562 (D:\gitee\swiss\minswiss\main.go:120)	MOVQ	224(SP), BP
	0x023a 00570 (D:\gitee\swiss\minswiss\main.go:120)	ADDQ	$232, SP
	0x0241 00577 (D:\gitee\swiss\minswiss\main.go:120)	RET
	0x0242 00578 (D:\gitee\swiss\minswiss\main.go:120)	NOP
	0x0242 00578 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$1, $-1
	0x0242 00578 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-2
	0x0242 00578 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	AX, 8(SP)
	0x0247 00583 (D:\gitee\swiss\minswiss\main.go:101)	MOVL	BX, 16(SP)
	0x024b 00587 (D:\gitee\swiss\minswiss\main.go:101)	CALL	runtime.morestack_noctxt(SB)
	0x0250 00592 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	8(SP), AX
	0x0255 00597 (D:\gitee\swiss\minswiss\main.go:101)	MOVL	16(SP), BX
	0x0259 00601 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-1
	0x0259 00601 (D:\gitee\swiss\minswiss\main.go:101)	JMP	0
	0x0000 4c 8d 64 24 98 4d 3b 66 10 0f 86 33 02 00 00 48  L.d$.M;f...3...H
	0x0010 81 ec e8 00 00 00 48 89 ac 24 e0 00 00 00 48 8d  ......H..$....H.
	0x0020 ac 24 e0 00 00 00 48 89 84 24 f0 00 00 00 8d 53  .$....H..$.....S
	0x0030 06 89 d6 48 c1 e2 20 48 69 f6 25 49 92 24 48 01  ...H.. Hi.%I.$H.
	0x0040 f2 48 d1 da 48 c1 ea 22 85 d2 75 07 be 01 00 00  .H..H.."..u.....
	0x0050 00 eb 10 48 89 d6 d1 ea 01 f2 81 fe 80 00 00 00  ...H............
	0x0060 0f 47 f2 89 74 24 1c 89 f1 48 89 4c 24 28 48 8d  .G..t$...H.L$(H.
	0x0070 05 00 00 00 00 48 89 cb e8 00 00 00 00 48 89 84  .....H.......H..
	0x0080 24 98 00 00 00 48 8b 94 24 f0 00 00 00 48 8b 72  $....H..$....H.r
	0x0090 18 48 8b 5c 24 28 48 89 d9 48 89 f0 0f 1f 40 00  .H.\$(H..H....@.
	0x00a0 e8 00 00 00 00 48 89 84 24 90 00 00 00 48 8b 94  .....H..$....H..
	0x00b0 24 f0 00 00 00 48 8b 12 48 8b 12 48 89 94 24 80  $....H..H..H..$.
	0x00c0 00 00 00 44 0f 11 bc 24 b0 00 00 00 44 0f 11 bc  ...D...$....D...
	0x00d0 24 c0 00 00 00 44 0f 11 bc 24 d0 00 00 00 48 8d  $....D...$....H.
	0x00e0 7c 24 30 48 8d 7f d0 48 89 6c 24 f0 48 8d 6c 24  |$0H...H.l$.H.l$
	0x00f0 f0 e8 00 00 00 00 48 8b 6d 00 48 8d 74 24 30 48  ......H.m.H.t$0H
	0x0100 89 b4 24 c0 00 00 00 e8 00 00 00 00 89 84 24 bc  ..$...........$.
	0x0110 00 00 00 48 8b 94 24 80 00 00 00 48 8b 12 48 89  ...H..$....H..H.
	0x0120 94 24 a0 00 00 00 48 8d 94 24 b0 00 00 00 48 89  .$....H..$....H.
	0x0130 94 24 a8 00 00 00 48 8b b4 24 a0 00 00 00 84 02  .$....H..$......
	0x0140 48 8b 56 48 48 89 94 24 88 00 00 00 8b b4 24 bc  H.VHH..$......$.
	0x0150 00 00 00 48 89 74 24 20 48 8d 05 00 00 00 00 90  ...H.t$ H.......
	0x0160 e8 00 00 00 00 48 8b 54 24 28 48 89 50 08 48 89  .....H.T$(H.P.H.
	0x0170 50 10 8b 74 24 1c 8d 3c 76 8d 34 7e 83 3d 00 00  P..t$..<v.4~.=..
	0x0180 00 00 00 75 0d 48 8b 8c 24 98 00 00 00 48 89 08  ...u.H..$....H..
	0x0190 eb 13 48 89 c7 48 8b 8c 24 98 00 00 00 0f 1f 00  ..H..H..$.......
	0x01a0 e8 00 00 00 00 48 89 50 20 48 89 50 28 83 3d 00  .....H.P H.P(.=.
	0x01b0 00 00 00 00 75 0e 48 8b 8c 24 90 00 00 00 48 89  ....u.H..$....H.
	0x01c0 48 18 eb 11 48 8d 78 18 48 8b 8c 24 90 00 00 00  H...H.x.H..$....
	0x01d0 e8 00 00 00 00 48 8b 4c 24 20 48 89 48 38 83 3d  .....H.L$ H.H8.=
	0x01e0 00 00 00 00 00 75 0e 48 8b 8c 24 88 00 00 00 48  .....u.H..$....H
	0x01f0 89 48 30 eb 11 48 8d 78 30 48 8b 8c 24 88 00 00  .H0..H.x0H..$...
	0x0200 00 e8 00 00 00 00 89 70 50 48 8b 08 48 8b 50 08  .......pPH..H.P.
	0x0210 31 db eb 19 48 89 de 48 c1 e3 04 48 bf 80 80 80  1...H..H...H....
	0x0220 80 80 80 80 80 48 89 3c 19 48 8d 5e 01 48 39 d3  .....H.<.H.^.H9.
	0x0230 7c e2 48 8b ac 24 e0 00 00 00 48 81 c4 e8 00 00  |.H..$....H.....
	0x0240 00 c3 48 89 44 24 08 89 5c 24 10 e8 00 00 00 00  ..H.D$..\$......
	0x0250 48 8b 44 24 08 8b 5c 24 10 e9 a2 fd ff ff        H.D$..\$......
	rel 113+4 t=14 type:github.com/dolthub/swiss/minswiss.swissMetadata+0
	rel 121+4 t=7 runtime.makeslice+0
	rel 161+4 t=7 runtime.makeslice+0
	rel 242+4 t=7 runtime.duffzero+336
	rel 264+4 t=7 runtime.fastrand+0
	rel 347+4 t=14 type:github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64]+0
	rel 353+4 t=7 runtime.newobject+0
	rel 382+4 t=14 runtime.writeBarrier+-1
	rel 417+4 t=7 runtime.gcWriteBarrierCX+0
	rel 431+4 t=14 runtime.writeBarrier+-1
	rel 465+4 t=7 runtime.gcWriteBarrierCX+0
	rel 480+4 t=14 runtime.writeBarrier+-1
	rel 514+4 t=7 runtime.gcWriteBarrierCX+0
	rel 588+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64] STEXT dupok size=186 args=0x8 locals=0xa0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:241)	TEXT	github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64](SB), DUPOK|ABIInternal, $160-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:241)	LEAQ	-32(SP), R12
	0x0005 00005 (D:\gitee\swiss\minswiss\main.go:241)	CMPQ	R12, 16(R14)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:241)	PCDATA	$0, $-2
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:241)	JLS	166
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:241)	PCDATA	$0, $-1
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:241)	SUBQ	$160, SP
	0x0016 00022 (D:\gitee\swiss\minswiss\main.go:241)	MOVQ	BP, 152(SP)
	0x001e 00030 (D:\gitee\swiss\minswiss\main.go:241)	LEAQ	152(SP), BP
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:241)	FUNCDATA	$0, gclocals路ZzMiPAiVBg7DJ6dh/CjSag==(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:241)	FUNCDATA	$1, gclocals路tSuPxvBNf0WVVkGD8PbKlw==(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:241)	FUNCDATA	$2, github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64].stkobj(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:241)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64].arginfo1(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:241)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64].argliveinfo(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:241)	PCDATA	$3, $1
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:242)	PCDATA	$0, $-2
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:242)	MOVQ	(AX), AX
	0x0029 00041 (D:\gitee\swiss\minswiss\main.go:242)	PCDATA	$0, $-1
	0x0029 00041 (D:\gitee\swiss\minswiss\main.go:242)	MOVQ	AX, github.com/dolthub/swiss/minswiss..dict+80(SP)
	0x002e 00046 (<unknown line number>)	NOP
	0x002e 00046 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_12+104(SP)
	0x0034 00052 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_12+120(SP)
	0x003a 00058 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_12+136(SP)
	0x0043 00067 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_13(SP), DI
	0x0047 00071 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-2
	0x0047 00071 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	-48(DI), DI
	0x004b 00075 (D:\gitee\swiss\minswiss\main.go:255)	DUFFZERO	$336
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-1
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_13(SP), CX
	0x0062 00098 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	CX, github.com/dolthub/swiss/minswiss..autotmp_12+120(SP)
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$1, $1
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:255)	CALL	runtime.fastrand(SB)
	0x006c 00108 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-2
	0x006c 00108 (D:\gitee\swiss\minswiss\main.go:255)	MOVL	AX, github.com/dolthub/swiss/minswiss..autotmp_12+116(SP)
	0x0070 00112 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	github.com/dolthub/swiss/minswiss..dict+80(SP), AX
	0x0075 00117 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	(AX), AX
	0x0078 00120 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-1
	0x0078 00120 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	AX, github.com/dolthub/swiss/minswiss.a+88(SP)
	0x007d 00125 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_12+104(SP), AX
	0x0082 00130 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	AX, github.com/dolthub/swiss/minswiss.a+96(SP)
	0x0087 00135 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	github.com/dolthub/swiss/minswiss.a+88(SP), CX
	0x008c 00140 (D:\gitee\swiss\minswiss\main.go:257)	TESTB	AL, (AX)
	0x008e 00142 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	72(CX), AX
	0x0092 00146 (D:\gitee\swiss\minswiss\main.go:257)	MOVL	github.com/dolthub/swiss/minswiss..autotmp_12+116(SP), BX
	0x0096 00150 (D:\gitee\swiss\minswiss\main.go:243)	MOVQ	152(SP), BP
	0x009e 00158 (D:\gitee\swiss\minswiss\main.go:243)	ADDQ	$160, SP
	0x00a5 00165 (D:\gitee\swiss\minswiss\main.go:243)	RET
	0x00a6 00166 (D:\gitee\swiss\minswiss\main.go:243)	NOP
	0x00a6 00166 (D:\gitee\swiss\minswiss\main.go:241)	PCDATA	$1, $-1
	0x00a6 00166 (D:\gitee\swiss\minswiss\main.go:241)	PCDATA	$0, $-2
	0x00a6 00166 (D:\gitee\swiss\minswiss\main.go:241)	MOVQ	AX, 8(SP)
	0x00ab 00171 (D:\gitee\swiss\minswiss\main.go:241)	CALL	runtime.morestack_noctxt(SB)
	0x00b0 00176 (D:\gitee\swiss\minswiss\main.go:241)	MOVQ	8(SP), AX
	0x00b5 00181 (D:\gitee\swiss\minswiss\main.go:241)	PCDATA	$0, $-1
	0x00b5 00181 (D:\gitee\swiss\minswiss\main.go:241)	JMP	0
	0x0000 4c 8d 64 24 e0 4d 3b 66 10 0f 86 97 00 00 00 48  L.d$.M;f.......H
	0x0010 81 ec a0 00 00 00 48 89 ac 24 98 00 00 00 48 8d  ......H..$....H.
	0x0020 ac 24 98 00 00 00 48 8b 00 48 89 44 24 50 44 0f  .$....H..H.D$PD.
	0x0030 11 7c 24 68 44 0f 11 7c 24 78 44 0f 11 bc 24 88  .|$hD..|$xD...$.
	0x0040 00 00 00 48 8d 3c 24 48 8d 7f d0 48 89 6c 24 f0  ...H.<$H...H.l$.
	0x0050 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8d  H.l$......H.m.H.
	0x0060 0c 24 48 89 4c 24 78 e8 00 00 00 00 89 44 24 74  .$H.L$x......D$t
	0x0070 48 8b 44 24 50 48 8b 00 48 89 44 24 58 48 8d 44  H.D$PH..H.D$XH.D
	0x0080 24 68 48 89 44 24 60 48 8b 4c 24 58 84 00 48 8b  $hH.D$`H.L$X..H.
	0x0090 41 48 8b 5c 24 74 48 8b ac 24 98 00 00 00 48 81  AH.\$tH..$....H.
	0x00a0 c4 a0 00 00 00 c3 48 89 44 24 08 e8 00 00 00 00  ......H.D$......
	0x00b0 48 8b 44 24 08 e9 46 ff ff ff                    H.D$..F...
	rel 86+4 t=7 runtime.duffzero+336
	rel 104+4 t=7 runtime.fastrand+0
	rel 172+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64] STEXT dupok size=189 args=0x8 locals=0x98 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:254)	TEXT	github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64](SB), DUPOK|ABIInternal, $152-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:254)	LEAQ	-24(SP), R12
	0x0005 00005 (D:\gitee\swiss\minswiss\main.go:254)	CMPQ	R12, 16(R14)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$0, $-2
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:254)	JLS	169
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$0, $-1
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:254)	SUBQ	$152, SP
	0x0016 00022 (D:\gitee\swiss\minswiss\main.go:254)	MOVQ	BP, 144(SP)
	0x001e 00030 (D:\gitee\swiss\minswiss\main.go:254)	LEAQ	144(SP), BP
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	FUNCDATA	$0, gclocals路m/6RUmNv6NBhMUL8eleFFA==(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	FUNCDATA	$1, gclocals路O+miRm5G4+5xMEd53epf0A==(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	FUNCDATA	$2, github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64].stkobj(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64].arginfo1(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64].argliveinfo(SB)
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$3, $1
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:254)	MOVQ	AX, github.com/dolthub/swiss/minswiss..dict+160(SP)
	0x002e 00046 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$3, $-1
	0x002e 00046 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_6+96(SP)
	0x0034 00052 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_6+112(SP)
	0x003a 00058 (D:\gitee\swiss\minswiss\main.go:255)	MOVUPS	X15, github.com/dolthub/swiss/minswiss..autotmp_6+128(SP)
	0x0043 00067 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_7(SP), DI
	0x0047 00071 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-2
	0x0047 00071 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	-48(DI), DI
	0x004b 00075 (D:\gitee\swiss\minswiss\main.go:255)	DUFFZERO	$336
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-1
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_7(SP), CX
	0x0062 00098 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	CX, github.com/dolthub/swiss/minswiss..autotmp_6+112(SP)
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$1, $1
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:255)	CALL	runtime.fastrand(SB)
	0x006c 00108 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-2
	0x006c 00108 (D:\gitee\swiss\minswiss\main.go:255)	MOVL	AX, github.com/dolthub/swiss/minswiss..autotmp_6+108(SP)
	0x0070 00112 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	github.com/dolthub/swiss/minswiss..dict+160(SP), AX
	0x0078 00120 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	(AX), AX
	0x007b 00123 (D:\gitee\swiss\minswiss\main.go:255)	PCDATA	$0, $-1
	0x007b 00123 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	AX, github.com/dolthub/swiss/minswiss.a+80(SP)
	0x0080 00128 (D:\gitee\swiss\minswiss\main.go:255)	LEAQ	github.com/dolthub/swiss/minswiss..autotmp_6+96(SP), AX
	0x0085 00133 (D:\gitee\swiss\minswiss\main.go:255)	MOVQ	AX, github.com/dolthub/swiss/minswiss.a+88(SP)
	0x008a 00138 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	github.com/dolthub/swiss/minswiss.a+80(SP), CX
	0x008f 00143 (D:\gitee\swiss\minswiss\main.go:257)	TESTB	AL, (AX)
	0x0091 00145 (D:\gitee\swiss\minswiss\main.go:257)	MOVQ	72(CX), AX
	0x0095 00149 (D:\gitee\swiss\minswiss\main.go:257)	MOVL	github.com/dolthub/swiss/minswiss..autotmp_6+108(SP), BX
	0x0099 00153 (D:\gitee\swiss\minswiss\main.go:258)	MOVQ	144(SP), BP
	0x00a1 00161 (D:\gitee\swiss\minswiss\main.go:258)	ADDQ	$152, SP
	0x00a8 00168 (D:\gitee\swiss\minswiss\main.go:258)	RET
	0x00a9 00169 (D:\gitee\swiss\minswiss\main.go:258)	NOP
	0x00a9 00169 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$1, $-1
	0x00a9 00169 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$0, $-2
	0x00a9 00169 (D:\gitee\swiss\minswiss\main.go:254)	MOVQ	AX, 8(SP)
	0x00ae 00174 (D:\gitee\swiss\minswiss\main.go:254)	CALL	runtime.morestack_noctxt(SB)
	0x00b3 00179 (D:\gitee\swiss\minswiss\main.go:254)	MOVQ	8(SP), AX
	0x00b8 00184 (D:\gitee\swiss\minswiss\main.go:254)	PCDATA	$0, $-1
	0x00b8 00184 (D:\gitee\swiss\minswiss\main.go:254)	JMP	0
	0x0000 4c 8d 64 24 e8 4d 3b 66 10 0f 86 9a 00 00 00 48  L.d$.M;f.......H
	0x0010 81 ec 98 00 00 00 48 89 ac 24 90 00 00 00 48 8d  ......H..$....H.
	0x0020 ac 24 90 00 00 00 48 89 84 24 a0 00 00 00 44 0f  .$....H..$....D.
	0x0030 11 7c 24 60 44 0f 11 7c 24 70 44 0f 11 bc 24 80  .|$`D..|$pD...$.
	0x0040 00 00 00 48 8d 3c 24 48 8d 7f d0 48 89 6c 24 f0  ...H.<$H...H.l$.
	0x0050 48 8d 6c 24 f0 e8 00 00 00 00 48 8b 6d 00 48 8d  H.l$......H.m.H.
	0x0060 0c 24 48 89 4c 24 70 e8 00 00 00 00 89 44 24 6c  .$H.L$p......D$l
	0x0070 48 8b 84 24 a0 00 00 00 48 8b 00 48 89 44 24 50  H..$....H..H.D$P
	0x0080 48 8d 44 24 60 48 89 44 24 58 48 8b 4c 24 50 84  H.D$`H.D$XH.L$P.
	0x0090 00 48 8b 41 48 8b 5c 24 6c 48 8b ac 24 90 00 00  .H.AH.\$lH..$...
	0x00a0 00 48 81 c4 98 00 00 00 c3 48 89 44 24 08 e8 00  .H.......H.D$...
	0x00b0 00 00 00 48 8b 44 24 08 e9 43 ff ff ff           ...H.D$..C...
	rel 86+4 t=7 runtime.duffzero+336
	rel 104+4 t=7 runtime.fastrand+0
	rel 175+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident STEXT dupok nosplit size=4 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident(SB), DUPOK|NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$0, gclocals路Jog/qYB4a+fiwM7je5AA/g==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident.arginfo1(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident.argliveinfo(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	PCDATA	$3, $1
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:95)	MOVL	72(AX), AX
	0x0003 00003 (D:\gitee\swiss\minswiss\main.go:95)	RET
	0x0000 8b 40 48 c3                                      .@H.
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count STEXT dupok nosplit size=9 args=0x10 locals=0x0 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count(SB), DUPOK|NOSPLIT|ABIInternal, $0-16
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$0, gclocals路Jog/qYB4a+fiwM7je5AA/g==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count.arginfo1(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count.argliveinfo(SB)
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	PCDATA	$3, $1
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:91)	MOVL	72(AX), CX
	0x0003 00003 (D:\gitee\swiss\minswiss\main.go:91)	SUBL	76(AX), CX
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:91)	MOVL	CX, AX
	0x0008 00008 (D:\gitee\swiss\minswiss\main.go:91)	RET
	0x0000 8b 48 48 2b 48 4c 89 c8 c3                       .HH+HL...
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put STEXT dupok size=830 args=0x20 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:53)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put(SB), DUPOK|ABIInternal, $64-32
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:53)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:53)	JLS	776
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-1
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:53)	SUBQ	$64, SP
	0x000e 00014 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	BP, 56(SP)
	0x0013 00019 (D:\gitee\swiss\minswiss\main.go:53)	LEAQ	56(SP), BP
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$0, gclocals路3t8WlE+CEPpgnWbvvNfnSA==(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$1, gclocals路ykHN0vawYuq1dUW4zEe2gA==(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put.arginfo1(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put.argliveinfo(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$3, $1
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-2
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	AX, github.com/dolthub/swiss/minswiss.m+72(SP)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	DI, github.com/dolthub/swiss/minswiss.value+96(SP)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	CX, github.com/dolthub/swiss/minswiss.key+88(SP)
	0x0027 00039 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$3, $2
	0x0027 00039 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	48(AX), DX
	0x002b 00043 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	56(AX), SI
	0x002f 00047 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	8(BX), R8
	0x0033 00051 (D:\gitee\swiss\minswiss\main.go:54)	PCDATA	$0, $-1
	0x0033 00051 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	SI, BX
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	DX, AX
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	CX, R9
	0x003c 00060 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	R8, CX
	0x003f 00063 (D:\gitee\swiss\minswiss\main.go:54)	MOVQ	R9, DI
	0x0042 00066 (D:\gitee\swiss\minswiss\main.go:54)	PCDATA	$1, $1
	0x0042 00066 (D:\gitee\swiss\minswiss\main.go:54)	CALL	github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64(SB)
	0x0047 00071 (D:\gitee\swiss\minswiss\main.go:55)	MOVQ	AX, DX
	0x004a 00074 (D:\gitee\swiss\minswiss\main.go:55)	ANDQ	$-128, AX
	0x004e 00078 (D:\gitee\swiss\minswiss\main.go:55)	SHRQ	$7, AX
	0x0052 00082 (D:\gitee\swiss\minswiss\main.go:55)	ANDL	$127, DX
	0x0055 00085 (D:\gitee\swiss\minswiss\main.go:55)	MOVQ	DX, github.com/dolthub/swiss/minswiss..autotmp_33+48(SP)
	0x005a 00090 (D:\gitee\swiss\minswiss\main.go:57)	MOVQ	github.com/dolthub/swiss/minswiss.m+72(SP), SI
	0x005f 00095 (D:\gitee\swiss\minswiss\main.go:57)	MOVQ	32(SI), R8
	0x0063 00099 (D:\gitee\swiss\minswiss\main.go:57)	MOVQ	R8, github.com/dolthub/swiss/minswiss..autotmp_34+40(SP)
	0x0068 00104 (D:\gitee\swiss\minswiss\main.go:58)	MOVL	AX, R9
	0x006b 00107 (D:\gitee\swiss\minswiss\main.go:58)	MOVL	R8, R10
	0x006e 00110 (D:\gitee\swiss\minswiss\main.go:58)	IMULQ	R10, R9
	0x0072 00114 (D:\gitee\swiss\minswiss\main.go:58)	SHRQ	$32, R9
	0x0076 00118 (D:\gitee\swiss\minswiss\main.go:59)	MOVQ	github.com/dolthub/swiss/minswiss.key+88(SP), R10
	0x007b 00123 (D:\gitee\swiss\minswiss\main.go:59)	JMP	128
	0x007d 00125 (D:\gitee\swiss\minswiss\main.go:60)	MOVL	BX, R9
	0x0080 00128 (D:\gitee\swiss\minswiss\main.go:60)	MOVQ	(SI), BX
	0x0083 00131 (D:\gitee\swiss\minswiss\main.go:60)	MOVQ	8(SI), CX
	0x0087 00135 (D:\gitee\swiss\minswiss\main.go:60)	MOVL	R9, DI
	0x008a 00138 (D:\gitee\swiss\minswiss\main.go:60)	CMPQ	CX, DI
	0x008d 00141 (D:\gitee\swiss\minswiss\main.go:60)	JLS	767
	0x0093 00147 (D:\gitee\swiss\minswiss\main.go:60)	MOVQ	DI, R11
	0x0096 00150 (D:\gitee\swiss\minswiss\main.go:60)	SHLQ	$4, DI
	0x009a 00154 (<unknown line number>)	NOP
	0x009a 00154 (D:\gitee\swiss\minswiss\main.go:263)	MOVBQSX	DL, R12
	0x009e 00158 (D:\gitee\swiss\minswiss\main.go:263)	MOVQ	$72340172838076673, R13
	0x00a8 00168 (D:\gitee\swiss\minswiss\main.go:263)	IMULQ	R13, R12
	0x00ac 00172 (D:\gitee\swiss\minswiss\main.go:263)	XORQ	(BX)(DI*1), R12
	0x00b0 00176 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-72340172838076673, R15
	0x00ba 00186 (D:\gitee\swiss\minswiss\main.go:264)	LEAQ	(R15)(R12*1), R13
	0x00be 00190 (D:\gitee\swiss\minswiss\main.go:264)	NOTQ	R12
	0x00c1 00193 (D:\gitee\swiss\minswiss\main.go:264)	ANDQ	R12, R13
	0x00c4 00196 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-9187201950435737472, R12
	0x00ce 00206 (D:\gitee\swiss\minswiss\main.go:264)	ANDQ	R12, R13
	0x00d1 00209 (D:\gitee\swiss\minswiss\main.go:61)	MOVQ	R13, github.com/dolthub/swiss/minswiss.matches+32(SP)
	0x00d6 00214 (D:\gitee\swiss\minswiss\main.go:62)	JMP	285
	0x00d8 00216 (D:\gitee\swiss\minswiss\main.go:72)	PCDATA	$1, $-1
	0x00d8 00216 (<unknown line number>)	NOP
	0x00d8 00216 (D:\gitee\swiss\minswiss\main.go:268)	MOVQ	(BX)(DI*1), BX
	0x00dc 00220 (D:\gitee\swiss\minswiss\main.go:268)	XORQ	R12, BX
	0x00df 00223 (D:\gitee\swiss\minswiss\main.go:269)	LEAQ	(R15)(BX*1), R13
	0x00e3 00227 (D:\gitee\swiss\minswiss\main.go:269)	NOTQ	BX
	0x00e6 00230 (D:\gitee\swiss\minswiss\main.go:269)	ANDQ	BX, R13
	0x00e9 00233 (D:\gitee\swiss\minswiss\main.go:269)	ANDQ	R13, R12
	0x00ec 00236 (D:\gitee\swiss\minswiss\main.go:72)	MOVQ	R12, github.com/dolthub/swiss/minswiss.matches+32(SP)
	0x00f1 00241 (D:\gitee\swiss\minswiss\main.go:73)	TESTQ	R12, R12
	0x00f4 00244 (D:\gitee\swiss\minswiss\main.go:73)	JNE	484
	0x00fa 00250 (D:\gitee\swiss\minswiss\main.go:82)	LEAL	1(R9), BX
	0x00fe 00254 (D:\gitee\swiss\minswiss\main.go:82)	NOP
	0x0100 00256 (D:\gitee\swiss\minswiss\main.go:83)	CMPL	R8, BX
	0x0103 00259 (D:\gitee\swiss\minswiss\main.go:83)	JHI	125
	0x0109 00265 (D:\gitee\swiss\minswiss\main.go:83)	XORL	BX, BX
	0x010b 00267 (D:\gitee\swiss\minswiss\main.go:83)	JMP	125
	0x0110 00272 (D:\gitee\swiss\minswiss\main.go:83)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_34+40(SP), R8
	0x0115 00277 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	DX, R11
	0x0118 00280 (D:\gitee\swiss\minswiss\main.go:263)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_33+48(SP), DX
	0x011d 00285 (D:\gitee\swiss\minswiss\main.go:62)	MOVQ	github.com/dolthub/swiss/minswiss.matches+32(SP), R13
	0x0122 00290 (D:\gitee\swiss\minswiss\main.go:62)	TESTQ	R13, R13
	0x0125 00293 (D:\gitee\swiss\minswiss\main.go:62)	JEQ	216
	0x0127 00295 (D:\gitee\swiss\minswiss\main.go:273)	BSFQ	R13, CX
	0x012b 00299 (D:\gitee\swiss\minswiss\main.go:274)	CMPL	CX, $64
	0x012e 00302 (D:\gitee\swiss\minswiss\main.go:274)	SBBQ	DX, DX
	0x0131 00305 (D:\gitee\swiss\minswiss\main.go:63)	XCHGL	AX, AX
	0x0132 00306 (D:\gitee\swiss\minswiss\main.go:274)	MOVL	$1, R8
	0x0138 00312 (D:\gitee\swiss\minswiss\main.go:274)	SHLQ	CX, R8
	0x013b 00315 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	DX, R8
	0x013e 00318 (D:\gitee\swiss\minswiss\main.go:274)	NOTQ	R8
	0x0141 00321 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	R8, R13
	0x0144 00324 (D:\gitee\swiss\minswiss\main.go:274)	MOVQ	R13, github.com/dolthub/swiss/minswiss.matches+32(SP)
	0x0149 00329 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	8(SI), DX
	0x014d 00333 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	(SI), R8
	0x0150 00336 (D:\gitee\swiss\minswiss\main.go:64)	CMPQ	DX, R11
	0x0153 00339 (D:\gitee\swiss\minswiss\main.go:64)	JLS	756
	0x0159 00345 (D:\gitee\swiss\minswiss\main.go:64)	LEAQ	(DI)(R8*1), DX
	0x015d 00349 (D:\gitee\swiss\minswiss\main.go:64)	LEAQ	8(DX), DX
	0x0161 00353 (D:\gitee\swiss\minswiss\main.go:275)	SHRL	$3, CX
	0x0164 00356 (D:\gitee\swiss\minswiss\main.go:64)	CMPQ	CX, $8
	0x0168 00360 (D:\gitee\swiss\minswiss\main.go:64)	JCC	744
	0x016e 00366 (D:\gitee\swiss\minswiss\main.go:64)	MOVBLZX	(DX)(CX*1), DX
	0x0172 00370 (D:\gitee\swiss\minswiss\main.go:64)	CMPB	DL, AL
	0x0174 00372 (D:\gitee\swiss\minswiss\main.go:64)	JNE	427
	0x0176 00374 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	32(SI), DX
	0x017a 00378 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	24(SI), R8
	0x017e 00382 (D:\gitee\swiss\minswiss\main.go:64)	NOP
	0x0180 00384 (D:\gitee\swiss\minswiss\main.go:64)	CMPQ	DX, R11
	0x0183 00387 (D:\gitee\swiss\minswiss\main.go:64)	JLS	733
	0x0189 00393 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	R11, DX
	0x018c 00396 (D:\gitee\swiss\minswiss\main.go:64)	SHLQ	$7, R11
	0x0190 00400 (D:\gitee\swiss\minswiss\main.go:64)	ADDQ	R11, R8
	0x0193 00403 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	(R8)(CX*8), R13
	0x0197 00407 (D:\gitee\swiss\minswiss\main.go:64)	NOP
	0x01a0 00416 (D:\gitee\swiss\minswiss\main.go:64)	CMPQ	R13, R10
	0x01a3 00419 (D:\gitee\swiss\minswiss\main.go:64)	JNE	272
	0x01a9 00425 (D:\gitee\swiss\minswiss\main.go:64)	JMP	435
	0x01ab 00427 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	R11, DX
	0x01ae 00430 (D:\gitee\swiss\minswiss\main.go:64)	JMP	272
	0x01b3 00435 (D:\gitee\swiss\minswiss\main.go:65)	MOVQ	R10, (R8)(CX*8)
	0x01b7 00439 (D:\gitee\swiss\minswiss\main.go:66)	MOVQ	32(SI), BX
	0x01bb 00443 (D:\gitee\swiss\minswiss\main.go:66)	MOVQ	24(SI), SI
	0x01bf 00447 (D:\gitee\swiss\minswiss\main.go:66)	NOP
	0x01c0 00448 (D:\gitee\swiss\minswiss\main.go:66)	CMPQ	BX, DX
	0x01c3 00451 (D:\gitee\swiss\minswiss\main.go:66)	JLS	722
	0x01c9 00457 (D:\gitee\swiss\minswiss\main.go:66)	LEAQ	(SI)(R11*1), AX
	0x01cd 00461 (D:\gitee\swiss\minswiss\main.go:66)	LEAQ	64(AX), AX
	0x01d1 00465 (D:\gitee\swiss\minswiss\main.go:66)	MOVQ	github.com/dolthub/swiss/minswiss.value+96(SP), DX
	0x01d6 00470 (D:\gitee\swiss\minswiss\main.go:66)	MOVQ	DX, (AX)(CX*8)
	0x01da 00474 (D:\gitee\swiss\minswiss\main.go:67)	MOVQ	56(SP), BP
	0x01df 00479 (D:\gitee\swiss\minswiss\main.go:67)	ADDQ	$64, SP
	0x01e3 00483 (D:\gitee\swiss\minswiss\main.go:67)	RET
	0x01e4 00484 (D:\gitee\swiss\minswiss\main.go:273)	BSFQ	R12, CX
	0x01e8 00488 (D:\gitee\swiss\minswiss\main.go:274)	CMPL	CX, $64
	0x01eb 00491 (D:\gitee\swiss\minswiss\main.go:274)	SBBQ	BX, BX
	0x01ee 00494 (D:\gitee\swiss\minswiss\main.go:74)	XCHGL	AX, AX
	0x01ef 00495 (D:\gitee\swiss\minswiss\main.go:274)	MOVL	$1, R8
	0x01f5 00501 (D:\gitee\swiss\minswiss\main.go:274)	SHLQ	CX, R8
	0x01f8 00504 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	BX, R8
	0x01fb 00507 (D:\gitee\swiss\minswiss\main.go:274)	NOTQ	R8
	0x01fe 00510 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	R8, R13
	0x0201 00513 (D:\gitee\swiss\minswiss\main.go:274)	MOVQ	$-9187201950435737472, BX
	0x020b 00523 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	BX, R13
	0x020e 00526 (D:\gitee\swiss\minswiss\main.go:274)	MOVQ	R13, github.com/dolthub/swiss/minswiss.matches+32(SP)
	0x0213 00531 (D:\gitee\swiss\minswiss\main.go:75)	MOVQ	32(SI), BX
	0x0217 00535 (D:\gitee\swiss\minswiss\main.go:75)	MOVQ	24(SI), R8
	0x021b 00539 (D:\gitee\swiss\minswiss\main.go:75)	NOP
	0x0220 00544 (D:\gitee\swiss\minswiss\main.go:75)	CMPQ	BX, R11
	0x0223 00547 (D:\gitee\swiss\minswiss\main.go:75)	JLS	711
	0x0229 00553 (D:\gitee\swiss\minswiss\main.go:75)	MOVQ	R11, BX
	0x022c 00556 (D:\gitee\swiss\minswiss\main.go:75)	SHLQ	$7, R11
	0x0230 00560 (D:\gitee\swiss\minswiss\main.go:75)	ADDQ	R11, R8
	0x0233 00563 (D:\gitee\swiss\minswiss\main.go:275)	SHRL	$3, CX
	0x0236 00566 (D:\gitee\swiss\minswiss\main.go:75)	CMPQ	CX, $8
	0x023a 00570 (D:\gitee\swiss\minswiss\main.go:75)	JCC	699
	0x023c 00572 (D:\gitee\swiss\minswiss\main.go:75)	MOVQ	R10, (R8)(CX*8)
	0x0240 00576 (D:\gitee\swiss\minswiss\main.go:76)	MOVQ	32(SI), R8
	0x0244 00580 (D:\gitee\swiss\minswiss\main.go:76)	MOVQ	24(SI), R9
	0x0248 00584 (D:\gitee\swiss\minswiss\main.go:76)	CMPQ	R8, BX
	0x024b 00587 (D:\gitee\swiss\minswiss\main.go:76)	JLS	688
	0x024d 00589 (D:\gitee\swiss\minswiss\main.go:76)	LEAQ	(R9)(R11*1), R8
	0x0251 00593 (D:\gitee\swiss\minswiss\main.go:76)	LEAQ	64(R8), R8
	0x0255 00597 (D:\gitee\swiss\minswiss\main.go:76)	MOVQ	github.com/dolthub/swiss/minswiss.value+96(SP), R9
	0x025a 00602 (D:\gitee\swiss\minswiss\main.go:76)	MOVQ	R9, (R8)(CX*8)
	0x025e 00606 (D:\gitee\swiss\minswiss\main.go:77)	MOVQ	8(SI), R8
	0x0262 00610 (D:\gitee\swiss\minswiss\main.go:77)	MOVQ	(SI), R9
	0x0265 00613 (D:\gitee\swiss\minswiss\main.go:77)	CMPQ	R8, BX
	0x0268 00616 (D:\gitee\swiss\minswiss\main.go:77)	JLS	677
	0x026a 00618 (D:\gitee\swiss\minswiss\main.go:77)	LEAQ	(R9)(DI*1), R8
	0x026e 00622 (D:\gitee\swiss\minswiss\main.go:77)	MOVB	DL, (R8)(CX*1)
	0x0272 00626 (D:\gitee\swiss\minswiss\main.go:78)	MOVQ	8(SI), DX
	0x0276 00630 (D:\gitee\swiss\minswiss\main.go:78)	MOVQ	(SI), R8
	0x0279 00633 (D:\gitee\swiss\minswiss\main.go:78)	CMPQ	DX, BX
	0x027c 00636 (D:\gitee\swiss\minswiss\main.go:78)	JLS	662
	0x027e 00638 (D:\gitee\swiss\minswiss\main.go:78)	LEAQ	(R8)(DI*1), DX
	0x0282 00642 (D:\gitee\swiss\minswiss\main.go:78)	LEAQ	8(DX), DX
	0x0286 00646 (D:\gitee\swiss\minswiss\main.go:78)	MOVB	AL, (DX)(CX*1)
	0x0289 00649 (D:\gitee\swiss\minswiss\main.go:79)	INCL	72(SI)
	0x028c 00652 (D:\gitee\swiss\minswiss\main.go:80)	MOVQ	56(SP), BP
	0x0291 00657 (D:\gitee\swiss\minswiss\main.go:80)	ADDQ	$64, SP
	0x0295 00661 (D:\gitee\swiss\minswiss\main.go:80)	RET
	0x0296 00662 (D:\gitee\swiss\minswiss\main.go:78)	MOVQ	BX, AX
	0x0299 00665 (D:\gitee\swiss\minswiss\main.go:78)	MOVQ	DX, CX
	0x029c 00668 (D:\gitee\swiss\minswiss\main.go:78)	PCDATA	$1, $2
	0x029c 00668 (D:\gitee\swiss\minswiss\main.go:78)	NOP
	0x02a0 00672 (D:\gitee\swiss\minswiss\main.go:78)	CALL	runtime.panicIndex(SB)
	0x02a5 00677 (D:\gitee\swiss\minswiss\main.go:77)	MOVQ	BX, AX
	0x02a8 00680 (D:\gitee\swiss\minswiss\main.go:77)	MOVQ	R8, CX
	0x02ab 00683 (D:\gitee\swiss\minswiss\main.go:77)	CALL	runtime.panicIndex(SB)
	0x02b0 00688 (D:\gitee\swiss\minswiss\main.go:76)	MOVQ	BX, AX
	0x02b3 00691 (D:\gitee\swiss\minswiss\main.go:76)	MOVQ	R8, CX
	0x02b6 00694 (D:\gitee\swiss\minswiss\main.go:76)	CALL	runtime.panicIndex(SB)
	0x02bb 00699 (D:\gitee\swiss\minswiss\main.go:75)	MOVL	CX, AX
	0x02bd 00701 (D:\gitee\swiss\minswiss\main.go:75)	MOVL	$8, CX
	0x02c2 00706 (D:\gitee\swiss\minswiss\main.go:75)	CALL	runtime.panicIndex(SB)
	0x02c7 00711 (D:\gitee\swiss\minswiss\main.go:75)	MOVQ	R11, AX
	0x02ca 00714 (D:\gitee\swiss\minswiss\main.go:75)	MOVQ	BX, CX
	0x02cd 00717 (D:\gitee\swiss\minswiss\main.go:75)	CALL	runtime.panicIndex(SB)
	0x02d2 00722 (D:\gitee\swiss\minswiss\main.go:66)	MOVQ	DX, AX
	0x02d5 00725 (D:\gitee\swiss\minswiss\main.go:66)	MOVQ	BX, CX
	0x02d8 00728 (D:\gitee\swiss\minswiss\main.go:66)	CALL	runtime.panicIndex(SB)
	0x02dd 00733 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	R11, AX
	0x02e0 00736 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	DX, CX
	0x02e3 00739 (D:\gitee\swiss\minswiss\main.go:64)	CALL	runtime.panicIndex(SB)
	0x02e8 00744 (D:\gitee\swiss\minswiss\main.go:64)	MOVL	CX, AX
	0x02ea 00746 (D:\gitee\swiss\minswiss\main.go:64)	MOVL	$8, CX
	0x02ef 00751 (D:\gitee\swiss\minswiss\main.go:64)	CALL	runtime.panicIndex(SB)
	0x02f4 00756 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	R11, AX
	0x02f7 00759 (D:\gitee\swiss\minswiss\main.go:64)	MOVQ	DX, CX
	0x02fa 00762 (D:\gitee\swiss\minswiss\main.go:64)	CALL	runtime.panicIndex(SB)
	0x02ff 00767 (D:\gitee\swiss\minswiss\main.go:60)	MOVQ	DI, AX
	0x0302 00770 (D:\gitee\swiss\minswiss\main.go:60)	CALL	runtime.panicIndex(SB)
	0x0307 00775 (D:\gitee\swiss\minswiss\main.go:60)	XCHGL	AX, AX
	0x0308 00776 (D:\gitee\swiss\minswiss\main.go:60)	NOP
	0x0308 00776 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$1, $-1
	0x0308 00776 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-2
	0x0308 00776 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	AX, 8(SP)
	0x030d 00781 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	BX, 16(SP)
	0x0312 00786 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	CX, 24(SP)
	0x0317 00791 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	DI, 32(SP)
	0x031c 00796 (D:\gitee\swiss\minswiss\main.go:53)	NOP
	0x0320 00800 (D:\gitee\swiss\minswiss\main.go:53)	CALL	runtime.morestack_noctxt(SB)
	0x0325 00805 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	8(SP), AX
	0x032a 00810 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	16(SP), BX
	0x032f 00815 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	24(SP), CX
	0x0334 00820 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	32(SP), DI
	0x0339 00825 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-1
	0x0339 00825 (D:\gitee\swiss\minswiss\main.go:53)	JMP	0
	0x0000 49 3b 66 10 0f 86 fe 02 00 00 48 83 ec 40 48 89  I;f.......H..@H.
	0x0010 6c 24 38 48 8d 6c 24 38 48 89 44 24 48 48 89 7c  l$8H.l$8H.D$HH.|
	0x0020 24 60 48 89 4c 24 58 48 8b 50 30 48 8b 70 38 4c  $`H.L$XH.P0H.p8L
	0x0030 8b 43 08 48 89 f3 48 89 d0 49 89 c9 4c 89 c1 4c  .C.H..H..I..L..L
	0x0040 89 cf e8 00 00 00 00 48 89 c2 48 83 e0 80 48 c1  .......H..H...H.
	0x0050 e8 07 83 e2 7f 48 89 54 24 30 48 8b 74 24 48 4c  .....H.T$0H.t$HL
	0x0060 8b 46 20 4c 89 44 24 28 41 89 c1 45 89 c2 4d 0f  .F L.D$(A..E..M.
	0x0070 af ca 49 c1 e9 20 4c 8b 54 24 58 eb 03 41 89 d9  ..I.. L.T$X..A..
	0x0080 48 8b 1e 48 8b 4e 08 44 89 cf 48 39 f9 0f 86 6c  H..H.N.D..H9...l
	0x0090 02 00 00 49 89 fb 48 c1 e7 04 4c 0f be e2 49 bd  ...I..H...L...I.
	0x00a0 01 01 01 01 01 01 01 01 4d 0f af e5 4c 33 24 3b  ........M...L3$;
	0x00b0 49 bf ff fe fe fe fe fe fe fe 4f 8d 2c 27 49 f7  I.........O.,'I.
	0x00c0 d4 4d 21 e5 49 bc 80 80 80 80 80 80 80 80 4d 21  .M!.I.........M!
	0x00d0 e5 4c 89 6c 24 20 eb 45 48 8b 1c 3b 4c 31 e3 4d  .L.l$ .EH..;L1.M
	0x00e0 8d 2c 1f 48 f7 d3 49 21 dd 4d 21 ec 4c 89 64 24  .,.H..I!.M!.L.d$
	0x00f0 20 4d 85 e4 0f 85 ea 00 00 00 41 8d 59 01 66 90   M........A.Y.f.
	0x0100 41 39 d8 0f 87 74 ff ff ff 31 db e9 6d ff ff ff  A9...t...1..m...
	0x0110 4c 8b 44 24 28 49 89 d3 48 8b 54 24 30 4c 8b 6c  L.D$(I..H.T$0L.l
	0x0120 24 20 4d 85 ed 74 b1 49 0f bc cd 83 f9 40 48 19  $ M..t.I.....@H.
	0x0130 d2 90 41 b8 01 00 00 00 49 d3 e0 49 21 d0 49 f7  ..A.....I..I!.I.
	0x0140 d0 4d 21 c5 4c 89 6c 24 20 48 8b 56 08 4c 8b 06  .M!.L.l$ H.V.L..
	0x0150 4c 39 da 0f 86 9b 01 00 00 4a 8d 14 07 48 8d 52  L9.......J...H.R
	0x0160 08 c1 e9 03 48 83 f9 08 0f 83 7a 01 00 00 0f b6  ....H.....z.....
	0x0170 14 0a 38 c2 75 35 48 8b 56 20 4c 8b 46 18 66 90  ..8.u5H.V L.F.f.
	0x0180 4c 39 da 0f 86 54 01 00 00 4c 89 da 49 c1 e3 07  L9...T...L..I...
	0x0190 4d 01 d8 4d 8b 2c c8 66 0f 1f 84 00 00 00 00 00  M..M.,.f........
	0x01a0 4d 39 d5 0f 85 67 ff ff ff eb 08 4c 89 da e9 5d  M9...g.....L...]
	0x01b0 ff ff ff 4d 89 14 c8 48 8b 5e 20 48 8b 76 18 90  ...M...H.^ H.v..
	0x01c0 48 39 d3 0f 86 09 01 00 00 4a 8d 04 1e 48 8d 40  H9.......J...H.@
	0x01d0 40 48 8b 54 24 60 48 89 14 c8 48 8b 6c 24 38 48  @H.T$`H...H.l$8H
	0x01e0 83 c4 40 c3 49 0f bc cc 83 f9 40 48 19 db 90 41  ..@.I.....@H...A
	0x01f0 b8 01 00 00 00 49 d3 e0 49 21 d8 49 f7 d0 4d 21  .....I..I!.I..M!
	0x0200 c5 48 bb 80 80 80 80 80 80 80 80 49 21 dd 4c 89  .H.........I!.L.
	0x0210 6c 24 20 48 8b 5e 20 4c 8b 46 18 0f 1f 44 00 00  l$ H.^ L.F...D..
	0x0220 4c 39 db 0f 86 9e 00 00 00 4c 89 db 49 c1 e3 07  L9.......L..I...
	0x0230 4d 01 d8 c1 e9 03 48 83 f9 08 73 7f 4d 89 14 c8  M.....H...s.M...
	0x0240 4c 8b 46 20 4c 8b 4e 18 49 39 d8 76 63 4f 8d 04  L.F L.N.I9.vcO..
	0x0250 19 4d 8d 40 40 4c 8b 4c 24 60 4d 89 0c c8 4c 8b  .M.@@L.L$`M...L.
	0x0260 46 08 4c 8b 0e 49 39 d8 76 3b 4d 8d 04 39 41 88  F.L..I9.v;M..9A.
	0x0270 14 08 48 8b 56 08 4c 8b 06 48 39 da 76 18 49 8d  ..H.V.L..H9.v.I.
	0x0280 14 38 48 8d 52 08 88 04 0a ff 46 48 48 8b 6c 24  .8H.R.....FHH.l$
	0x0290 38 48 83 c4 40 c3 48 89 d8 48 89 d1 0f 1f 40 00  8H..@.H..H....@.
	0x02a0 e8 00 00 00 00 48 89 d8 4c 89 c1 e8 00 00 00 00  .....H..L.......
	0x02b0 48 89 d8 4c 89 c1 e8 00 00 00 00 89 c8 b9 08 00  H..L............
	0x02c0 00 00 e8 00 00 00 00 4c 89 d8 48 89 d9 e8 00 00  .......L..H.....
	0x02d0 00 00 48 89 d0 48 89 d9 e8 00 00 00 00 4c 89 d8  ..H..H.......L..
	0x02e0 48 89 d1 e8 00 00 00 00 89 c8 b9 08 00 00 00 e8  H...............
	0x02f0 00 00 00 00 4c 89 d8 48 89 d1 e8 00 00 00 00 48  ....L..H.......H
	0x0300 89 f8 e8 00 00 00 00 90 48 89 44 24 08 48 89 5c  ........H.D$.H.\
	0x0310 24 10 48 89 4c 24 18 48 89 7c 24 20 0f 1f 40 00  $.H.L$.H.|$ ..@.
	0x0320 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x0330 8b 4c 24 18 48 8b 7c 24 20 e9 c2 fc ff ff        .L$.H.|$ .....
	rel 67+4 t=7 github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64+0
	rel 673+4 t=7 runtime.panicIndex+0
	rel 684+4 t=7 runtime.panicIndex+0
	rel 695+4 t=7 runtime.panicIndex+0
	rel 707+4 t=7 runtime.panicIndex+0
	rel 718+4 t=7 runtime.panicIndex+0
	rel 729+4 t=7 runtime.panicIndex+0
	rel 740+4 t=7 runtime.panicIndex+0
	rel 752+4 t=7 runtime.panicIndex+0
	rel 763+4 t=7 runtime.panicIndex+0
	rel 771+4 t=7 runtime.panicIndex+0
	rel 801+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get STEXT dupok size=569 args=0x18 locals=0x40 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:21)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get(SB), DUPOK|ABIInternal, $64-24
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:21)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:21)	JLS	526
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-1
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:21)	SUBQ	$64, SP
	0x000e 00014 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	BP, 56(SP)
	0x0013 00019 (D:\gitee\swiss\minswiss\main.go:21)	LEAQ	56(SP), BP
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$0, gclocals路3t8WlE+CEPpgnWbvvNfnSA==(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$1, gclocals路ykHN0vawYuq1dUW4zEe2gA==(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get.arginfo1(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get.argliveinfo(SB)
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$3, $1
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-2
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	AX, github.com/dolthub/swiss/minswiss.m+72(SP)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	CX, github.com/dolthub/swiss/minswiss.key+88(SP)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$3, $2
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	48(AX), DX
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	56(AX), SI
	0x002a 00042 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	(BX), R8
	0x002d 00045 (D:\gitee\swiss\minswiss\main.go:22)	PCDATA	$0, $-1
	0x002d 00045 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	SI, BX
	0x0030 00048 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	CX, DI
	0x0033 00051 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	R8, CX
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:22)	MOVQ	DX, AX
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:22)	PCDATA	$1, $1
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:22)	CALL	github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64(SB)
	0x003e 00062 (D:\gitee\swiss\minswiss\main.go:23)	MOVQ	AX, DX
	0x0041 00065 (D:\gitee\swiss\minswiss\main.go:23)	ANDQ	$-128, AX
	0x0045 00069 (D:\gitee\swiss\minswiss\main.go:23)	SHRQ	$7, AX
	0x0049 00073 (D:\gitee\swiss\minswiss\main.go:23)	ANDL	$127, DX
	0x004c 00076 (D:\gitee\swiss\minswiss\main.go:23)	MOVQ	DX, github.com/dolthub/swiss/minswiss..autotmp_29+48(SP)
	0x0051 00081 (D:\gitee\swiss\minswiss\main.go:25)	MOVQ	github.com/dolthub/swiss/minswiss.m+72(SP), SI
	0x0056 00086 (D:\gitee\swiss\minswiss\main.go:25)	MOVQ	32(SI), R8
	0x005a 00090 (D:\gitee\swiss\minswiss\main.go:26)	MOVL	AX, R9
	0x005d 00093 (D:\gitee\swiss\minswiss\main.go:26)	MOVL	R8, R10
	0x0060 00096 (D:\gitee\swiss\minswiss\main.go:26)	IMULQ	R9, R10
	0x0064 00100 (D:\gitee\swiss\minswiss\main.go:26)	SHRQ	$32, R10
	0x0068 00104 (D:\gitee\swiss\minswiss\main.go:27)	MOVQ	github.com/dolthub/swiss/minswiss.key+88(SP), R9
	0x006d 00109 (D:\gitee\swiss\minswiss\main.go:27)	JMP	117
	0x006f 00111 (D:\gitee\swiss\minswiss\main.go:263)	MOVQ	CX, DX
	0x0072 00114 (D:\gitee\swiss\minswiss\main.go:28)	MOVL	DI, R10
	0x0075 00117 (D:\gitee\swiss\minswiss\main.go:28)	MOVQ	(SI), DI
	0x0078 00120 (D:\gitee\swiss\minswiss\main.go:28)	MOVQ	8(SI), CX
	0x007c 00124 (D:\gitee\swiss\minswiss\main.go:28)	MOVL	R10, R11
	0x007f 00127 (D:\gitee\swiss\minswiss\main.go:28)	NOP
	0x0080 00128 (D:\gitee\swiss\minswiss\main.go:28)	CMPQ	CX, R11
	0x0083 00131 (D:\gitee\swiss\minswiss\main.go:28)	JLS	517
	0x0089 00137 (D:\gitee\swiss\minswiss\main.go:28)	MOVL	R10, github.com/dolthub/swiss/minswiss.g+36(SP)
	0x008e 00142 (D:\gitee\swiss\minswiss\main.go:28)	MOVQ	R11, R12
	0x0091 00145 (D:\gitee\swiss\minswiss\main.go:28)	SHLQ	$4, R11
	0x0095 00149 (<unknown line number>)	NOP
	0x0095 00149 (D:\gitee\swiss\minswiss\main.go:263)	MOVBQSX	DL, R13
	0x0099 00153 (D:\gitee\swiss\minswiss\main.go:263)	MOVQ	$72340172838076673, R15
	0x00a3 00163 (D:\gitee\swiss\minswiss\main.go:263)	IMULQ	R15, R13
	0x00a7 00167 (D:\gitee\swiss\minswiss\main.go:263)	XORQ	(DI)(R11*1), R13
	0x00ab 00171 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-72340172838076673, R15
	0x00b5 00181 (D:\gitee\swiss\minswiss\main.go:23)	MOVQ	DX, CX
	0x00b8 00184 (D:\gitee\swiss\minswiss\main.go:264)	LEAQ	(R15)(R13*1), DX
	0x00bc 00188 (D:\gitee\swiss\minswiss\main.go:264)	NOTQ	R13
	0x00bf 00191 (D:\gitee\swiss\minswiss\main.go:264)	ANDQ	DX, R13
	0x00c2 00194 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-9187201950435737472, DX
	0x00cc 00204 (D:\gitee\swiss\minswiss\main.go:264)	ANDQ	DX, R13
	0x00cf 00207 (D:\gitee\swiss\minswiss\main.go:29)	MOVQ	R13, github.com/dolthub/swiss/minswiss.matches+40(SP)
	0x00d4 00212 (D:\gitee\swiss\minswiss\main.go:30)	JMP	298
	0x00d6 00214 (D:\gitee\swiss\minswiss\main.go:39)	PCDATA	$1, $-1
	0x00d6 00214 (<unknown line number>)	NOP
	0x00d6 00214 (D:\gitee\swiss\minswiss\main.go:268)	MOVQ	(DI)(R11*1), DI
	0x00da 00218 (D:\gitee\swiss\minswiss\main.go:268)	XORQ	DX, DI
	0x00dd 00221 (D:\gitee\swiss\minswiss\main.go:269)	LEAQ	(R15)(DI*1), R11
	0x00e1 00225 (D:\gitee\swiss\minswiss\main.go:269)	NOTQ	DI
	0x00e4 00228 (D:\gitee\swiss\minswiss\main.go:269)	ANDQ	R11, DI
	0x00e7 00231 (D:\gitee\swiss\minswiss\main.go:269)	ANDQ	DX, DI
	0x00ea 00234 (D:\gitee\swiss\minswiss\main.go:39)	MOVQ	DI, github.com/dolthub/swiss/minswiss.matches+40(SP)
	0x00ef 00239 (D:\gitee\swiss\minswiss\main.go:40)	TESTQ	DI, DI
	0x00f2 00242 (D:\gitee\swiss\minswiss\main.go:40)	JNE	468
	0x00f8 00248 (D:\gitee\swiss\minswiss\main.go:44)	INCQ	64(SI)
	0x00fc 00252 (D:\gitee\swiss\minswiss\main.go:45)	LEAL	1(R10), DI
	0x0100 00256 (D:\gitee\swiss\minswiss\main.go:46)	CMPL	R8, DI
	0x0103 00259 (D:\gitee\swiss\minswiss\main.go:46)	JHI	111
	0x0109 00265 (D:\gitee\swiss\minswiss\main.go:46)	XORL	DI, DI
	0x010b 00267 (D:\gitee\swiss\minswiss\main.go:46)	JMP	111
	0x0110 00272 (D:\gitee\swiss\minswiss\main.go:263)	MOVQ	github.com/dolthub/swiss/minswiss..autotmp_29+48(SP), CX
	0x0115 00277 (D:\gitee\swiss\minswiss\main.go:46)	MOVQ	BX, R8
	0x0118 00280 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R10, R12
	0x011b 00283 (D:\gitee\swiss\minswiss\main.go:264)	MOVQ	$-72340172838076673, R15
	0x0125 00293 (D:\gitee\swiss\minswiss\main.go:45)	MOVL	github.com/dolthub/swiss/minswiss.g+36(SP), R10
	0x012a 00298 (D:\gitee\swiss\minswiss\main.go:30)	MOVQ	github.com/dolthub/swiss/minswiss.matches+40(SP), R13
	0x012f 00303 (D:\gitee\swiss\minswiss\main.go:30)	TESTQ	R13, R13
	0x0132 00306 (D:\gitee\swiss\minswiss\main.go:30)	JEQ	214
	0x0134 00308 (D:\gitee\swiss\minswiss\main.go:25)	MOVQ	R8, BX
	0x0137 00311 (D:\gitee\swiss\minswiss\main.go:273)	BSFQ	R13, R8
	0x013b 00315 (D:\gitee\swiss\minswiss\main.go:274)	CMPL	R8, $64
	0x013f 00319 (D:\gitee\swiss\minswiss\main.go:274)	SBBQ	R10, R10
	0x0142 00322 (D:\gitee\swiss\minswiss\main.go:31)	XCHGL	AX, AX
	0x0143 00323 (D:\gitee\swiss\minswiss\main.go:274)	MOVQ	R8, CX
	0x0146 00326 (D:\gitee\swiss\minswiss\main.go:274)	MOVL	$1, R15
	0x014c 00332 (D:\gitee\swiss\minswiss\main.go:274)	SHLQ	CX, R15
	0x014f 00335 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	R10, R15
	0x0152 00338 (D:\gitee\swiss\minswiss\main.go:274)	NOTQ	R15
	0x0155 00341 (D:\gitee\swiss\minswiss\main.go:274)	ANDQ	R13, R15
	0x0158 00344 (D:\gitee\swiss\minswiss\main.go:274)	MOVQ	R15, github.com/dolthub/swiss/minswiss.matches+40(SP)
	0x015d 00349 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	8(SI), R10
	0x0161 00353 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	(SI), R13
	0x0164 00356 (D:\gitee\swiss\minswiss\main.go:32)	CMPQ	R10, R12
	0x0167 00359 (D:\gitee\swiss\minswiss\main.go:32)	JLS	505
	0x016d 00365 (D:\gitee\swiss\minswiss\main.go:32)	LEAQ	(R13)(R11*1), R10
	0x0172 00370 (D:\gitee\swiss\minswiss\main.go:32)	LEAQ	8(R10), R10
	0x0176 00374 (D:\gitee\swiss\minswiss\main.go:275)	SHRL	$3, CX
	0x0179 00377 (D:\gitee\swiss\minswiss\main.go:32)	CMPQ	CX, $8
	0x017d 00381 (D:\gitee\swiss\minswiss\main.go:32)	JCC	493
	0x017f 00383 (D:\gitee\swiss\minswiss\main.go:32)	MOVBLZX	(R10)(CX*1), R8
	0x0184 00388 (D:\gitee\swiss\minswiss\main.go:32)	CMPB	R8B, AL
	0x0187 00391 (D:\gitee\swiss\minswiss\main.go:32)	JNE	433
	0x0189 00393 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	24(SI), R8
	0x018d 00397 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	32(SI), R10
	0x0191 00401 (D:\gitee\swiss\minswiss\main.go:32)	CMPQ	R10, R12
	0x0194 00404 (D:\gitee\swiss\minswiss\main.go:32)	JLS	482
	0x0196 00406 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R12, R10
	0x0199 00409 (D:\gitee\swiss\minswiss\main.go:32)	SHLQ	$7, R12
	0x019d 00413 (D:\gitee\swiss\minswiss\main.go:32)	LEAQ	(R8)(R12*1), R13
	0x01a1 00417 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	(R13)(CX*8), R13
	0x01a6 00422 (D:\gitee\swiss\minswiss\main.go:32)	CMPQ	R13, R9
	0x01a9 00425 (D:\gitee\swiss\minswiss\main.go:32)	JNE	272
	0x01af 00431 (D:\gitee\swiss\minswiss\main.go:32)	JMP	441
	0x01b1 00433 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R12, R10
	0x01b4 00436 (D:\gitee\swiss\minswiss\main.go:32)	JMP	272
	0x01b9 00441 (D:\gitee\swiss\minswiss\main.go:33)	LEAQ	(R8)(R12*1), DX
	0x01bd 00445 (D:\gitee\swiss\minswiss\main.go:33)	LEAQ	64(DX), DX
	0x01c1 00449 (D:\gitee\swiss\minswiss\main.go:33)	MOVQ	(DX)(CX*8), AX
	0x01c5 00453 (D:\gitee\swiss\minswiss\main.go:34)	MOVL	$1, BX
	0x01ca 00458 (D:\gitee\swiss\minswiss\main.go:34)	MOVQ	56(SP), BP
	0x01cf 00463 (D:\gitee\swiss\minswiss\main.go:34)	ADDQ	$64, SP
	0x01d3 00467 (D:\gitee\swiss\minswiss\main.go:34)	RET
	0x01d4 00468 (D:\gitee\swiss\minswiss\main.go:42)	XORL	AX, AX
	0x01d6 00470 (D:\gitee\swiss\minswiss\main.go:42)	XORL	BX, BX
	0x01d8 00472 (D:\gitee\swiss\minswiss\main.go:42)	MOVQ	56(SP), BP
	0x01dd 00477 (D:\gitee\swiss\minswiss\main.go:42)	ADDQ	$64, SP
	0x01e1 00481 (D:\gitee\swiss\minswiss\main.go:42)	RET
	0x01e2 00482 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R12, AX
	0x01e5 00485 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R10, CX
	0x01e8 00488 (D:\gitee\swiss\minswiss\main.go:32)	PCDATA	$1, $2
	0x01e8 00488 (D:\gitee\swiss\minswiss\main.go:32)	CALL	runtime.panicIndex(SB)
	0x01ed 00493 (D:\gitee\swiss\minswiss\main.go:32)	MOVL	CX, AX
	0x01ef 00495 (D:\gitee\swiss\minswiss\main.go:32)	MOVL	$8, CX
	0x01f4 00500 (D:\gitee\swiss\minswiss\main.go:32)	CALL	runtime.panicIndex(SB)
	0x01f9 00505 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R12, AX
	0x01fc 00508 (D:\gitee\swiss\minswiss\main.go:32)	MOVQ	R10, CX
	0x01ff 00511 (D:\gitee\swiss\minswiss\main.go:32)	NOP
	0x0200 00512 (D:\gitee\swiss\minswiss\main.go:32)	CALL	runtime.panicIndex(SB)
	0x0205 00517 (D:\gitee\swiss\minswiss\main.go:28)	MOVQ	R11, AX
	0x0208 00520 (D:\gitee\swiss\minswiss\main.go:28)	CALL	runtime.panicIndex(SB)
	0x020d 00525 (D:\gitee\swiss\minswiss\main.go:28)	XCHGL	AX, AX
	0x020e 00526 (D:\gitee\swiss\minswiss\main.go:28)	NOP
	0x020e 00526 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$1, $-1
	0x020e 00526 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-2
	0x020e 00526 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	AX, 8(SP)
	0x0213 00531 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	BX, 16(SP)
	0x0218 00536 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	CX, 24(SP)
	0x021d 00541 (D:\gitee\swiss\minswiss\main.go:21)	NOP
	0x0220 00544 (D:\gitee\swiss\minswiss\main.go:21)	CALL	runtime.morestack_noctxt(SB)
	0x0225 00549 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	8(SP), AX
	0x022a 00554 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	16(SP), BX
	0x022f 00559 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	24(SP), CX
	0x0234 00564 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-1
	0x0234 00564 (D:\gitee\swiss\minswiss\main.go:21)	JMP	0
	0x0000 49 3b 66 10 0f 86 04 02 00 00 48 83 ec 40 48 89  I;f.......H..@H.
	0x0010 6c 24 38 48 8d 6c 24 38 48 89 44 24 48 48 89 4c  l$8H.l$8H.D$HH.L
	0x0020 24 58 48 8b 50 30 48 8b 70 38 4c 8b 03 48 89 f3  $XH.P0H.p8L..H..
	0x0030 48 89 cf 4c 89 c1 48 89 d0 e8 00 00 00 00 48 89  H..L..H.......H.
	0x0040 c2 48 83 e0 80 48 c1 e8 07 83 e2 7f 48 89 54 24  .H...H......H.T$
	0x0050 30 48 8b 74 24 48 4c 8b 46 20 41 89 c1 45 89 c2  0H.t$HL.F A..E..
	0x0060 4d 0f af d1 49 c1 ea 20 4c 8b 4c 24 58 eb 06 48  M...I.. L.L$X..H
	0x0070 89 ca 41 89 fa 48 8b 3e 48 8b 4e 08 45 89 d3 90  ..A..H.>H.N.E...
	0x0080 4c 39 d9 0f 86 7c 01 00 00 44 89 54 24 24 4d 89  L9...|...D.T$$M.
	0x0090 dc 49 c1 e3 04 4c 0f be ea 49 bf 01 01 01 01 01  .I...L...I......
	0x00a0 01 01 01 4d 0f af ef 4e 33 2c 1f 49 bf ff fe fe  ...M...N3,.I....
	0x00b0 fe fe fe fe fe 48 89 d1 4b 8d 14 2f 49 f7 d5 49  .....H..K../I..I
	0x00c0 21 d5 48 ba 80 80 80 80 80 80 80 80 49 21 d5 4c  !.H.........I!.L
	0x00d0 89 6c 24 28 eb 54 4a 8b 3c 1f 48 31 d7 4d 8d 1c  .l$(.TJ.<.H1.M..
	0x00e0 3f 48 f7 d7 4c 21 df 48 21 d7 48 89 7c 24 28 48  ?H..L!.H!.H.|$(H
	0x00f0 85 ff 0f 85 dc 00 00 00 48 ff 46 40 41 8d 7a 01  ........H.F@A.z.
	0x0100 41 39 f8 0f 87 66 ff ff ff 31 ff e9 5f ff ff ff  A9...f...1.._...
	0x0110 48 8b 4c 24 30 49 89 d8 4d 89 d4 49 bf ff fe fe  H.L$0I..M..I....
	0x0120 fe fe fe fe fe 44 8b 54 24 24 4c 8b 6c 24 28 4d  .....D.T$$L.l$(M
	0x0130 85 ed 74 a2 4c 89 c3 4d 0f bc c5 41 83 f8 40 4d  ..t.L..M...A..@M
	0x0140 19 d2 90 4c 89 c1 41 bf 01 00 00 00 49 d3 e7 4d  ...L..A.....I..M
	0x0150 21 d7 49 f7 d7 4d 21 ef 4c 89 7c 24 28 4c 8b 56  !.I..M!.L.|$(L.V
	0x0160 08 4c 8b 2e 4d 39 e2 0f 86 8c 00 00 00 4f 8d 54  .L..M9.......O.T
	0x0170 1d 00 4d 8d 52 08 c1 e9 03 48 83 f9 08 73 6e 45  ..M.R....H...snE
	0x0180 0f b6 04 0a 41 38 c0 75 28 4c 8b 46 18 4c 8b 56  ....A8.u(L.F.L.V
	0x0190 20 4d 39 e2 76 4c 4d 89 e2 49 c1 e4 07 4f 8d 2c   M9.vLM..I...O.,
	0x01a0 20 4d 8b 6c cd 00 4d 39 cd 0f 85 61 ff ff ff eb   M.l..M9...a....
	0x01b0 08 4d 89 e2 e9 57 ff ff ff 4b 8d 14 20 48 8d 52  .M...W...K.. H.R
	0x01c0 40 48 8b 04 ca bb 01 00 00 00 48 8b 6c 24 38 48  @H........H.l$8H
	0x01d0 83 c4 40 c3 31 c0 31 db 48 8b 6c 24 38 48 83 c4  ..@.1.1.H.l$8H..
	0x01e0 40 c3 4c 89 e0 4c 89 d1 e8 00 00 00 00 89 c8 b9  @.L..L..........
	0x01f0 08 00 00 00 e8 00 00 00 00 4c 89 e0 4c 89 d1 90  .........L..L...
	0x0200 e8 00 00 00 00 4c 89 d8 e8 00 00 00 00 90 48 89  .....L........H.
	0x0210 44 24 08 48 89 5c 24 10 48 89 4c 24 18 0f 1f 00  D$.H.\$.H.L$....
	0x0220 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x0230 8b 4c 24 18 e9 c7 fd ff ff                       .L$......
	rel 58+4 t=7 github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64+0
	rel 489+4 t=7 runtime.panicIndex+0
	rel 501+4 t=7 runtime.panicIndex+0
	rel 513+4 t=7 runtime.panicIndex+0
	rel 521+4 t=7 runtime.panicIndex+0
	rel 545+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64 STEXT dupok size=100 args=0x20 locals=0x18 funcid=0x0 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:247)	TEXT	github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64(SB), DUPOK|ABIInternal, $24-32
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:247)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:247)	JLS	53
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-1
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:247)	SUBQ	$24, SP
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	BP, 16(SP)
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:247)	LEAQ	16(SP), BP
	0x0014 00020 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	AX, github.com/dolthub/swiss/minswiss.h+32(FP)
	0x0019 00025 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$0, gclocals路KZrB1y+lqctuygdernvR/g==(SB)
	0x0019 00025 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0019 00025 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64.arginfo1(SB)
	0x0019 00025 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64.argliveinfo(SB)
	0x0019 00025 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$3, $1
	0x0019 00025 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	DI, github.com/dolthub/swiss/minswiss.key+56(SP)
	0x001e 00030 (D:\gitee\swiss\minswiss\main.go:251)	MOVQ	(AX), CX
	0x0021 00033 (D:\gitee\swiss\minswiss\main.go:251)	MOVQ	AX, DX
	0x0024 00036 (D:\gitee\swiss\minswiss\main.go:251)	LEAQ	github.com/dolthub/swiss/minswiss.key+56(SP), AX
	0x0029 00041 (D:\gitee\swiss\minswiss\main.go:251)	PCDATA	$1, $1
	0x0029 00041 (D:\gitee\swiss\minswiss\main.go:251)	CALL	CX
	0x002b 00043 (D:\gitee\swiss\minswiss\main.go:251)	MOVQ	16(SP), BP
	0x0030 00048 (D:\gitee\swiss\minswiss\main.go:251)	ADDQ	$24, SP
	0x0034 00052 (D:\gitee\swiss\minswiss\main.go:251)	RET
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:251)	NOP
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$1, $-1
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-2
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	AX, 8(SP)
	0x003a 00058 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	BX, 16(SP)
	0x003f 00063 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	CX, 24(SP)
	0x0044 00068 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	DI, 32(SP)
	0x0049 00073 (D:\gitee\swiss\minswiss\main.go:247)	CALL	runtime.morestack_noctxt(SB)
	0x004e 00078 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	8(SP), AX
	0x0053 00083 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	16(SP), BX
	0x0058 00088 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	24(SP), CX
	0x005d 00093 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	32(SP), DI
	0x0062 00098 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-1
	0x0062 00098 (D:\gitee\swiss\minswiss\main.go:247)	JMP	0
	0x0000 49 3b 66 10 76 2f 48 83 ec 18 48 89 6c 24 10 48  I;f.v/H...H.l$.H
	0x0010 8d 6c 24 10 48 89 44 24 20 48 89 7c 24 38 48 8b  .l$.H.D$ H.|$8H.
	0x0020 08 48 89 c2 48 8d 44 24 38 ff d1 48 8b 6c 24 10  .H..H.D$8..H.l$.
	0x0030 48 83 c4 18 c3 48 89 44 24 08 48 89 5c 24 10 48  H....H.D$.H.\$.H
	0x0040 89 4c 24 18 48 89 7c 24 20 e8 00 00 00 00 48 8b  .L$.H.|$ .....H.
	0x0050 44 24 08 48 8b 5c 24 10 48 8b 4c 24 18 48 8b 7c  D$.H.\$.H.L$.H.|
	0x0060 24 20 eb 9c                                      $ ..
	rel 41+0 t=10 +0
	rel 74+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.NewSwissMap[int64,int64] STEXT dupok size=85 args=0x8 locals=0x18 funcid=0x15 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:101)	TEXT	github.com/dolthub/swiss/minswiss.NewSwissMap[int64,int64](SB), DUPOK|WRAPPER|ABIInternal, $24-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:101)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:101)	JLS	53
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-1
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:101)	SUBQ	$24, SP
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	BP, 16(SP)
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:101)	LEAQ	16(SP), BP
	0x0014 00020 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	32(R14), R12
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:101)	TESTQ	R12, R12
	0x001b 00027 (D:\gitee\swiss\minswiss\main.go:101)	JNE	68
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	NOP
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$0, gclocals路g2BeySu+wFnoycgXfElmcg==(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$1, gclocals路g2BeySu+wFnoycgXfElmcg==(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.NewSwissMap[int64,int64].arginfo1(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.NewSwissMap[int64,int64].argliveinfo(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$3, $1
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:101)	MOVL	AX, BX
	0x001f 00031 (D:\gitee\swiss\minswiss\main.go:101)	LEAQ	github.com/dolthub/swiss/minswiss..dict.NewSwissMap[int64,int64](SB), AX
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$1, $0
	0x0026 00038 (D:\gitee\swiss\minswiss\main.go:101)	CALL	github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64](SB)
	0x002b 00043 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	16(SP), BP
	0x0030 00048 (D:\gitee\swiss\minswiss\main.go:101)	ADDQ	$24, SP
	0x0034 00052 (D:\gitee\swiss\minswiss\main.go:101)	RET
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:101)	NOP
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$1, $-1
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-2
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:101)	MOVL	AX, 8(SP)
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:101)	CALL	runtime.morestack_noctxt(SB)
	0x003e 00062 (D:\gitee\swiss\minswiss\main.go:101)	MOVL	8(SP), AX
	0x0042 00066 (D:\gitee\swiss\minswiss\main.go:101)	PCDATA	$0, $-1
	0x0042 00066 (D:\gitee\swiss\minswiss\main.go:101)	JMP	0
	0x0044 00068 (D:\gitee\swiss\minswiss\main.go:101)	LEAQ	32(SP), R13
	0x0049 00073 (D:\gitee\swiss\minswiss\main.go:101)	CMPQ	(R12), R13
	0x004d 00077 (D:\gitee\swiss\minswiss\main.go:101)	JNE	29
	0x004f 00079 (D:\gitee\swiss\minswiss\main.go:101)	MOVQ	SP, (R12)
	0x0053 00083 (D:\gitee\swiss\minswiss\main.go:101)	JMP	29
	0x0000 49 3b 66 10 76 2f 48 83 ec 18 48 89 6c 24 10 48  I;f.v/H...H.l$.H
	0x0010 8d 6c 24 10 4d 8b 66 20 4d 85 e4 75 27 89 c3 48  .l$.M.f M..u'..H
	0x0020 8d 05 00 00 00 00 e8 00 00 00 00 48 8b 6c 24 10  ...........H.l$.
	0x0030 48 83 c4 18 c3 89 44 24 08 e8 00 00 00 00 8b 44  H.....D$.......D
	0x0040 24 08 eb bc 4c 8d 6c 24 20 4d 39 2c 24 75 ce 49  $...L.l$ M9,$u.I
	0x0050 89 24 24 eb c8                                   .$$..
	rel 34+4 t=14 github.com/dolthub/swiss/minswiss..dict.NewSwissMap[int64,int64]+0
	rel 39+4 t=7 github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64]+0
	rel 58+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident STEXT dupok nosplit size=30 args=0x8 locals=0x0 funcid=0x15 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident(SB), DUPOK|NOSPLIT|WRAPPER|ABIInternal, $0-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:94)	MOVQ	32(R14), R12
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:94)	TESTQ	R12, R12
	0x0007 00007 (D:\gitee\swiss\minswiss\main.go:94)	JNE	13
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	NOP
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident.arginfo1(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident.argliveinfo(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	PCDATA	$3, $1
	0x0009 00009 (<unknown line number>)	NOP
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:94)	MOVL	72(AX), AX
	0x000c 00012 (D:\gitee\swiss\minswiss\main.go:94)	RET
	0x000d 00013 (D:\gitee\swiss\minswiss\main.go:94)	LEAQ	8(SP), R13
	0x0012 00018 (D:\gitee\swiss\minswiss\main.go:94)	CMPQ	(R12), R13
	0x0016 00022 (D:\gitee\swiss\minswiss\main.go:94)	JNE	9
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:94)	MOVQ	SP, (R12)
	0x001c 00028 (D:\gitee\swiss\minswiss\main.go:94)	JMP	9
	0x0000 4d 8b 66 20 4d 85 e4 75 04 8b 40 48 c3 4c 8d 6c  M.f M..u..@H.L.l
	0x0010 24 08 4d 39 2c 24 75 f1 49 89 24 24 eb eb        $.M9,$u.I.$$..
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count STEXT dupok nosplit size=35 args=0x8 locals=0x0 funcid=0x15 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count(SB), DUPOK|NOSPLIT|WRAPPER|ABIInternal, $0-8
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:90)	MOVQ	32(R14), R12
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:90)	TESTQ	R12, R12
	0x0007 00007 (D:\gitee\swiss\minswiss\main.go:90)	JNE	18
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	NOP
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count.arginfo1(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count.argliveinfo(SB)
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	PCDATA	$3, $1
	0x0009 00009 (<unknown line number>)	NOP
	0x0009 00009 (D:\gitee\swiss\minswiss\main.go:90)	MOVL	72(AX), CX
	0x000c 00012 (D:\gitee\swiss\minswiss\main.go:91)	SUBL	76(AX), CX
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:90)	MOVL	CX, AX
	0x0011 00017 (D:\gitee\swiss\minswiss\main.go:90)	RET
	0x0012 00018 (D:\gitee\swiss\minswiss\main.go:90)	LEAQ	8(SP), R13
	0x0017 00023 (D:\gitee\swiss\minswiss\main.go:90)	CMPQ	(R12), R13
	0x001b 00027 (D:\gitee\swiss\minswiss\main.go:90)	JNE	9
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:90)	MOVQ	SP, (R12)
	0x0021 00033 (D:\gitee\swiss\minswiss\main.go:90)	JMP	9
	0x0000 4d 8b 66 20 4d 85 e4 75 09 8b 48 48 2b 48 4c 89  M.f M..u..HH+HL.
	0x0010 c8 c3 4c 8d 6c 24 08 4d 39 2c 24 75 ec 49 89 24  ..L.l$.M9,$u.I.$
	0x0020 24 eb e6                                         $..
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put STEXT dupok size=111 args=0x18 locals=0x28 funcid=0x15 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:53)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put(SB), DUPOK|WRAPPER|ABIInternal, $40-24
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:53)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:53)	JLS	57
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-1
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:53)	SUBQ	$40, SP
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	BP, 32(SP)
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:53)	LEAQ	32(SP), BP
	0x0014 00020 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	32(R14), R12
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:53)	TESTQ	R12, R12
	0x001b 00027 (D:\gitee\swiss\minswiss\main.go:53)	JNE	94
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	NOP
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put.arginfo1(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put.argliveinfo(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$3, $1
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	CX, DI
	0x0020 00032 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	BX, CX
	0x0023 00035 (D:\gitee\swiss\minswiss\main.go:53)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x002a 00042 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$1, $1
	0x002a 00042 (D:\gitee\swiss\minswiss\main.go:53)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put(SB)
	0x002f 00047 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	32(SP), BP
	0x0034 00052 (D:\gitee\swiss\minswiss\main.go:53)	ADDQ	$40, SP
	0x0038 00056 (D:\gitee\swiss\minswiss\main.go:53)	RET
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:53)	NOP
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$1, $-1
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-2
	0x0039 00057 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	AX, 8(SP)
	0x003e 00062 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	BX, 16(SP)
	0x0043 00067 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	CX, 24(SP)
	0x0048 00072 (D:\gitee\swiss\minswiss\main.go:53)	CALL	runtime.morestack_noctxt(SB)
	0x004d 00077 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	8(SP), AX
	0x0052 00082 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	16(SP), BX
	0x0057 00087 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	24(SP), CX
	0x005c 00092 (D:\gitee\swiss\minswiss\main.go:53)	PCDATA	$0, $-1
	0x005c 00092 (D:\gitee\swiss\minswiss\main.go:53)	JMP	0
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:53)	LEAQ	48(SP), R13
	0x0063 00099 (D:\gitee\swiss\minswiss\main.go:53)	CMPQ	(R12), R13
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:53)	JNE	29
	0x0069 00105 (D:\gitee\swiss\minswiss\main.go:53)	MOVQ	SP, (R12)
	0x006d 00109 (D:\gitee\swiss\minswiss\main.go:53)	JMP	29
	0x0000 49 3b 66 10 76 33 48 83 ec 28 48 89 6c 24 20 48  I;f.v3H..(H.l$ H
	0x0010 8d 6c 24 20 4d 8b 66 20 4d 85 e4 75 41 48 89 cf  .l$ M.f M..uAH..
	0x0020 48 89 d9 48 8d 1d 00 00 00 00 e8 00 00 00 00 48  H..H...........H
	0x0030 8b 6c 24 20 48 83 c4 28 c3 48 89 44 24 08 48 89  .l$ H..(.H.D$.H.
	0x0040 5c 24 10 48 89 4c 24 18 e8 00 00 00 00 48 8b 44  \$.H.L$......H.D
	0x0050 24 08 48 8b 5c 24 10 48 8b 4c 24 18 eb a2 4c 8d  $.H.\$.H.L$...L.
	0x0060 6c 24 30 4d 39 2c 24 75 b4 49 89 24 24 eb ae     l$0M9,$u.I.$$..
	rel 38+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 43+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put+0
	rel 73+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get STEXT dupok size=98 args=0x10 locals=0x20 funcid=0x15 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:21)	TEXT	github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get(SB), DUPOK|WRAPPER|ABIInternal, $32-16
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:21)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:21)	JLS	54
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-1
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:21)	SUBQ	$32, SP
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	BP, 24(SP)
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:21)	LEAQ	24(SP), BP
	0x0014 00020 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	32(R14), R12
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:21)	TESTQ	R12, R12
	0x001b 00027 (D:\gitee\swiss\minswiss\main.go:21)	JNE	81
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	NOP
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get.arginfo1(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get.argliveinfo(SB)
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$3, $1
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	BX, CX
	0x0020 00032 (D:\gitee\swiss\minswiss\main.go:21)	LEAQ	github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64](SB), BX
	0x0027 00039 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$1, $1
	0x0027 00039 (D:\gitee\swiss\minswiss\main.go:21)	CALL	github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get(SB)
	0x002c 00044 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	24(SP), BP
	0x0031 00049 (D:\gitee\swiss\minswiss\main.go:21)	ADDQ	$32, SP
	0x0035 00053 (D:\gitee\swiss\minswiss\main.go:21)	RET
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:21)	NOP
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$1, $-1
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-2
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	AX, 8(SP)
	0x003b 00059 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	BX, 16(SP)
	0x0040 00064 (D:\gitee\swiss\minswiss\main.go:21)	CALL	runtime.morestack_noctxt(SB)
	0x0045 00069 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	8(SP), AX
	0x004a 00074 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	16(SP), BX
	0x004f 00079 (D:\gitee\swiss\minswiss\main.go:21)	PCDATA	$0, $-1
	0x004f 00079 (D:\gitee\swiss\minswiss\main.go:21)	JMP	0
	0x0051 00081 (D:\gitee\swiss\minswiss\main.go:21)	LEAQ	40(SP), R13
	0x0056 00086 (D:\gitee\swiss\minswiss\main.go:21)	CMPQ	(R12), R13
	0x005a 00090 (D:\gitee\swiss\minswiss\main.go:21)	JNE	29
	0x005c 00092 (D:\gitee\swiss\minswiss\main.go:21)	MOVQ	SP, (R12)
	0x0060 00096 (D:\gitee\swiss\minswiss\main.go:21)	JMP	29
	0x0000 49 3b 66 10 76 30 48 83 ec 20 48 89 6c 24 18 48  I;f.v0H.. H.l$.H
	0x0010 8d 6c 24 18 4d 8b 66 20 4d 85 e4 75 34 48 89 d9  .l$.M.f M..u4H..
	0x0020 48 8d 1d 00 00 00 00 e8 00 00 00 00 48 8b 6c 24  H...........H.l$
	0x0030 18 48 83 c4 20 c3 48 89 44 24 08 48 89 5c 24 10  .H.. .H.D$.H.\$.
	0x0040 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 eb  .....H.D$.H.\$..
	0x0050 af 4c 8d 6c 24 28 4d 39 2c 24 75 c1 49 89 24 24  .L.l$(M9,$u.I.$$
	0x0060 eb bb                                            ..
	rel 35+4 t=14 github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64]+0
	rel 40+4 t=7 github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get+0
	rel 65+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64 STEXT dupok size=115 args=0x18 locals=0x28 funcid=0x15 align=0x0
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:247)	TEXT	github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64(SB), DUPOK|WRAPPER|ABIInternal, $40-24
	0x0000 00000 (D:\gitee\swiss\minswiss\main.go:247)	CMPQ	SP, 16(R14)
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-2
	0x0004 00004 (D:\gitee\swiss\minswiss\main.go:247)	JLS	59
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-1
	0x0006 00006 (D:\gitee\swiss\minswiss\main.go:247)	SUBQ	$40, SP
	0x000a 00010 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	BP, 32(SP)
	0x000f 00015 (D:\gitee\swiss\minswiss\main.go:247)	LEAQ	32(SP), BP
	0x0014 00020 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	32(R14), R12
	0x0018 00024 (D:\gitee\swiss\minswiss\main.go:247)	TESTQ	R12, R12
	0x001b 00027 (D:\gitee\swiss\minswiss\main.go:247)	JNE	98
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:247)	NOP
	0x001d 00029 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	AX, github.com/dolthub/swiss/minswiss.h+48(FP)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64.arginfo1(SB)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:247)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64.argliveinfo(SB)
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$3, $1
	0x0022 00034 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	CX, DI
	0x0025 00037 (D:\gitee\swiss\minswiss\main.go:247)	LEAQ	github.com/dolthub/swiss/minswiss..dict.Hasher[int64](SB), CX
	0x002c 00044 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$1, $1
	0x002c 00044 (D:\gitee\swiss\minswiss\main.go:247)	CALL	github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64(SB)
	0x0031 00049 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	32(SP), BP
	0x0036 00054 (D:\gitee\swiss\minswiss\main.go:247)	ADDQ	$40, SP
	0x003a 00058 (D:\gitee\swiss\minswiss\main.go:247)	RET
	0x003b 00059 (D:\gitee\swiss\minswiss\main.go:247)	NOP
	0x003b 00059 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$1, $-1
	0x003b 00059 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-2
	0x003b 00059 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	AX, 8(SP)
	0x0040 00064 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	BX, 16(SP)
	0x0045 00069 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	CX, 24(SP)
	0x004a 00074 (D:\gitee\swiss\minswiss\main.go:247)	CALL	runtime.morestack_noctxt(SB)
	0x004f 00079 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	8(SP), AX
	0x0054 00084 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	16(SP), BX
	0x0059 00089 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	24(SP), CX
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:247)	PCDATA	$0, $-1
	0x005e 00094 (D:\gitee\swiss\minswiss\main.go:247)	NOP
	0x0060 00096 (D:\gitee\swiss\minswiss\main.go:247)	JMP	0
	0x0062 00098 (D:\gitee\swiss\minswiss\main.go:247)	LEAQ	48(SP), R13
	0x0067 00103 (D:\gitee\swiss\minswiss\main.go:247)	CMPQ	(R12), R13
	0x006b 00107 (D:\gitee\swiss\minswiss\main.go:247)	JNE	29
	0x006d 00109 (D:\gitee\swiss\minswiss\main.go:247)	MOVQ	SP, (R12)
	0x0071 00113 (D:\gitee\swiss\minswiss\main.go:247)	JMP	29
	0x0000 49 3b 66 10 76 35 48 83 ec 28 48 89 6c 24 20 48  I;f.v5H..(H.l$ H
	0x0010 8d 6c 24 20 4d 8b 66 20 4d 85 e4 75 45 48 89 44  .l$ M.f M..uEH.D
	0x0020 24 30 48 89 cf 48 8d 0d 00 00 00 00 e8 00 00 00  $0H..H..........
	0x0030 00 48 8b 6c 24 20 48 83 c4 28 c3 48 89 44 24 08  .H.l$ H..(.H.D$.
	0x0040 48 89 5c 24 10 48 89 4c 24 18 e8 00 00 00 00 48  H.\$.H.L$......H
	0x0050 8b 44 24 08 48 8b 5c 24 10 48 8b 4c 24 18 66 90  .D$.H.\$.H.L$.f.
	0x0060 eb 9e 4c 8d 6c 24 30 4d 39 2c 24 75 b0 49 89 24  ..L.l$0M9,$u.I.$
	0x0070 24 eb aa                                         $..
	rel 40+4 t=14 github.com/dolthub/swiss/minswiss..dict.Hasher[int64]+0
	rel 45+4 t=7 github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64+0
	rel 75+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64 STEXT dupok size=130 args=0x10 locals=0x28 funcid=0x15 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64(SB), DUPOK|WRAPPER|ABIInternal, $40-16
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	85
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	SUBQ	$40, SP
	0x000a 00010 (<autogenerated>:1)	MOVQ	BP, 32(SP)
	0x000f 00015 (<autogenerated>:1)	LEAQ	32(SP), BP
	0x0014 00020 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0018 00024 (<autogenerated>:1)	TESTQ	R12, R12
	0x001b 00027 (<autogenerated>:1)	JNE	113
	0x001d 00029 (<autogenerated>:1)	NOP
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$0, gclocals路wgcWObbY2HYnK2SU/U22lA==(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64.arginfo1(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64.argliveinfo(SB)
	0x001d 00029 (<autogenerated>:1)	PCDATA	$3, $1
	0x001d 00029 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	TESTQ	AX, AX
	0x0023 00035 (<autogenerated>:1)	JEQ	79
	0x0025 00037 (<autogenerated>:1)	MOVQ	(AX), DX
	0x0028 00040 (<autogenerated>:1)	MOVQ	8(AX), SI
	0x002c 00044 (<autogenerated>:1)	MOVQ	DX, AX
	0x002f 00047 (<autogenerated>:1)	LEAQ	github.com/dolthub/swiss/minswiss..dict.Hasher[int64](SB), CX
	0x0036 00054 (<autogenerated>:1)	MOVQ	BX, DI
	0x0039 00057 (<autogenerated>:1)	MOVQ	SI, BX
	0x003c 00060 (<autogenerated>:1)	PCDATA	$1, $1
	0x003c 00060 (<autogenerated>:1)	NOP
	0x0040 00064 (<autogenerated>:1)	CALL	github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64(SB)
	0x0045 00069 (<autogenerated>:1)	MOVQ	32(SP), BP
	0x004a 00074 (<autogenerated>:1)	ADDQ	$40, SP
	0x004e 00078 (<autogenerated>:1)	RET
	0x004f 00079 (<autogenerated>:1)	CALL	runtime.panicwrap(SB)
	0x0054 00084 (<autogenerated>:1)	XCHGL	AX, AX
	0x0055 00085 (<autogenerated>:1)	NOP
	0x0055 00085 (<autogenerated>:1)	PCDATA	$1, $-1
	0x0055 00085 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0055 00085 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x005a 00090 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x005f 00095 (<autogenerated>:1)	NOP
	0x0060 00096 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0065 00101 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x006a 00106 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x006f 00111 (<autogenerated>:1)	PCDATA	$0, $-1
	0x006f 00111 (<autogenerated>:1)	JMP	0
	0x0071 00113 (<autogenerated>:1)	LEAQ	48(SP), R13
	0x0076 00118 (<autogenerated>:1)	CMPQ	(R12), R13
	0x007a 00122 (<autogenerated>:1)	JNE	29
	0x007c 00124 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x0080 00128 (<autogenerated>:1)	JMP	29
	0x0000 49 3b 66 10 76 4f 48 83 ec 28 48 89 6c 24 20 48  I;f.vOH..(H.l$ H
	0x0010 8d 6c 24 20 4d 8b 66 20 4d 85 e4 75 54 0f 1f 00  .l$ M.f M..uT...
	0x0020 48 85 c0 74 2a 48 8b 10 48 8b 70 08 48 89 d0 48  H..t*H..H.p.H..H
	0x0030 8d 0d 00 00 00 00 48 89 df 48 89 f3 0f 1f 40 00  ......H..H....@.
	0x0040 e8 00 00 00 00 48 8b 6c 24 20 48 83 c4 28 c3 e8  .....H.l$ H..(..
	0x0050 00 00 00 00 90 48 89 44 24 08 48 89 5c 24 10 90  .....H.D$.H.\$..
	0x0060 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 eb  .....H.D$.H.\$..
	0x0070 8f 4c 8d 6c 24 30 4d 39 2c 24 75 a1 49 89 24 24  .L.l$0M9,$u.I.$$
	0x0080 eb 9b                                            ..
	rel 50+4 t=14 github.com/dolthub/swiss/minswiss..dict.Hasher[int64]+0
	rel 65+4 t=7 github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64+0
	rel 80+4 t=7 runtime.panicwrap+0
	rel 97+4 t=7 runtime.morestack_noctxt+0
github.com/dolthub/swiss/minswiss.(*Hasher[go.shape.int64]).Hash64 STEXT dupok size=140 args=0x18 locals=0x28 funcid=0x15 align=0x0
	0x0000 00000 (<autogenerated>:1)	TEXT	github.com/dolthub/swiss/minswiss.(*Hasher[go.shape.int64]).Hash64(SB), DUPOK|WRAPPER|ABIInternal, $40-24
	0x0000 00000 (<autogenerated>:1)	CMPQ	SP, 16(R14)
	0x0004 00004 (<autogenerated>:1)	PCDATA	$0, $-2
	0x0004 00004 (<autogenerated>:1)	JLS	77
	0x0006 00006 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0006 00006 (<autogenerated>:1)	SUBQ	$40, SP
	0x000a 00010 (<autogenerated>:1)	MOVQ	BP, 32(SP)
	0x000f 00015 (<autogenerated>:1)	LEAQ	32(SP), BP
	0x0014 00020 (<autogenerated>:1)	MOVQ	32(R14), R12
	0x0018 00024 (<autogenerated>:1)	TESTQ	R12, R12
	0x001b 00027 (<autogenerated>:1)	JNE	118
	0x001d 00029 (<autogenerated>:1)	NOP
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$0, gclocals路TjPuuCwdlCpTaRQGRKTrYw==(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$1, gclocals路J5F+7Qw7O7ve2QcWC7DpeQ==(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$5, github.com/dolthub/swiss/minswiss.(*Hasher[go.shape.int64]).Hash64.arginfo1(SB)
	0x001d 00029 (<autogenerated>:1)	FUNCDATA	$6, github.com/dolthub/swiss/minswiss.(*Hasher[go.shape.int64]).Hash64.argliveinfo(SB)
	0x001d 00029 (<autogenerated>:1)	PCDATA	$3, $1
	0x001d 00029 (<autogenerated>:1)	NOP
	0x0020 00032 (<autogenerated>:1)	TESTQ	AX, AX
	0x0023 00035 (<autogenerated>:1)	JEQ	71
	0x0025 00037 (<autogenerated>:1)	MOVQ	(AX), DX
	0x0028 00040 (<autogenerated>:1)	MOVQ	8(AX), SI
	0x002c 00044 (<autogenerated>:1)	MOVQ	DX, AX
	0x002f 00047 (<autogenerated>:1)	MOVQ	CX, DI
	0x0032 00050 (<autogenerated>:1)	MOVQ	BX, CX
	0x0035 00053 (<autogenerated>:1)	MOVQ	SI, BX
	0x0038 00056 (<autogenerated>:1)	PCDATA	$1, $1
	0x0038 00056 (<autogenerated>:1)	CALL	github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64(SB)
	0x003d 00061 (<autogenerated>:1)	MOVQ	32(SP), BP
	0x0042 00066 (<autogenerated>:1)	ADDQ	$40, SP
	0x0046 00070 (<autogenerated>:1)	RET
	0x0047 00071 (<autogenerated>:1)	CALL	runtime.panicwrap(SB)
	0x004c 00076 (<autogenerated>:1)	XCHGL	AX, AX
	0x004d 00077 (<autogenerated>:1)	NOP
	0x004d 00077 (<autogenerated>:1)	PCDATA	$1, $-1
	0x004d 00077 (<autogenerated>:1)	PCDATA	$0, $-2
	0x004d 00077 (<autogenerated>:1)	MOVQ	AX, 8(SP)
	0x0052 00082 (<autogenerated>:1)	MOVQ	BX, 16(SP)
	0x0057 00087 (<autogenerated>:1)	MOVQ	CX, 24(SP)
	0x005c 00092 (<autogenerated>:1)	NOP
	0x0060 00096 (<autogenerated>:1)	CALL	runtime.morestack_noctxt(SB)
	0x0065 00101 (<autogenerated>:1)	MOVQ	8(SP), AX
	0x006a 00106 (<autogenerated>:1)	MOVQ	16(SP), BX
	0x006f 00111 (<autogenerated>:1)	MOVQ	24(SP), CX
	0x0074 00116 (<autogenerated>:1)	PCDATA	$0, $-1
	0x0074 00116 (<autogenerated>:1)	JMP	0
	0x0076 00118 (<autogenerated>:1)	LEAQ	48(SP), R13
	0x007b 00123 (<autogenerated>:1)	NOP
	0x0080 00128 (<autogenerated>:1)	CMPQ	(R12), R13
	0x0084 00132 (<autogenerated>:1)	JNE	29
	0x0086 00134 (<autogenerated>:1)	MOVQ	SP, (R12)
	0x008a 00138 (<autogenerated>:1)	JMP	29
	0x0000 49 3b 66 10 76 47 48 83 ec 28 48 89 6c 24 20 48  I;f.vGH..(H.l$ H
	0x0010 8d 6c 24 20 4d 8b 66 20 4d 85 e4 75 59 0f 1f 00  .l$ M.f M..uY...
	0x0020 48 85 c0 74 22 48 8b 10 48 8b 70 08 48 89 d0 48  H..t"H..H.p.H..H
	0x0030 89 cf 48 89 d9 48 89 f3 e8 00 00 00 00 48 8b 6c  ..H..H.......H.l
	0x0040 24 20 48 83 c4 28 c3 e8 00 00 00 00 90 48 89 44  $ H..(.......H.D
	0x0050 24 08 48 89 5c 24 10 48 89 4c 24 18 0f 1f 40 00  $.H.\$.H.L$...@.
	0x0060 e8 00 00 00 00 48 8b 44 24 08 48 8b 5c 24 10 48  .....H.D$.H.\$.H
	0x0070 8b 4c 24 18 eb 8a 4c 8d 6c 24 30 0f 1f 44 00 00  .L$...L.l$0..D..
	0x0080 4d 39 2c 24 75 97 49 89 24 24 eb 91              M9,$u.I.$$..
	rel 57+4 t=7 github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64+0
	rel 72+4 t=7 runtime.panicwrap+0
	rel 97+4 t=7 runtime.morestack_noctxt+0
go:cuinfo.producer.github.com/dolthub/swiss/minswiss SDWARFCUINFO dupok size=0
	0x0000 72 65 67 61 62 69                                regabi
github.com/dolthub/swiss/minswiss..dict.getRuntimeHasher[int64] SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type:map[int64]struct {}+0
	rel 0+0 t=23 type:map[int64]struct {}+0
	rel 0+0 t=23 type:map[int64]struct {}+0
	rel 0+0 t=23 type:interface {}+0
github.com/dolthub/swiss/minswiss..dict.NewHasher[int64] SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 github.com/dolthub/swiss/minswiss..dict.getRuntimeHasher[int64]+0
	rel 0+0 t=23 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 8+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
github.com/dolthub/swiss/minswiss..dict.NewSwissMap[int64,int64] SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 github.com/dolthub/swiss/minswiss..dict.NewHasher[int64]+0
	rel 0+0 t=23 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 0+0 t=23 type:[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
	rel 0+0 t=23 type:github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
	rel 8+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 16+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
	rel 24+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
github.com/dolthub/swiss/minswiss..dict.Hasher[int64] SRODATA dupok size=32
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 0+0 t=23 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 0+0 t=23 type:int64+0
	rel 0+0 t=23 type:*int64+0
	rel 0+0 t=23 type:*int64+0
	rel 0+0 t=23 type:unsafe.Pointer+0
	rel 8+8 t=1 type:int64+0
	rel 16+8 t=1 type:*int64+0
github.com/dolthub/swiss/minswiss..dict.SwissMap[int64,int64] SRODATA dupok size=80
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 0+0 t=23 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 0+0 t=23 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 0+0 t=23 type:int64+0
	rel 0+0 t=23 type:int64+0
	rel 0+8 t=1 github.com/dolthub/swiss/minswiss..dict.Hasher[int64]+0
	rel 0+0 t=23 type:int64+0
	rel 0+0 t=23 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 0+0 t=23 type:int64+0
	rel 0+0 t=23 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 8+8 t=1 github.com/dolthub/swiss/minswiss..dict.Hasher[int64]+0
	rel 16+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 24+8 t=1 type:int64+0
	rel 32+8 t=1 type:int64+0
	rel 40+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 48+8 t=1 type:int64+0
	rel 56+8 t=1 type:int64+0
	rel 64+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 72+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
go:cuinfo.packagename.github.com/dolthub/swiss/minswiss SDWARFCUINFO dupok size=0
	0x0000 6d 69 6e 73 77 69 73 73                          minswiss
go:info.github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64]$abstract SDWARFABSFCN dupok size=108
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 67 65 74 52 75 6e 74 69 6d 65 48 61 73  ss.getRuntimeHas
	0x0030 68 65 72 5b 67 6f 2e 73 68 61 70 65 2e 69 6e 74  her[go.shape.int
	0x0040 36 34 5d 00 01 01 13 68 00 01 00 00 00 00 13 73  64]....h.......s
	0x0050 65 65 64 00 01 00 00 00 00 0e 61 00 ff 01 00 00  eed.......a.....
	0x0060 00 00 0e 69 00 80 02 00 00 00 00 00              ...i........
	rel 74+4 t=31 go:info.github.com/dolthub/swiss/minswiss.hashfn+0
	rel 85+4 t=31 go:info.uintptr+0
	rel 94+4 t=31 go:info.interface {}+0
	rel 103+4 t=31 go:info.*github.com/dolthub/swiss/minswiss.mapiface+0
go:info.github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64]$abstract SDWARFABSFCN dupok size=83
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 4e 65 77 48 61 73 68 65 72 5b 67 6f 2e  ss.NewHasher[go.
	0x0030 73 68 61 70 65 2e 69 6e 74 36 34 5d 00 01 01 0e  shape.int64]....
	0x0040 68 00 f2 01 00 00 00 00 0e 73 73 00 f2 01 00 00  h........ss.....
	0x0050 00 00 00                                         ...
	rel 68+4 t=31 go:info.github.com/dolthub/swiss/minswiss.hashfn+0
	rel 78+4 t=31 go:info.uintptr+0
go:info.github.com/dolthub/swiss/minswiss.noescape$abstract SDWARFABSFCN dupok size=64
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 6e 6f 65 73 63 61 70 65 00 01 01 13 70  ss.noescape....p
	0x0030 00 00 00 00 00 00 0e 78 00 a3 01 00 00 00 00 00  .......x........
	rel 50+4 t=31 go:info.unsafe.Pointer+0
	rel 59+4 t=31 go:info.uintptr+0
go:info.github.com/dolthub/swiss/minswiss.swissMetaMatchH2$abstract SDWARFABSFCN dupok size=80
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 73 77 69 73 73 4d 65 74 61 4d 61 74 63  ss.swissMetaMatc
	0x0030 68 48 32 00 01 01 13 6d 00 00 00 00 00 00 13 68  hH2....m.......h
	0x0040 00 00 00 00 00 00 0e 78 00 87 02 00 00 00 00 00  .......x........
	rel 58+4 t=31 go:info.*uint64+0
	rel 66+4 t=31 go:info.int8+0
	rel 75+4 t=31 go:info.uint64+0
go:info.github.com/dolthub/swiss/minswiss.swissNextMatch$abstract SDWARFABSFCN dupok size=70
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 73 77 69 73 73 4e 65 78 74 4d 61 74 63  ss.swissNextMatc
	0x0030 68 00 01 01 13 62 00 00 00 00 00 00 0e 73 00 91  h....b.......s..
	0x0040 02 00 00 00 00 00                                ......
	rel 56+4 t=31 go:info.*uint64+0
	rel 65+4 t=31 go:info.uint32+0
go:info.github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty$abstract SDWARFABSFCN dupok size=75
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 73 77 69 73 73 4d 65 74 61 4d 61 74 63  ss.swissMetaMatc
	0x0030 68 45 6d 70 74 79 00 01 01 13 6d 00 00 00 00 00  hEmpty....m.....
	0x0040 00 0e 78 00 8c 02 00 00 00 00 00                 ..x........
	rel 61+4 t=31 go:info.*uint64+0
	rel 70+4 t=31 go:info.uint64+0
go:info.github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident$abstract SDWARFABSFCN dupok size=101
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 28 2a 53 77 69 73 73 4d 61 70 5b 67 6f  ss.(*SwissMap[go
	0x0030 2e 73 68 61 70 65 2e 69 6e 74 36 34 2c 67 6f 2e  .shape.int64,go.
	0x0040 73 68 61 70 65 2e 69 6e 74 36 34 5d 29 2e 47 65  shape.int64]).Ge
	0x0050 74 52 65 73 69 64 65 6e 74 00 01 01 13 6d 00 00  tResident....m..
	0x0060 00 00 00 00 00                                   .....
	rel 96+4 t=31 go:info.*github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64]+0
go:info.github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count$abstract SDWARFABSFCN dupok size=95
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 28 2a 53 77 69 73 73 4d 61 70 5b 67 6f  ss.(*SwissMap[go
	0x0030 2e 73 68 61 70 65 2e 69 6e 74 36 34 2c 67 6f 2e  .shape.int64,go.
	0x0040 73 68 61 70 65 2e 69 6e 74 36 34 5d 29 2e 43 6f  shape.int64]).Co
	0x0050 75 6e 74 00 01 01 13 6d 00 00 00 00 00 00 00     unt....m.......
	rel 90+4 t=31 go:info.*github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64]+0
go:info.github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64$abstract SDWARFABSFCN dupok size=77
	0x0000 05 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 48 61 73 68 65 72 5b 69 6e 74 36 34 5d  ss.Hasher[int64]
	0x0030 2e 48 61 73 68 36 34 00 01 01 13 68 00 00 00 00  .Hash64....h....
	0x0040 00 00 13 6b 65 79 00 00 00 00 00 00 00           ...key.......
	rel 62+4 t=31 go:info.github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 72+4 t=31 go:info.int64+0
go:constinfo.github.com/dolthub/swiss/minswiss SDWARFCONST size=405
	0x0000 0b 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x0010 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x0020 73 73 2e 73 77 69 73 73 47 72 6f 75 70 53 69 7a  ss.swissGroupSiz
	0x0030 65 00 00 00 00 00 08 0b 67 69 74 68 75 62 2e 63  e.......github.c
	0x0040 6f 6d 2f 64 6f 6c 74 68 75 62 2f 73 77 69 73 73  om/dolthub/swiss
	0x0050 2f 6d 69 6e 73 77 69 73 73 2e 73 77 69 73 73 4d  /minswiss.swissM
	0x0060 61 78 41 76 67 47 72 6f 75 70 4c 6f 61 64 00 00  axAvgGroupLoad..
	0x0070 00 00 00 07 0b 67 69 74 68 75 62 2e 63 6f 6d 2f  .....github.com/
	0x0080 64 6f 6c 74 68 75 62 2f 73 77 69 73 73 2f 6d 69  dolthub/swiss/mi
	0x0090 6e 73 77 69 73 73 2e 73 77 69 73 73 4c 6f 42 69  nswiss.swissLoBi
	0x00a0 74 73 00 00 00 00 00 81 82 84 88 90 a0 c0 80 01  ts..............
	0x00b0 0b 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74  .github.com/dolt
	0x00c0 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69  hub/swiss/minswi
	0x00d0 73 73 2e 73 77 69 73 73 48 69 42 69 74 73 00 00  ss.swissHiBits..
	0x00e0 00 00 00 80 81 82 84 88 90 a0 c0 80 7f 0b 67 69  ..............gi
	0x00f0 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c 74 68 75 62  thub.com/dolthub
	0x0100 2f 73 77 69 73 73 2f 6d 69 6e 73 77 69 73 73 2e  /swiss/minswiss.
	0x0110 73 77 69 73 73 48 31 4d 61 73 6b 00 00 00 00 00  swissH1Mask.....
	0x0120 80 7f 0b 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f  ...github.com/do
	0x0130 6c 74 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73  lthub/swiss/mins
	0x0140 77 69 73 73 2e 73 77 69 73 73 48 32 4d 61 73 6b  wiss.swissH2Mask
	0x0150 00 00 00 00 00 ff 00 0b 67 69 74 68 75 62 2e 63  ........github.c
	0x0160 6f 6d 2f 64 6f 6c 74 68 75 62 2f 73 77 69 73 73  om/dolthub/swiss
	0x0170 2f 6d 69 6e 73 77 69 73 73 2e 73 77 69 73 73 45  /minswiss.swissE
	0x0180 6d 70 74 79 36 34 00 00 00 00 00 80 81 82 84 88  mpty64..........
	0x0190 90 a0 c0 80 7f                                   .....
	rel 50+4 t=31 go:info.int+0
	rel 111+4 t=31 go:info.int+0
	rel 163+4 t=31 go:info.uint64+0
	rel 223+4 t=31 go:info.uint64+0
	rel 284+4 t=31 go:info.uint64+0
	rel 337+4 t=31 go:info.uint64+0
	rel 391+4 t=31 go:info.uint64+0
runtime.memequal64路f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal64+0
runtime.gcbits.0100000000000000 SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
type:.namedata.*minswiss.hashfn- SRODATA dupok size=18
	0x0000 00 10 2a 6d 69 6e 73 77 69 73 73 2e 68 61 73 68  ..*minswiss.hash
	0x0010 66 6e                                            fn
type:*github.com/dolthub/swiss/minswiss.hashfn SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b3 80 eb fd 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.hashfn-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.hashfn+0
type:.importpath.github.com/dolthub/swiss/minswiss. SRODATA dupok size=35
	0x0000 00 21 67 69 74 68 75 62 2e 63 6f 6d 2f 64 6f 6c  .!github.com/dol
	0x0010 74 68 75 62 2f 73 77 69 73 73 2f 6d 69 6e 73 77  thub/swiss/minsw
	0x0020 69 73 73                                         iss
type:github.com/dolthub/swiss/minswiss.hashfn SRODATA size=96
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6d f5 b0 1e 07 08 08 33 00 00 00 00 00 00 00 00  m......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 28 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  (...............
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.hashfn-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.hashfn+0
	rel 56+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 72+8 t=1 type:unsafe.Pointer+0
	rel 80+8 t=1 type:uintptr+0
	rel 88+8 t=1 type:uintptr+0
type:.namedata.*minswiss.Hasher[go.shape.int64]. SRODATA dupok size=34
	0x0000 01 20 2a 6d 69 6e 73 77 69 73 73 2e 48 61 73 68  . *minswiss.Hash
	0x0010 65 72 5b 67 6f 2e 73 68 61 70 65 2e 69 6e 74 36  er[go.shape.int6
	0x0020 34 5d                                            4]
type:*github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64] SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2b 72 8f dc 08 08 08 36 00 00 00 00 00 00 00 00  +r.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.Hasher[go.shape.int64].+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64]+0
type:.namedata.hash- SRODATA dupok size=6
	0x0000 00 04 68 61 73 68                                ..hash
type:.namedata.seed- SRODATA dupok size=6
	0x0000 00 04 73 65 65 64                                ..seed
type:github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64] SRODATA dupok size=144
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 80 0e 6c f9 07 08 08 19 00 00 00 00 00 00 00 00  ..l.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.Hasher[go.shape.int64].+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64]+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64]+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.hash-+0
	rel 104+8 t=1 type:github.com/dolthub/swiss/minswiss.hashfn+0
	rel 120+8 t=1 type:.namedata.seed-+0
	rel 128+8 t=1 type:uintptr+0
type:.namedata.*minswiss.Hasher[int64]. SRODATA dupok size=25
	0x0000 01 17 2a 6d 69 6e 73 77 69 73 73 2e 48 61 73 68  ..*minswiss.Hash
	0x0010 65 72 5b 69 6e 74 36 34 5d                       er[int64]
type:.namedata.*func(*minswiss.Hasher[int64], int64) uint64- SRODATA dupok size=46
	0x0000 00 2c 2a 66 75 6e 63 28 2a 6d 69 6e 73 77 69 73  .,*func(*minswis
	0x0010 73 2e 48 61 73 68 65 72 5b 69 6e 74 36 34 5d 2c  s.Hasher[int64],
	0x0020 20 69 6e 74 36 34 29 20 75 69 6e 74 36 34         int64) uint64
type:*func(*github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 5e ac 1e 6a 08 08 08 36 00 00 00 00 00 00 00 00  ^..j...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.Hasher[int64], int64) uint64-+0
	rel 48+8 t=1 type:func(*github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64+0
type:func(*github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64 SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 35 c5 a4 3e 02 08 08 33 00 00 00 00 00 00 00 00  5..>...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.Hasher[int64], int64) uint64-+0
	rel 44+4 t=-32763 type:*func(*github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64+0
	rel 56+8 t=1 type:*github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 64+8 t=1 type:int64+0
	rel 72+8 t=1 type:uint64+0
type:.namedata.Hash64. SRODATA dupok size=8
	0x0000 01 06 48 61 73 68 36 34                          ..Hash64
type:.namedata.*func(int64) uint64- SRODATA dupok size=21
	0x0000 00 13 2a 66 75 6e 63 28 69 6e 74 36 34 29 20 75  ..*func(int64) u
	0x0010 69 6e 74 36 34                                   int64
type:*func(int64) uint64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 00 10 30 05 08 08 08 36 00 00 00 00 00 00 00 00  ..0....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(int64) uint64-+0
	rel 48+8 t=1 type:func(int64) uint64+0
type:func(int64) uint64 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b1 fa 44 dd 02 08 08 33 00 00 00 00 00 00 00 00  ..D....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(int64) uint64-+0
	rel 44+4 t=-32763 type:*func(int64) uint64+0
	rel 56+8 t=1 type:int64+0
	rel 64+8 t=1 type:uint64+0
type:*github.com/dolthub/swiss/minswiss.Hasher[int64] SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 0c 0e d0 cc 09 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 01 00 01 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.Hasher[int64].+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 56+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 72+4 t=5 type:.namedata.Hash64.+0
	rel 76+4 t=26 type:func(int64) uint64+0
	rel 80+4 t=26 github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64+0
	rel 84+4 t=26 github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64+0
type:.namedata.*func(minswiss.Hasher[int64], int64) uint64- SRODATA dupok size=45
	0x0000 00 2b 2a 66 75 6e 63 28 6d 69 6e 73 77 69 73 73  .+*func(minswiss
	0x0010 2e 48 61 73 68 65 72 5b 69 6e 74 36 34 5d 2c 20  .Hasher[int64], 
	0x0020 69 6e 74 36 34 29 20 75 69 6e 74 36 34           int64) uint64
type:*func(github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 74 92 f1 c1 08 08 08 36 00 00 00 00 00 00 00 00  t......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(minswiss.Hasher[int64], int64) uint64-+0
	rel 48+8 t=1 type:func(github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64+0
type:func(github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64 SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a8 3a 81 a0 02 08 08 33 00 00 00 00 00 00 00 00  .:.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(minswiss.Hasher[int64], int64) uint64-+0
	rel 44+4 t=-32763 type:*func(github.com/dolthub/swiss/minswiss.Hasher[int64], int64) uint64+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 64+8 t=1 type:int64+0
	rel 72+8 t=1 type:uint64+0
type:github.com/dolthub/swiss/minswiss.Hasher[int64] SRODATA dupok size=160
	0x0000 10 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2c 92 c9 21 07 08 08 19 00 00 00 00 00 00 00 00  ,..!............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 01 00 01 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.Hasher[int64].+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.hash-+0
	rel 104+8 t=1 type:github.com/dolthub/swiss/minswiss.hashfn+0
	rel 120+8 t=1 type:.namedata.seed-+0
	rel 128+8 t=1 type:uintptr+0
	rel 144+4 t=5 type:.namedata.Hash64.+0
	rel 148+4 t=26 type:func(int64) uint64+0
	rel 152+4 t=26 github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64+0
	rel 156+4 t=26 github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64+0
type:.namedata.*[8]int8- SRODATA dupok size=10
	0x0000 00 08 2a 5b 38 5d 69 6e 74 38                    ..*[8]int8
type:*[8]int8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 29 a4 12 3f 08 08 08 36 00 00 00 00 00 00 00 00  )..?...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[8]int8-+0
	rel 48+8 t=1 type:[8]int8+0
runtime.gcbits. SRODATA dupok size=0
type:[8]int8 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 b2 e3 cc 22 0a 01 01 11 00 00 00 00 00 00 00 00  ..."............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]int8-+0
	rel 44+4 t=-32763 type:*[8]int8+0
	rel 48+8 t=1 type:int8+0
	rel 56+8 t=1 type:[]int8+0
type:.namedata.*[8]uint8- SRODATA dupok size=11
	0x0000 00 09 2a 5b 38 5d 75 69 6e 74 38                 ..*[8]uint8
type:*[8]uint8 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 f8 9a 95 1a 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[8]uint8-+0
	rel 48+8 t=1 type:[8]uint8+0
type:[8]uint8 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 89 18 9c b4 0a 01 01 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]uint8-+0
	rel 44+4 t=-32763 type:*[8]uint8+0
	rel 48+8 t=1 type:uint8+0
	rel 56+8 t=1 type:[]uint8+0
runtime.memequal128路f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal128+0
type:.namedata.*minswiss.swissMetadata- SRODATA dupok size=25
	0x0000 00 17 2a 6d 69 6e 73 77 69 73 73 2e 73 77 69 73  ..*minswiss.swis
	0x0010 73 4d 65 74 61 64 61 74 61                       sMetadata
type:*github.com/dolthub/swiss/minswiss.swissMetadata SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 cd 69 25 96 08 08 08 36 00 00 00 00 00 00 00 00  .i%....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissMetadata-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissMetadata+0
type:.namedata.flags- SRODATA dupok size=7
	0x0000 00 05 66 6c 61 67 73                             ..flags
type:.namedata.masks- SRODATA dupok size=7
	0x0000 00 05 6d 61 73 6b 73                             ..masks
type:github.com/dolthub/swiss/minswiss.swissMetadata SRODATA size=144
	0x0000 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 40 05 ad 38 0f 01 01 19 00 00 00 00 00 00 00 00  @..8............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal128路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissMetadata-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.swissMetadata+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.swissMetadata+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.flags-+0
	rel 104+8 t=1 type:[8]int8+0
	rel 120+8 t=1 type:.namedata.masks-+0
	rel 128+8 t=1 type:[8]uint8+0
type:.namedata.*[]minswiss.swissMetadata- SRODATA dupok size=27
	0x0000 00 19 2a 5b 5d 6d 69 6e 73 77 69 73 73 2e 73 77  ..*[]minswiss.sw
	0x0010 69 73 73 4d 65 74 61 64 61 74 61                 issMetadata
type:*[]github.com/dolthub/swiss/minswiss.swissMetadata SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 af f4 09 e0 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissMetadata-+0
	rel 48+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissMetadata+0
type:[]github.com/dolthub/swiss/minswiss.swissMetadata SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 79 17 db a6 02 08 08 17 00 00 00 00 00 00 00 00  y...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissMetadata-+0
	rel 44+4 t=-32763 type:*[]github.com/dolthub/swiss/minswiss.swissMetadata+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissMetadata+0
type:.namedata.*go.shape.int64- SRODATA dupok size=17
	0x0000 00 0f 2a 67 6f 2e 73 68 61 70 65 2e 69 6e 74 36  ..*go.shape.int6
	0x0010 34                                               4
type:*go.shape.int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 45 a5 c8 b6 08 08 08 36 00 00 00 00 00 00 00 00  E......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*go.shape.int64-+0
	rel 48+8 t=1 type:go.shape.int64+0
type:.importpath.go.shape. SRODATA dupok size=10
	0x0000 00 08 67 6f 2e 73 68 61 70 65                    ..go.shape
type:go.shape.int64 SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 53 73 33 41 0f 08 08 06 00 00 00 00 00 00 00 00  Ss3A............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*go.shape.int64-+0
	rel 44+4 t=5 type:*go.shape.int64+0
	rel 48+4 t=5 type:.importpath.go.shape.+0
type:.namedata.*[]go.shape.int64- SRODATA dupok size=19
	0x0000 00 11 2a 5b 5d 67 6f 2e 73 68 61 70 65 2e 69 6e  ..*[]go.shape.in
	0x0010 74 36 34                                         t64
type:*[]go.shape.int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ac 30 58 7f 08 08 08 36 00 00 00 00 00 00 00 00  .0X....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]go.shape.int64-+0
	rel 48+8 t=1 type:[]go.shape.int64+0
type:[]go.shape.int64 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2d e5 21 86 02 08 08 17 00 00 00 00 00 00 00 00  -.!.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]go.shape.int64-+0
	rel 44+4 t=-32763 type:*[]go.shape.int64+0
	rel 48+8 t=1 type:go.shape.int64+0
type:.eqfunc64 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	rel 0+8 t=1 runtime.memequal_varlen+0
type:.namedata.*[8]go.shape.int64- SRODATA dupok size=20
	0x0000 00 12 2a 5b 38 5d 67 6f 2e 73 68 61 70 65 2e 69  ..*[8]go.shape.i
	0x0010 6e 74 36 34                                      nt64
type:*[8]go.shape.int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2f d6 73 a0 08 08 08 36 00 00 00 00 00 00 00 00  /.s....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[8]go.shape.int64-+0
	rel 48+8 t=1 type:[8]go.shape.int64+0
type:[8]go.shape.int64 SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 ad 4e e5 e7 0a 08 08 11 00 00 00 00 00 00 00 00  .N..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type:.eqfunc64+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]go.shape.int64-+0
	rel 44+4 t=-32763 type:*[8]go.shape.int64+0
	rel 48+8 t=1 type:go.shape.int64+0
	rel 56+8 t=1 type:[]go.shape.int64+0
type:.eqfunc128 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 80 00 00 00 00 00 00 00  ................
	rel 0+8 t=1 runtime.memequal_varlen+0
type:.namedata.*minswiss.swissGroup[go.shape.int64,go.shape.int64]- SRODATA dupok size=53
	0x0000 00 33 2a 6d 69 6e 73 77 69 73 73 2e 73 77 69 73  .3*minswiss.swis
	0x0010 73 47 72 6f 75 70 5b 67 6f 2e 73 68 61 70 65 2e  sGroup[go.shape.
	0x0020 69 6e 74 36 34 2c 67 6f 2e 73 68 61 70 65 2e 69  int64,go.shape.i
	0x0030 6e 74 36 34 5d                                   nt64]
type:*github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64] SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 21 78 3c 96 08 08 08 36 00 00 00 00 00 00 00 00  !x<....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissGroup[go.shape.int64,go.shape.int64]-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+0
type:.namedata.keys- SRODATA dupok size=6
	0x0000 00 04 6b 65 79 73                                ..keys
type:.namedata.values- SRODATA dupok size=8
	0x0000 00 06 76 61 6c 75 65 73                          ..values
type:github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64] SRODATA dupok size=144
	0x0000 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 75 67 f2 bd 0f 08 08 19 00 00 00 00 00 00 00 00  ug..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	rel 24+8 t=1 type:.eqfunc128+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissGroup[go.shape.int64,go.shape.int64]-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.keys-+0
	rel 104+8 t=1 type:[8]go.shape.int64+0
	rel 120+8 t=1 type:.namedata.values-+0
	rel 128+8 t=1 type:[8]go.shape.int64+0
type:.namedata.*[]minswiss.swissGroup[go.shape.int64,go.shape.int64]- SRODATA dupok size=55
	0x0000 00 35 2a 5b 5d 6d 69 6e 73 77 69 73 73 2e 73 77  .5*[]minswiss.sw
	0x0010 69 73 73 47 72 6f 75 70 5b 67 6f 2e 73 68 61 70  issGroup[go.shap
	0x0020 65 2e 69 6e 74 36 34 2c 67 6f 2e 73 68 61 70 65  e.int64,go.shape
	0x0030 2e 69 6e 74 36 34 5d                             .int64]
type:*[]github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64] SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 08 16 26 47 08 08 08 36 00 00 00 00 00 00 00 00  ..&G...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissGroup[go.shape.int64,go.shape.int64]-+0
	rel 48+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+0
type:[]github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64] SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 fb c0 d3 bd 02 08 08 17 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissGroup[go.shape.int64,go.shape.int64]-+0
	rel 44+4 t=-32763 type:*[]github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+0
type:.namedata.*minswiss.SwissMap[go.shape.int64,go.shape.int64]. SRODATA dupok size=51
	0x0000 01 31 2a 6d 69 6e 73 77 69 73 73 2e 53 77 69 73  .1*minswiss.Swis
	0x0010 73 4d 61 70 5b 67 6f 2e 73 68 61 70 65 2e 69 6e  sMap[go.shape.in
	0x0020 74 36 34 2c 67 6f 2e 73 68 61 70 65 2e 69 6e 74  t64,go.shape.int
	0x0030 36 34 5d                                         64]
type:*github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64] SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 10 ca 8b 08 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.SwissMap[go.shape.int64,go.shape.int64].+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64]+0
runtime.gcbits.4900000000000000 SRODATA dupok size=8
	0x0000 49 00 00 00 00 00 00 00                          I.......
type:.namedata.ctrl- SRODATA dupok size=6
	0x0000 00 04 63 74 72 6c                                ..ctrl
type:.namedata.groups- SRODATA dupok size=8
	0x0000 00 06 67 72 6f 75 70 73                          ..groups
type:.namedata.UnnecessaryCmp. SRODATA dupok size=16
	0x0000 01 0e 55 6e 6e 65 63 65 73 73 61 72 79 43 6d 70  ..UnnecessaryCmp
type:.namedata.resident- SRODATA dupok size=10
	0x0000 00 08 72 65 73 69 64 65 6e 74                    ..resident
type:.namedata.dead- SRODATA dupok size=6
	0x0000 00 04 64 65 61 64                                ..dead
type:.namedata.limit- SRODATA dupok size=7
	0x0000 00 05 6c 69 6d 69 74                             ..limit
type:github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64] SRODATA dupok size=264
	0x0000 58 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  X.......8.......
	0x0010 b2 28 5c fd 07 08 08 19 00 00 00 00 00 00 00 00  .(\.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 07 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 b8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x00b0 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00e0 00 00 00 00 00 00 00 00 4c 00 00 00 00 00 00 00  ........L.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 50 00 00 00 00 00 00 00                          P.......
	rel 32+8 t=1 runtime.gcbits.4900000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.SwissMap[go.shape.int64,go.shape.int64].+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64]+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.SwissMap[go.shape.int64,go.shape.int64]+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.ctrl-+0
	rel 104+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissMetadata+0
	rel 120+8 t=1 type:.namedata.groups-+0
	rel 128+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissGroup[go.shape.int64,go.shape.int64]+0
	rel 144+8 t=1 type:.namedata.hash-+0
	rel 152+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64]+0
	rel 168+8 t=1 type:.namedata.UnnecessaryCmp.+0
	rel 176+8 t=1 type:int+0
	rel 192+8 t=1 type:.namedata.resident-+0
	rel 200+8 t=1 type:uint32+0
	rel 216+8 t=1 type:.namedata.dead-+0
	rel 224+8 t=1 type:uint32+0
	rel 240+8 t=1 type:.namedata.limit-+0
	rel 248+8 t=1 type:uint32+0
runtime.memequal8路f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal8+0
type:.namedata.*minswiss.tflag- SRODATA dupok size=17
	0x0000 00 0f 2a 6d 69 6e 73 77 69 73 73 2e 74 66 6c 61  ..*minswiss.tfla
	0x0010 67                                               g
type:*github.com/dolthub/swiss/minswiss.tflag SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 25 3d 71 bc 08 08 08 36 00 00 00 00 00 00 00 00  %=q....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.tflag-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.tflag+0
type:github.com/dolthub/swiss/minswiss.tflag SRODATA size=64
	0x0000 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 41 f1 15 3c 0f 01 01 08 00 00 00 00 00 00 00 00  A..<............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal8路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.tflag-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.tflag+0
	rel 48+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
type:.namedata.*func(unsafe.Pointer, unsafe.Pointer) bool- SRODATA dupok size=44
	0x0000 00 2a 2a 66 75 6e 63 28 75 6e 73 61 66 65 2e 50  .**func(unsafe.P
	0x0010 6f 69 6e 74 65 72 2c 20 75 6e 73 61 66 65 2e 50  ointer, unsafe.P
	0x0020 6f 69 6e 74 65 72 29 20 62 6f 6f 6c              ointer) bool
type:*func(unsafe.Pointer, unsafe.Pointer) bool SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 87 7f 46 93 08 08 08 36 00 00 00 00 00 00 00 00  ..F....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(unsafe.Pointer, unsafe.Pointer) bool-+0
	rel 48+8 t=1 type:func(unsafe.Pointer, unsafe.Pointer) bool+0
type:func(unsafe.Pointer, unsafe.Pointer) bool SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d7 8f 92 d5 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(unsafe.Pointer, unsafe.Pointer) bool-+0
	rel 44+4 t=-32763 type:*func(unsafe.Pointer, unsafe.Pointer) bool+0
	rel 56+8 t=1 type:unsafe.Pointer+0
	rel 64+8 t=1 type:unsafe.Pointer+0
	rel 72+8 t=1 type:bool+0
runtime.memequal32路f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal32+0
type:.namedata.*minswiss.nameOff- SRODATA dupok size=19
	0x0000 00 11 2a 6d 69 6e 73 77 69 73 73 2e 6e 61 6d 65  ..*minswiss.name
	0x0010 4f 66 66                                         Off
type:*github.com/dolthub/swiss/minswiss.nameOff SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ed 37 4b ac 08 08 08 36 00 00 00 00 00 00 00 00  .7K....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.nameOff-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.nameOff+0
type:github.com/dolthub/swiss/minswiss.nameOff SRODATA size=64
	0x0000 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 53 be cb 43 0f 04 04 05 00 00 00 00 00 00 00 00  S..C............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal32路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.nameOff-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.nameOff+0
	rel 48+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
type:.namedata.*minswiss.typeOff- SRODATA dupok size=19
	0x0000 00 11 2a 6d 69 6e 73 77 69 73 73 2e 74 79 70 65  ..*minswiss.type
	0x0010 4f 66 66                                         Off
type:*github.com/dolthub/swiss/minswiss.typeOff SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 87 a4 db 85 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.typeOff-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.typeOff+0
type:github.com/dolthub/swiss/minswiss.typeOff SRODATA size=64
	0x0000 04 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 83 24 dd 6f 0f 04 04 05 00 00 00 00 00 00 00 00  .$.o............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal32路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.typeOff-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.typeOff+0
	rel 48+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
type:.namedata.*minswiss._type- SRODATA dupok size=17
	0x0000 00 0f 2a 6d 69 6e 73 77 69 73 73 2e 5f 74 79 70  ..*minswiss._typ
	0x0010 65                                               e
type:*github.com/dolthub/swiss/minswiss._type SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 20 95 6b ae 08 08 08 36 00 00 00 00 00 00 00 00   .k....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss._type-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss._type+0
runtime.gcbits.1800000000000000 SRODATA dupok size=8
	0x0000 18 00 00 00 00 00 00 00                          ........
type:.namedata.size- SRODATA dupok size=6
	0x0000 00 04 73 69 7a 65                                ..size
type:.namedata.ptrdata- SRODATA dupok size=9
	0x0000 00 07 70 74 72 64 61 74 61                       ..ptrdata
type:.namedata.tflag- SRODATA dupok size=7
	0x0000 00 05 74 66 6c 61 67                             ..tflag
type:.namedata.align- SRODATA dupok size=7
	0x0000 00 05 61 6c 69 67 6e                             ..align
type:.namedata.fieldAlign- SRODATA dupok size=12
	0x0000 00 0a 66 69 65 6c 64 41 6c 69 67 6e              ..fieldAlign
type:.namedata.kind- SRODATA dupok size=6
	0x0000 00 04 6b 69 6e 64                                ..kind
type:.namedata.equal- SRODATA dupok size=7
	0x0000 00 05 65 71 75 61 6c                             ..equal
type:.namedata.gcdata- SRODATA dupok size=8
	0x0000 00 06 67 63 64 61 74 61                          ..gcdata
type:.namedata.str- SRODATA dupok size=5
	0x0000 00 03 73 74 72                                   ..str
type:.namedata.ptrToThis- SRODATA dupok size=11
	0x0000 00 09 70 74 72 54 6f 54 68 69 73                 ..ptrToThis
type:github.com/dolthub/swiss/minswiss._type SRODATA size=360
	0x0000 30 00 00 00 00 00 00 00 28 00 00 00 00 00 00 00  0.......(.......
	0x0010 c5 6e 97 f4 07 08 08 19 00 00 00 00 00 00 00 00  .n..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0b 00 00 00 00 00 00 00 0b 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 18 01 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 14 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 15 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 16 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 17 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0140 00 00 00 00 00 00 00 00 28 00 00 00 00 00 00 00  ........(.......
	0x0150 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0160 2c 00 00 00 00 00 00 00                          ,.......
	rel 32+8 t=1 runtime.gcbits.1800000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss._type-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss._type+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss._type+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.size-+0
	rel 104+8 t=1 type:uintptr+0
	rel 120+8 t=1 type:.namedata.ptrdata-+0
	rel 128+8 t=1 type:uintptr+0
	rel 144+8 t=1 type:.namedata.hash-+0
	rel 152+8 t=1 type:uint32+0
	rel 168+8 t=1 type:.namedata.tflag-+0
	rel 176+8 t=1 type:github.com/dolthub/swiss/minswiss.tflag+0
	rel 192+8 t=1 type:.namedata.align-+0
	rel 200+8 t=1 type:uint8+0
	rel 216+8 t=1 type:.namedata.fieldAlign-+0
	rel 224+8 t=1 type:uint8+0
	rel 240+8 t=1 type:.namedata.kind-+0
	rel 248+8 t=1 type:uint8+0
	rel 264+8 t=1 type:.namedata.equal-+0
	rel 272+8 t=1 type:func(unsafe.Pointer, unsafe.Pointer) bool+0
	rel 288+8 t=1 type:.namedata.gcdata-+0
	rel 296+8 t=1 type:*uint8+0
	rel 312+8 t=1 type:.namedata.str-+0
	rel 320+8 t=1 type:github.com/dolthub/swiss/minswiss.nameOff+0
	rel 336+8 t=1 type:.namedata.ptrToThis-+0
	rel 344+8 t=1 type:github.com/dolthub/swiss/minswiss.typeOff+0
type:.eqfunc48 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	rel 0+8 t=1 runtime.memequal_varlen+0
type:.namedata.*minswiss.hmap- SRODATA dupok size=16
	0x0000 00 0e 2a 6d 69 6e 73 77 69 73 73 2e 68 6d 61 70  ..*minswiss.hmap
type:*github.com/dolthub/swiss/minswiss.hmap SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 51 de 7f 81 08 08 08 36 00 00 00 00 00 00 00 00  Q......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.hmap-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.hmap+0
runtime.gcbits.2c00000000000000 SRODATA dupok size=8
	0x0000 2c 00 00 00 00 00 00 00                          ,.......
type:.namedata.count- SRODATA dupok size=7
	0x0000 00 05 63 6f 75 6e 74                             ..count
type:.namedata.B. SRODATA dupok size=3
	0x0000 01 01 42                                         ..B
type:.namedata.noverflow- SRODATA dupok size=11
	0x0000 00 09 6e 6f 76 65 72 66 6c 6f 77                 ..noverflow
type:.namedata.hash0- SRODATA dupok size=7
	0x0000 00 05 68 61 73 68 30                             ..hash0
type:.namedata.buckets- SRODATA dupok size=9
	0x0000 00 07 62 75 63 6b 65 74 73                       ..buckets
type:.namedata.oldbuckets- SRODATA dupok size=12
	0x0000 00 0a 6f 6c 64 62 75 63 6b 65 74 73              ..oldbuckets
type:.namedata.nevacuate- SRODATA dupok size=11
	0x0000 00 09 6e 65 76 61 63 75 61 74 65                 ..nevacuate
type:.namedata.extra- SRODATA dupok size=7
	0x0000 00 05 65 78 74 72 61                             ..extra
type:github.com/dolthub/swiss/minswiss.hmap SRODATA size=312
	0x0000 30 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  0.......0.......
	0x0010 e3 91 43 fe 0f 08 08 19 00 00 00 00 00 00 00 00  ..C.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 e8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00  ................
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0110 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 28 00 00 00 00 00 00 00                          (.......
	rel 24+8 t=1 type:.eqfunc48+0
	rel 32+8 t=1 runtime.gcbits.2c00000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.hmap-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.hmap+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.hmap+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.count-+0
	rel 104+8 t=1 type:int+0
	rel 120+8 t=1 type:.namedata.flags-+0
	rel 128+8 t=1 type:uint8+0
	rel 144+8 t=1 type:.namedata.B.+0
	rel 152+8 t=1 type:uint8+0
	rel 168+8 t=1 type:.namedata.noverflow-+0
	rel 176+8 t=1 type:uint16+0
	rel 192+8 t=1 type:.namedata.hash0-+0
	rel 200+8 t=1 type:uint32+0
	rel 216+8 t=1 type:.namedata.buckets-+0
	rel 224+8 t=1 type:unsafe.Pointer+0
	rel 240+8 t=1 type:.namedata.oldbuckets-+0
	rel 248+8 t=1 type:unsafe.Pointer+0
	rel 264+8 t=1 type:.namedata.nevacuate-+0
	rel 272+8 t=1 type:uintptr+0
	rel 288+8 t=1 type:.namedata.extra-+0
	rel 296+8 t=1 type:unsafe.Pointer+0
type:.namedata.*func(unsafe.Pointer, uintptr) uintptr- SRODATA dupok size=40
	0x0000 00 26 2a 66 75 6e 63 28 75 6e 73 61 66 65 2e 50  .&*func(unsafe.P
	0x0010 6f 69 6e 74 65 72 2c 20 75 69 6e 74 70 74 72 29  ointer, uintptr)
	0x0020 20 75 69 6e 74 70 74 72                           uintptr
type:*func(unsafe.Pointer, uintptr) uintptr SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 26 c4 5b a9 08 08 08 36 00 00 00 00 00 00 00 00  &.[....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(unsafe.Pointer, uintptr) uintptr-+0
	rel 48+8 t=1 type:func(unsafe.Pointer, uintptr) uintptr+0
type:func(unsafe.Pointer, uintptr) uintptr SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 7e 79 21 74 02 08 08 33 00 00 00 00 00 00 00 00  ~y!t...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(unsafe.Pointer, uintptr) uintptr-+0
	rel 44+4 t=-32763 type:*func(unsafe.Pointer, uintptr) uintptr+0
	rel 56+8 t=1 type:unsafe.Pointer+0
	rel 64+8 t=1 type:uintptr+0
	rel 72+8 t=1 type:uintptr+0
runtime.gcbits.d803000000000000 SRODATA dupok size=8
	0x0000 d8 03 00 00 00 00 00 00                          ........
type:.namedata.*minswiss.maptype- SRODATA dupok size=19
	0x0000 00 11 2a 6d 69 6e 73 77 69 73 73 2e 6d 61 70 74  ..*minswiss.mapt
	0x0010 79 70 65                                         ype
type:.namedata.typ- SRODATA dupok size=5
	0x0000 00 03 74 79 70                                   ..typ
type:.namedata.key- SRODATA dupok size=5
	0x0000 00 03 6b 65 79                                   ..key
type:.namedata.elem- SRODATA dupok size=6
	0x0000 00 04 65 6c 65 6d                                ..elem
type:.namedata.bucket- SRODATA dupok size=8
	0x0000 00 06 62 75 63 6b 65 74                          ..bucket
type:.namedata.hasher- SRODATA dupok size=8
	0x0000 00 06 68 61 73 68 65 72                          ..hasher
type:.namedata.keysize- SRODATA dupok size=9
	0x0000 00 07 6b 65 79 73 69 7a 65                       ..keysize
type:.namedata.elemsize- SRODATA dupok size=10
	0x0000 00 08 65 6c 65 6d 73 69 7a 65                    ..elemsize
type:.namedata.bucketsize- SRODATA dupok size=12
	0x0000 00 0a 62 75 63 6b 65 74 73 69 7a 65              ..bucketsize
type:github.com/dolthub/swiss/minswiss.maptype SRODATA size=312
	0x0000 58 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  X.......P.......
	0x0010 05 7e 09 f3 07 08 08 19 00 00 00 00 00 00 00 00  .~..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 e8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  ........0.......
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 38 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  8...............
	0x00b0 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00e0 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 51 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  Q...............
	0x0110 00 00 00 00 00 00 00 00 52 00 00 00 00 00 00 00  ........R.......
	0x0120 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0130 54 00 00 00 00 00 00 00                          T.......
	rel 32+8 t=1 runtime.gcbits.d803000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.maptype-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.maptype+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.maptype+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.typ-+0
	rel 104+8 t=1 type:github.com/dolthub/swiss/minswiss._type+0
	rel 120+8 t=1 type:.namedata.key-+0
	rel 128+8 t=1 type:*github.com/dolthub/swiss/minswiss._type+0
	rel 144+8 t=1 type:.namedata.elem-+0
	rel 152+8 t=1 type:*github.com/dolthub/swiss/minswiss._type+0
	rel 168+8 t=1 type:.namedata.bucket-+0
	rel 176+8 t=1 type:*github.com/dolthub/swiss/minswiss._type+0
	rel 192+8 t=1 type:.namedata.hasher-+0
	rel 200+8 t=1 type:func(unsafe.Pointer, uintptr) uintptr+0
	rel 216+8 t=1 type:.namedata.keysize-+0
	rel 224+8 t=1 type:uint8+0
	rel 240+8 t=1 type:.namedata.elemsize-+0
	rel 248+8 t=1 type:uint8+0
	rel 264+8 t=1 type:.namedata.bucketsize-+0
	rel 272+8 t=1 type:uint16+0
	rel 288+8 t=1 type:.namedata.flags-+0
	rel 296+8 t=1 type:uint32+0
type:*github.com/dolthub/swiss/minswiss.maptype SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b4 56 98 a2 08 08 08 36 00 00 00 00 00 00 00 00  .V.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.maptype-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.maptype+0
type:.namedata.*minswiss.mapiface- SRODATA dupok size=20
	0x0000 00 12 2a 6d 69 6e 73 77 69 73 73 2e 6d 61 70 69  ..*minswiss.mapi
	0x0010 66 61 63 65                                      face
type:*github.com/dolthub/swiss/minswiss.mapiface SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 28 cf 22 fc 08 08 08 36 00 00 00 00 00 00 00 00  (."....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.mapiface-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.mapiface+0
runtime.gcbits.0300000000000000 SRODATA dupok size=8
	0x0000 03 00 00 00 00 00 00 00                          ........
type:.namedata.val- SRODATA dupok size=5
	0x0000 00 03 76 61 6c                                   ..val
type:github.com/dolthub/swiss/minswiss.mapiface SRODATA size=144
	0x0000 10 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x0010 7f 41 46 b2 0f 08 08 19 00 00 00 00 00 00 00 00  .AF.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal128路f+0
	rel 32+8 t=1 runtime.gcbits.0300000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.mapiface-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.mapiface+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.mapiface+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.typ-+0
	rel 104+8 t=1 type:*github.com/dolthub/swiss/minswiss.maptype+0
	rel 120+8 t=1 type:.namedata.val-+0
	rel 128+8 t=1 type:*github.com/dolthub/swiss/minswiss.hmap+0
type:.namedata.*[8]int64- SRODATA dupok size=11
	0x0000 00 09 2a 5b 38 5d 69 6e 74 36 34                 ..*[8]int64
type:*[8]int64 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b4 33 64 b1 08 08 08 36 00 00 00 00 00 00 00 00  .3d....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[8]int64-+0
	rel 48+8 t=1 type:[8]int64+0
type:[8]int64 SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 df 74 c3 e5 0a 08 08 11 00 00 00 00 00 00 00 00  .t..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type:.eqfunc64+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]int64-+0
	rel 44+4 t=-32763 type:*[8]int64+0
	rel 48+8 t=1 type:int64+0
	rel 56+8 t=1 type:[]int64+0
type:.namedata.*minswiss.swissGroup[int64,int64]- SRODATA dupok size=35
	0x0000 00 21 2a 6d 69 6e 73 77 69 73 73 2e 73 77 69 73  .!*minswiss.swis
	0x0010 73 47 72 6f 75 70 5b 69 6e 74 36 34 2c 69 6e 74  sGroup[int64,int
	0x0020 36 34 5d                                         64]
type:*github.com/dolthub/swiss/minswiss.swissGroup[int64,int64] SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 54 af a6 fd 08 08 08 36 00 00 00 00 00 00 00 00  T......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissGroup[int64,int64]-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
type:github.com/dolthub/swiss/minswiss.swissGroup[int64,int64] SRODATA dupok size=144
	0x0000 80 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 a1 98 ba 20 0f 08 08 19 00 00 00 00 00 00 00 00  ... ............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	rel 24+8 t=1 type:.eqfunc128+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissGroup[int64,int64]-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.keys-+0
	rel 104+8 t=1 type:[8]int64+0
	rel 120+8 t=1 type:.namedata.values-+0
	rel 128+8 t=1 type:[8]int64+0
type:.namedata.*minswiss.swissMeta128- SRODATA dupok size=24
	0x0000 00 16 2a 6d 69 6e 73 77 69 73 73 2e 73 77 69 73  ..*minswiss.swis
	0x0010 73 4d 65 74 61 31 32 38                          sMeta128
type:*github.com/dolthub/swiss/minswiss.swissMeta128 SRODATA size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 22 73 32 27 08 08 08 36 00 00 00 00 00 00 00 00  "s2'...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissMeta128-+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissMeta128+0
type:.namedata.flag- SRODATA dupok size=6
	0x0000 00 04 66 6c 61 67                                ..flag
type:.namedata.mask- SRODATA dupok size=6
	0x0000 00 04 6d 61 73 6b                                ..mask
type:github.com/dolthub/swiss/minswiss.swissMeta128 SRODATA size=144
	0x0000 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 e8 2d f7 5a 0f 08 08 19 00 00 00 00 00 00 00 00  .-.Z............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00 02 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal128路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*minswiss.swissMeta128-+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.swissMeta128+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.swissMeta128+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.flag-+0
	rel 104+8 t=1 type:uint64+0
	rel 120+8 t=1 type:.namedata.mask-+0
	rel 128+8 t=1 type:uint64+0
type:.eqfunc80 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 50 00 00 00 00 00 00 00  ........P.......
	rel 0+8 t=1 runtime.memequal_varlen+0
type:.namedata.*[10]uintptr- SRODATA dupok size=14
	0x0000 00 0c 2a 5b 31 30 5d 75 69 6e 74 70 74 72        ..*[10]uintptr
type:[10]uintptr SRODATA dupok size=72
	0x0000 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0010 4e bb 67 f6 0a 08 08 11 00 00 00 00 00 00 00 00  N.g.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 0a 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type:.eqfunc80+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[10]uintptr-+0
	rel 44+4 t=-32763 type:*[10]uintptr+0
	rel 48+8 t=1 type:uintptr+0
	rel 56+8 t=1 type:[]uintptr+0
type:*[10]uintptr SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 2a 83 23 ac 08 08 08 36 00 00 00 00 00 00 00 00  *.#....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[10]uintptr-+0
	rel 48+8 t=1 type:[10]uintptr+0
type:.namedata.*[2]uintptr- SRODATA dupok size=13
	0x0000 00 0b 2a 5b 32 5d 75 69 6e 74 70 74 72           ..*[2]uintptr
type:[2]uintptr SRODATA dupok size=72
	0x0000 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 2e d3 d2 d2 0a 08 08 11 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 02 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal128路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[2]uintptr-+0
	rel 44+4 t=-32763 type:*[2]uintptr+0
	rel 48+8 t=1 type:uintptr+0
	rel 56+8 t=1 type:[]uintptr+0
type:*[2]uintptr SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 c2 52 d4 df 08 08 08 36 00 00 00 00 00 00 00 00  .R.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[2]uintptr-+0
	rel 48+8 t=1 type:[2]uintptr+0
type:.eqfunc32 SRODATA dupok size=16
	0x0000 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	rel 0+8 t=1 runtime.memequal_varlen+0
type:.namedata.*[4]uintptr- SRODATA dupok size=13
	0x0000 00 0b 2a 5b 34 5d 75 69 6e 74 70 74 72           ..*[4]uintptr
type:[4]uintptr SRODATA dupok size=72
	0x0000 20 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00   ...............
	0x0010 d4 e5 48 03 0a 08 08 11 00 00 00 00 00 00 00 00  ..H.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 type:.eqfunc32+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[4]uintptr-+0
	rel 44+4 t=-32763 type:*[4]uintptr+0
	rel 48+8 t=1 type:uintptr+0
	rel 56+8 t=1 type:[]uintptr+0
type:*[4]uintptr SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bc 51 44 02 08 08 08 36 00 00 00 00 00 00 00 00  .QD....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[4]uintptr-+0
	rel 48+8 t=1 type:[4]uintptr+0
type:.namedata.*[]minswiss.swissMeta128- SRODATA dupok size=26
	0x0000 00 18 2a 5b 5d 6d 69 6e 73 77 69 73 73 2e 73 77  ..*[]minswiss.sw
	0x0010 69 73 73 4d 65 74 61 31 32 38                    issMeta128
type:[]github.com/dolthub/swiss/minswiss.swissMeta128 SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 21 33 a8 02 02 08 08 17 00 00 00 00 00 00 00 00  !3..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissMeta128-+0
	rel 44+4 t=-32763 type:*[]github.com/dolthub/swiss/minswiss.swissMeta128+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissMeta128+0
type:*[]github.com/dolthub/swiss/minswiss.swissMeta128 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 33 84 9f 84 08 08 08 36 00 00 00 00 00 00 00 00  3......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissMeta128-+0
	rel 48+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissMeta128+0
type:.namedata.*[]minswiss.swissGroup[int64,int64]- SRODATA dupok size=37
	0x0000 00 23 2a 5b 5d 6d 69 6e 73 77 69 73 73 2e 73 77  .#*[]minswiss.sw
	0x0010 69 73 73 47 72 6f 75 70 5b 69 6e 74 36 34 2c 69  issGroup[int64,i
	0x0020 6e 74 36 34 5d                                   nt64]
type:*[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64] SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 45 03 38 71 08 08 08 36 00 00 00 00 00 00 00 00  E.8q...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissGroup[int64,int64]-+0
	rel 48+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
type:[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64] SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6c 73 4d 1e 02 08 08 17 00 00 00 00 00 00 00 00  lsM.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]minswiss.swissGroup[int64,int64]-+0
	rel 44+4 t=-32763 type:*[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
type:.namedata.*minswiss.SwissMap[int64,int64]. SRODATA dupok size=33
	0x0000 01 1f 2a 6d 69 6e 73 77 69 73 73 2e 53 77 69 73  ..*minswiss.Swis
	0x0010 73 4d 61 70 5b 69 6e 74 36 34 2c 69 6e 74 36 34  sMap[int64,int64
	0x0020 5d                                               ]
type:github.com/dolthub/swiss/minswiss.SwissMap[int64,int64] SRODATA dupok size=264
	0x0000 58 00 00 00 00 00 00 00 38 00 00 00 00 00 00 00  X.......8.......
	0x0010 19 65 b9 77 07 08 08 19 00 00 00 00 00 00 00 00  .e.w............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 07 00 00 00 00 00 00 00 07 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 b8 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  ................
	0x0090 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 30 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  0...............
	0x00b0 00 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00  ........@.......
	0x00c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00e0 00 00 00 00 00 00 00 00 4c 00 00 00 00 00 00 00  ........L.......
	0x00f0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 50 00 00 00 00 00 00 00                          P.......
	rel 32+8 t=1 runtime.gcbits.4900000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.SwissMap[int64,int64].+0
	rel 44+4 t=5 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 48+8 t=1 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 56+8 t=1 type:github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+96
	rel 80+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 96+8 t=1 type:.namedata.ctrl-+0
	rel 104+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissMetadata+0
	rel 120+8 t=1 type:.namedata.groups-+0
	rel 128+8 t=1 type:[]github.com/dolthub/swiss/minswiss.swissGroup[int64,int64]+0
	rel 144+8 t=1 type:.namedata.hash-+0
	rel 152+8 t=1 type:github.com/dolthub/swiss/minswiss.Hasher[int64]+0
	rel 168+8 t=1 type:.namedata.UnnecessaryCmp.+0
	rel 176+8 t=1 type:int+0
	rel 192+8 t=1 type:.namedata.resident-+0
	rel 200+8 t=1 type:uint32+0
	rel 216+8 t=1 type:.namedata.dead-+0
	rel 224+8 t=1 type:uint32+0
	rel 240+8 t=1 type:.namedata.limit-+0
	rel 248+8 t=1 type:uint32+0
type:.namedata.*func(*minswiss.SwissMap[int64,int64]) int- SRODATA dupok size=44
	0x0000 00 2a 2a 66 75 6e 63 28 2a 6d 69 6e 73 77 69 73  .**func(*minswis
	0x0010 73 2e 53 77 69 73 73 4d 61 70 5b 69 6e 74 36 34  s.SwissMap[int64
	0x0020 2c 69 6e 74 36 34 5d 29 20 69 6e 74              ,int64]) int
type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 91 31 43 97 08 08 08 36 00 00 00 00 00 00 00 00  .1C....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64]) int-+0
	rel 48+8 t=1 type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) int+0
type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) int SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b5 a0 b2 cb 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64]) int-+0
	rel 44+4 t=-32763 type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) int+0
	rel 56+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 64+8 t=1 type:int+0
type:.namedata.*func(*minswiss.SwissMap[int64,int64], int64) (int64, bool)- SRODATA dupok size=61
	0x0000 00 3b 2a 66 75 6e 63 28 2a 6d 69 6e 73 77 69 73  .;*func(*minswis
	0x0010 73 2e 53 77 69 73 73 4d 61 70 5b 69 6e 74 36 34  s.SwissMap[int64
	0x0020 2c 69 6e 74 36 34 5d 2c 20 69 6e 74 36 34 29 20  ,int64], int64) 
	0x0030 28 69 6e 74 36 34 2c 20 62 6f 6f 6c 29           (int64, bool)
type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64) (int64, bool) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6e 99 9b bc 08 08 08 36 00 00 00 00 00 00 00 00  n......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64], int64) (int64, bool)-+0
	rel 48+8 t=1 type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64) (int64, bool)+0
type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64) (int64, bool) SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 e2 d6 82 1f 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64], int64) (int64, bool)-+0
	rel 44+4 t=-32763 type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64) (int64, bool)+0
	rel 56+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 64+8 t=1 type:int64+0
	rel 72+8 t=1 type:int64+0
	rel 80+8 t=1 type:bool+0
type:.namedata.*func(*minswiss.SwissMap[int64,int64]) uint32- SRODATA dupok size=47
	0x0000 00 2d 2a 66 75 6e 63 28 2a 6d 69 6e 73 77 69 73  .-*func(*minswis
	0x0010 73 2e 53 77 69 73 73 4d 61 70 5b 69 6e 74 36 34  s.SwissMap[int64
	0x0020 2c 69 6e 74 36 34 5d 29 20 75 69 6e 74 33 32     ,int64]) uint32
type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) uint32 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 ad ec eb ca 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64]) uint32-+0
	rel 48+8 t=1 type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) uint32+0
type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) uint32 SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 cb 7d 16 19 02 08 08 33 00 00 00 00 00 00 00 00  .}.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64]) uint32-+0
	rel 44+4 t=-32763 type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]) uint32+0
	rel 56+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 64+8 t=1 type:uint32+0
type:.namedata.*func(*minswiss.SwissMap[int64,int64], int64, int64)- SRODATA dupok size=54
	0x0000 00 34 2a 66 75 6e 63 28 2a 6d 69 6e 73 77 69 73  .4*func(*minswis
	0x0010 73 2e 53 77 69 73 73 4d 61 70 5b 69 6e 74 36 34  s.SwissMap[int64
	0x0020 2c 69 6e 74 36 34 5d 2c 20 69 6e 74 36 34 2c 20  ,int64], int64, 
	0x0030 69 6e 74 36 34 29                                int64)
type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64, int64) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 d0 fa 00 8c 08 08 08 36 00 00 00 00 00 00 00 00  .......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64], int64, int64)-+0
	rel 48+8 t=1 type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64, int64)+0
type:func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64, int64) SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 b0 c8 90 83 02 08 08 33 00 00 00 00 00 00 00 00  .......3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 03 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(*minswiss.SwissMap[int64,int64], int64, int64)-+0
	rel 44+4 t=-32763 type:*func(*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64], int64, int64)+0
	rel 56+8 t=1 type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 64+8 t=1 type:int64+0
	rel 72+8 t=1 type:int64+0
type:.namedata.Count. SRODATA dupok size=7
	0x0000 01 05 43 6f 75 6e 74                             ..Count
type:.namedata.*func() int- SRODATA dupok size=13
	0x0000 00 0b 2a 66 75 6e 63 28 29 20 69 6e 74           ..*func() int
type:*func() int SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a8 2d ca 18 08 08 08 36 00 00 00 00 00 00 00 00  .-.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func() int-+0
	rel 48+8 t=1 type:func() int+0
type:func() int SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 bd 68 d6 de 02 08 08 33 00 00 00 00 00 00 00 00  .h.....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func() int-+0
	rel 44+4 t=-32763 type:*func() int+0
	rel 56+8 t=1 type:int+0
type:.namedata.Get. SRODATA dupok size=5
	0x0000 01 03 47 65 74                                   ..Get
type:.namedata.*func(int64) (int64, bool)- SRODATA dupok size=28
	0x0000 00 1a 2a 66 75 6e 63 28 69 6e 74 36 34 29 20 28  ..*func(int64) (
	0x0010 69 6e 74 36 34 2c 20 62 6f 6f 6c 29              int64, bool)
type:*func(int64) (int64, bool) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 58 09 6d 90 08 08 08 36 00 00 00 00 00 00 00 00  X.m....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(int64) (int64, bool)-+0
	rel 48+8 t=1 type:func(int64) (int64, bool)+0
type:func(int64) (int64, bool) SRODATA dupok size=80
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 1b 64 d7 5c 02 08 08 33 00 00 00 00 00 00 00 00  .d.\...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 01 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(int64) (int64, bool)-+0
	rel 44+4 t=-32763 type:*func(int64) (int64, bool)+0
	rel 56+8 t=1 type:int64+0
	rel 64+8 t=1 type:int64+0
	rel 72+8 t=1 type:bool+0
type:.namedata.GetResident. SRODATA dupok size=13
	0x0000 01 0b 47 65 74 52 65 73 69 64 65 6e 74           ..GetResident
type:.namedata.*func() uint32- SRODATA dupok size=16
	0x0000 00 0e 2a 66 75 6e 63 28 29 20 75 69 6e 74 33 32  ..*func() uint32
type:*func() uint32 SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 a4 46 f0 94 08 08 08 36 00 00 00 00 00 00 00 00  .F.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func() uint32-+0
	rel 48+8 t=1 type:func() uint32+0
type:func() uint32 SRODATA dupok size=64
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 48 1b 31 4e 02 08 08 33 00 00 00 00 00 00 00 00  H.1N...3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 01 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func() uint32-+0
	rel 44+4 t=-32763 type:*func() uint32+0
	rel 56+8 t=1 type:uint32+0
type:.namedata.Put. SRODATA dupok size=5
	0x0000 01 03 50 75 74                                   ..Put
type:.namedata.*func(int64, int64)- SRODATA dupok size=21
	0x0000 00 13 2a 66 75 6e 63 28 69 6e 74 36 34 2c 20 69  ..*func(int64, i
	0x0010 6e 74 36 34 29                                   nt64)
type:*func(int64, int64) SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 6c d1 8e f0 08 08 08 36 00 00 00 00 00 00 00 00  l......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(int64, int64)-+0
	rel 48+8 t=1 type:func(int64, int64)+0
type:func(int64, int64) SRODATA dupok size=72
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 df 7f 21 e9 02 08 08 33 00 00 00 00 00 00 00 00  ..!....3........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*func(int64, int64)-+0
	rel 44+4 t=-32763 type:*func(int64, int64)+0
	rel 56+8 t=1 type:int64+0
	rel 64+8 t=1 type:int64+0
type:*github.com/dolthub/swiss/minswiss.SwissMap[int64,int64] SRODATA dupok size=136
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4d f2 c5 9e 09 08 08 36 00 00 00 00 00 00 00 00  M......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 04 00 04 00  ................
	0x0040 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*minswiss.SwissMap[int64,int64].+0
	rel 48+8 t=1 type:github.com/dolthub/swiss/minswiss.SwissMap[int64,int64]+0
	rel 56+4 t=5 type:.importpath.github.com/dolthub/swiss/minswiss.+0
	rel 72+4 t=5 type:.namedata.Count.+0
	rel 76+4 t=26 type:func() int+0
	rel 80+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count+0
	rel 84+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count+0
	rel 88+4 t=5 type:.namedata.Get.+0
	rel 92+4 t=26 type:func(int64) (int64, bool)+0
	rel 96+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get+0
	rel 100+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get+0
	rel 104+4 t=5 type:.namedata.GetResident.+0
	rel 108+4 t=26 type:func() uint32+0
	rel 112+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident+0
	rel 116+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident+0
	rel 120+4 t=5 type:.namedata.Put.+0
	rel 124+4 t=26 type:func(int64, int64)+0
	rel 128+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put+0
	rel 132+4 t=26 github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put+0
runtime.memequal0路f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memequal0+0
type:.namedata.*struct {}- SRODATA dupok size=12
	0x0000 00 0a 2a 73 74 72 75 63 74 20 7b 7d              ..*struct {}
type:*struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 69 29 f0 fb 08 08 08 36 00 00 00 00 00 00 00 00  i).....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*struct {}-+0
	rel 48+8 t=1 type:struct {}+0
type:struct {} SRODATA dupok size=80
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 56 1e 04 e5 0a 01 01 19 00 00 00 00 00 00 00 00  V...............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	rel 24+8 t=1 runtime.memequal0路f+0
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*struct {}-+0
	rel 44+4 t=-32763 type:*struct {}+0
	rel 56+8 t=1 type:struct {}+80
type:noalg.[8]int64 SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 df 74 c3 e5 02 08 08 11 00 00 00 00 00 00 00 00  .t..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]int64-+0
	rel 44+4 t=-32763 type:*[8]int64+0
	rel 48+8 t=1 type:int64+0
	rel 56+8 t=1 type:[]int64+0
type:.namedata.*[]struct {}- SRODATA dupok size=14
	0x0000 00 0c 2a 5b 5d 73 74 72 75 63 74 20 7b 7d        ..*[]struct {}
type:*[]struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 31 0f 50 2c 08 08 08 36 00 00 00 00 00 00 00 00  1.P,...6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]struct {}-+0
	rel 48+8 t=1 type:[]struct {}+0
type:[]struct {} SRODATA dupok size=56
	0x0000 18 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 43 1c 43 55 02 08 08 17 00 00 00 00 00 00 00 00  C.CU............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[]struct {}-+0
	rel 44+4 t=-32763 type:*[]struct {}+0
	rel 48+8 t=1 type:struct {}+0
type:.namedata.*[8]struct {}- SRODATA dupok size=15
	0x0000 00 0d 2a 5b 38 5d 73 74 72 75 63 74 20 7b 7d     ..*[8]struct {}
type:*[8]struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 49 6b f1 95 08 08 08 36 00 00 00 00 00 00 00 00  Ik.....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*[8]struct {}-+0
	rel 48+8 t=1 type:noalg.[8]struct {}+0
type:noalg.[8]struct {} SRODATA dupok size=72
	0x0000 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0010 47 6a 6d 5e 02 01 01 11 00 00 00 00 00 00 00 00  Gjm^............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]struct {}-+0
	rel 44+4 t=-32763 type:*[8]struct {}+0
	rel 48+8 t=1 type:struct {}+0
	rel 56+8 t=1 type:[]struct {}+0
type:.namedata.*map.bucket[int64]struct {}- SRODATA dupok size=29
	0x0000 00 1b 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 69 6e  ..*map.bucket[in
	0x0010 74 36 34 5d 73 74 72 75 63 74 20 7b 7d           t64]struct {}
type:*map.bucket[int64]struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 36 ec 7e ef 08 08 08 36 00 00 00 00 00 00 00 00  6.~....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*map.bucket[int64]struct {}-+0
	rel 48+8 t=1 type:noalg.map.bucket[int64]struct {}+0
type:.importpath.. SRODATA dupok size=2
	0x0000 00 00                                            ..
type:.namedata.topbits- SRODATA dupok size=9
	0x0000 00 07 74 6f 70 62 69 74 73                       ..topbits
type:.namedata.elems- SRODATA dupok size=7
	0x0000 00 05 65 6c 65 6d 73                             ..elems
type:.namedata.overflow- SRODATA dupok size=10
	0x0000 00 08 6f 76 65 72 66 6c 6f 77                    ..overflow
type:noalg.map.bucket[int64]struct {} SRODATA dupok size=176
	0x0000 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0010 48 35 2f 9a 02 08 08 19 00 00 00 00 00 00 00 00  H5/.............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00a0 00 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  ........H.......
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*map.bucket[int64]struct {}-+0
	rel 44+4 t=-32763 type:*map.bucket[int64]struct {}+0
	rel 48+8 t=1 type:.importpath..+0
	rel 56+8 t=1 type:noalg.map.bucket[int64]struct {}+80
	rel 80+8 t=1 type:.namedata.topbits-+0
	rel 88+8 t=1 type:[8]uint8+0
	rel 104+8 t=1 type:.namedata.keys-+0
	rel 112+8 t=1 type:noalg.[8]int64+0
	rel 128+8 t=1 type:.namedata.elems-+0
	rel 136+8 t=1 type:noalg.[8]struct {}+0
	rel 152+8 t=1 type:.namedata.overflow-+0
	rel 160+8 t=1 type:uintptr+0
runtime.memhash64路f SRODATA dupok size=8
	0x0000 00 00 00 00 00 00 00 00                          ........
	rel 0+8 t=1 runtime.memhash64+0
type:.namedata.*map[int64]struct {}- SRODATA dupok size=22
	0x0000 00 14 2a 6d 61 70 5b 69 6e 74 36 34 5d 73 74 72  ..*map[int64]str
	0x0010 75 63 74 20 7b 7d                                uct {}
type:*map[int64]struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 9a f9 77 d8 08 08 08 36 00 00 00 00 00 00 00 00  ..w....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*map[int64]struct {}-+0
	rel 48+8 t=1 type:map[int64]struct {}+0
type:map[int64]struct {} SRODATA dupok size=88
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 18 28 04 0a 02 08 08 35 00 00 00 00 00 00 00 00  .(.....5........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0050 08 00 50 00 04 00 00 00                          ..P.....
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*map[int64]struct {}-+0
	rel 44+4 t=-32763 type:*map[int64]struct {}+0
	rel 48+8 t=1 type:int64+0
	rel 56+8 t=1 type:struct {}+0
	rel 64+8 t=1 type:noalg.map.bucket[int64]struct {}+0
	rel 72+8 t=1 runtime.memhash64路f+0
type:noalg.[8]go.shape.int64 SRODATA dupok size=72
	0x0000 40 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  @...............
	0x0010 ad 4e e5 e7 02 08 08 11 00 00 00 00 00 00 00 00  .N..............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 08 00 00 00 00 00 00 00                          ........
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*[8]go.shape.int64-+0
	rel 44+4 t=-32763 type:*[8]go.shape.int64+0
	rel 48+8 t=1 type:go.shape.int64+0
	rel 56+8 t=1 type:[]go.shape.int64+0
type:.namedata.*map.bucket[go.shape.int64]struct {}- SRODATA dupok size=38
	0x0000 00 24 2a 6d 61 70 2e 62 75 63 6b 65 74 5b 67 6f  .$*map.bucket[go
	0x0010 2e 73 68 61 70 65 2e 69 6e 74 36 34 5d 73 74 72  .shape.int64]str
	0x0020 75 63 74 20 7b 7d                                uct {}
type:*map.bucket[go.shape.int64]struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 4c 0c d5 d6 08 08 08 36 00 00 00 00 00 00 00 00  L......6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*map.bucket[go.shape.int64]struct {}-+0
	rel 48+8 t=1 type:noalg.map.bucket[go.shape.int64]struct {}+0
type:noalg.map.bucket[go.shape.int64]struct {} SRODATA dupok size=176
	0x0000 50 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  P...............
	0x0010 f7 cf f0 11 02 08 08 19 00 00 00 00 00 00 00 00  ................
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 04 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 48 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  H...............
	0x00a0 00 00 00 00 00 00 00 00 48 00 00 00 00 00 00 00  ........H.......
	rel 32+8 t=1 runtime.gcbits.+0
	rel 40+4 t=5 type:.namedata.*map.bucket[go.shape.int64]struct {}-+0
	rel 44+4 t=-32763 type:*map.bucket[go.shape.int64]struct {}+0
	rel 48+8 t=1 type:.importpath..+0
	rel 56+8 t=1 type:noalg.map.bucket[go.shape.int64]struct {}+80
	rel 80+8 t=1 type:.namedata.topbits-+0
	rel 88+8 t=1 type:[8]uint8+0
	rel 104+8 t=1 type:.namedata.keys-+0
	rel 112+8 t=1 type:noalg.[8]go.shape.int64+0
	rel 128+8 t=1 type:.namedata.elems-+0
	rel 136+8 t=1 type:noalg.[8]struct {}+0
	rel 152+8 t=1 type:.namedata.overflow-+0
	rel 160+8 t=1 type:uintptr+0
type:.namedata.*map.hdr[go.shape.int64]struct {}- SRODATA dupok size=35
	0x0000 00 21 2a 6d 61 70 2e 68 64 72 5b 67 6f 2e 73 68  .!*map.hdr[go.sh
	0x0010 61 70 65 2e 69 6e 74 36 34 5d 73 74 72 75 63 74  ape.int64]struct
	0x0020 20 7b 7d                                          {}
type:*map.hdr[go.shape.int64]struct {} SRODATA dupok size=56
	0x0000 08 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0010 06 86 48 d6 08 08 08 36 00 00 00 00 00 00 00 00  ..H....6........
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00                          ........
	rel 24+8 t=1 runtime.memequal64路f+0
	rel 32+8 t=1 runtime.gcbits.0100000000000000+0
	rel 40+4 t=5 type:.namedata.*map.hdr[go.shape.int64]struct {}-+0
	rel 48+8 t=1 type:noalg.map.hdr[go.shape.int64]struct {}+0
type:noalg.map.hdr[go.shape.int64]struct {} SRODATA dupok size=296
	0x0000 30 00 00 00 00 00 00 00 30 00 00 00 00 00 00 00  0.......0.......
	0x0010 00 3c d9 22 02 08 08 19 00 00 00 00 00 00 00 00  .<."............
	0x0020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0040 09 00 00 00 00 00 00 00 09 00 00 00 00 00 00 00  ................
	0x0050 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0060 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0070 00 00 00 00 00 00 00 00 08 00 00 00 00 00 00 00  ................
	0x0080 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0090 09 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00a0 00 00 00 00 00 00 00 00 0a 00 00 00 00 00 00 00  ................
	0x00b0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00c0 0c 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00d0 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  ................
	0x00e0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x00f0 18 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0100 00 00 00 00 00 00 00 00 20 00 00 00 00 00 00 00  ........ .......
	0x0110 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
	0x0120 28 00 00 00 00 00 00 00                          (.......
	rel 32+8 t=1 runtime.gcbits.2c00000000000000+0
	rel 40+4 t=5 type:.namedata.*map.hdr[go.shape.int64]struct {}-+0
	rel 44+4 t=-32763 type:*map.hdr[go.shape.int64]struct {}+0
	rel 48+8 t=1 type:.importpath..+0
	rel 56+8 t=1 type:noalg.map.hdr[go.shape.int64]struct {}+80
	rel 80+8 t=1 type:.namedata.count-+0
	rel 88+8 t=1 type:int+0
	rel 104+8 t=1 type:.namedata.flags-+0
	rel 112+8 t=1 type:uint8+0
	rel 128+8 t=1 type:.namedata.B.+0
	rel 136+8 t=1 type:uint8+0
	rel 152+8 t=1 type:.namedata.noverflow-+0
	rel 160+8 t=1 type:uint16+0
	rel 176+8 t=1 type:.namedata.hash0-+0
	rel 184+8 t=1 type:uint32+0
	rel 200+8 t=1 type:.namedata.buckets-+0
	rel 208+8 t=1 type:*map.bucket[go.shape.int64]struct {}+0
	rel 224+8 t=1 type:.namedata.oldbuckets-+0
	rel 232+8 t=1 type:*map.bucket[go.shape.int64]struct {}+0
	rel 248+8 t=1 type:.namedata.nevacuate-+0
	rel 256+8 t=1 type:uintptr+0
	rel 272+8 t=1 type:.namedata.extra-+0
	rel 280+8 t=1 type:unsafe.Pointer+0
runtime.gcbits.0200000000000000 SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
type:.importpath.math/bits. SRODATA dupok size=11
	0x0000 00 09 6d 61 74 68 2f 62 69 74 73                 ..math/bits
type:.importpath.unsafe. SRODATA dupok size=8
	0x0000 00 06 75 6e 73 61 66 65                          ..unsafe
gclocals路J5F+7Qw7O7ve2QcWC7DpeQ== SRODATA dupok size=8
	0x0000 02 00 00 00 00 00 00 00                          ........
gclocals路CnDyI2HjYXFz19SsOj98tw== SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 00 01                    ..........
gclocals路wgcWObbY2HYnK2SU/U22lA== SRODATA dupok size=10
	0x0000 02 00 00 00 01 00 00 00 01 00                    ..........
github.com/dolthub/swiss/minswiss.noescape.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
github.com/dolthub/swiss/minswiss.noescape.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.swissMetaMatchH2.arginfo1 SRODATA static dupok size=5
	0x0000 00 08 08 01 ff                                   .....
github.com/dolthub/swiss/minswiss.swissMetaMatchH2.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
github.com/dolthub/swiss/minswiss.swissMetaMatchEmpty.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.swissNextMatch.arginfo1 SRODATA static dupok size=3
	0x0000 00 08 ff                                         ...
github.com/dolthub/swiss/minswiss.swissNextMatch.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路Tumw6UTxFRAq+KySimItaw== SRODATA dupok size=13
	0x0000 05 00 00 00 01 00 00 00 01 01 00 00 00           .............
gclocals路Phyq/d6BZbzUZVVjvsVctA== SRODATA dupok size=18
	0x0000 05 00 00 00 0c 00 00 00 00 00 08 00 0d 0b 0e 00  ................
	0x0010 00 00                                            ..
github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64].stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 c0 ff ff ff 10 00 00 00  ................
	0x0010 10 00 00 00 00 00 00 00 d0 ff ff ff 30 00 00 00  ............0...
	0x0020 30 00 00 00 00 00 00 00                          0.......
	rel 20+4 t=5 runtime.gcbits.0200000000000000+0
	rel 36+4 t=5 runtime.gcbits.2c00000000000000+0
github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64].arginfo1 SRODATA static dupok size=3
	0x0000 08 04 ff                                         ...
github.com/dolthub/swiss/minswiss.NewSwissMap[go.shape.int64,go.shape.int64].argliveinfo SRODATA static dupok size=3
	0x0000 00 00 01                                         ...
gclocals路ZzMiPAiVBg7DJ6dh/CjSag== SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 00 00                 ...........
gclocals路tSuPxvBNf0WVVkGD8PbKlw== SRODATA dupok size=14
	0x0000 03 00 00 00 09 00 00 00 00 00 61 01 00 00        ..........a...
github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64].stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 c0 ff ff ff 10 00 00 00  ................
	0x0010 10 00 00 00 00 00 00 00 d0 ff ff ff 30 00 00 00  ............0...
	0x0020 30 00 00 00 00 00 00 00                          0.......
	rel 20+4 t=5 runtime.gcbits.0200000000000000+0
	rel 36+4 t=5 runtime.gcbits.2c00000000000000+0
github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64].arginfo1 SRODATA static dupok size=1
	0x0000 ff                                               .
github.com/dolthub/swiss/minswiss.NewHasher[go.shape.int64].argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路m/6RUmNv6NBhMUL8eleFFA== SRODATA dupok size=11
	0x0000 03 00 00 00 01 00 00 00 01 01 00                 ...........
gclocals路O+miRm5G4+5xMEd53epf0A== SRODATA dupok size=11
	0x0000 03 00 00 00 08 00 00 00 00 b0 00                 ...........
github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64].stkobj SRODATA static size=40
	0x0000 02 00 00 00 00 00 00 00 c0 ff ff ff 10 00 00 00  ................
	0x0010 10 00 00 00 00 00 00 00 d0 ff ff ff 30 00 00 00  ............0...
	0x0020 30 00 00 00 00 00 00 00                          0.......
	rel 20+4 t=5 runtime.gcbits.0200000000000000+0
	rel 36+4 t=5 runtime.gcbits.2c00000000000000+0
github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64].arginfo1 SRODATA static dupok size=1
	0x0000 ff                                               .
github.com/dolthub/swiss/minswiss.getRuntimeHasher[go.shape.int64].argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路Jog/qYB4a+fiwM7je5AA/g== SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 01 00                    ..........
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident.arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).GetResident.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count.arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Count.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路3t8WlE+CEPpgnWbvvNfnSA== SRODATA dupok size=11
	0x0000 03 00 00 00 02 00 00 00 03 01 00                 ...........
gclocals路ykHN0vawYuq1dUW4zEe2gA== SRODATA dupok size=8
	0x0000 03 00 00 00 00 00 00 00                          ........
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put.arginfo1 SRODATA static dupok size=7
	0x0000 08 08 10 08 18 08 ff                             .......
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Put.argliveinfo SRODATA static dupok size=3
	0x0000 00 00 0d                                         ...
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get.arginfo1 SRODATA static dupok size=5
	0x0000 08 08 10 08 ff                                   .....
github.com/dolthub/swiss/minswiss.(*SwissMap[go.shape.int64,go.shape.int64]).Get.argliveinfo SRODATA static dupok size=3
	0x0000 00 00 05                                         ...
gclocals路KZrB1y+lqctuygdernvR/g== SRODATA dupok size=10
	0x0000 02 00 00 00 03 00 00 00 01 00                    ..........
github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64.arginfo1 SRODATA static dupok size=5
	0x0000 10 08 18 08 ff                                   .....
github.com/dolthub/swiss/minswiss.Hasher[go.shape.int64].Hash64.argliveinfo SRODATA static dupok size=2
	0x0000 00 08                                            ..
gclocals路g2BeySu+wFnoycgXfElmcg== SRODATA dupok size=8
	0x0000 01 00 00 00 00 00 00 00                          ........
github.com/dolthub/swiss/minswiss.NewSwissMap[int64,int64].arginfo1 SRODATA static dupok size=1
	0x0000 ff                                               .
github.com/dolthub/swiss/minswiss.NewSwissMap[int64,int64].argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident.arginfo1 SRODATA static dupok size=1
	0x0000 ff                                               .
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).GetResident.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count.arginfo1 SRODATA static dupok size=1
	0x0000 ff                                               .
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Count.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put.arginfo1 SRODATA static dupok size=5
	0x0000 08 08 10 08 ff                                   .....
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Put.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get.arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
github.com/dolthub/swiss/minswiss.(*SwissMap[int64,int64]).Get.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64.arginfo1 SRODATA static dupok size=3
	0x0000 10 08 ff                                         ...
github.com/dolthub/swiss/minswiss.Hasher[int64].Hash64.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64.arginfo1 SRODATA static dupok size=3
	0x0000 08 08 ff                                         ...
github.com/dolthub/swiss/minswiss.(*Hasher[int64]).Hash64.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
gclocals路TjPuuCwdlCpTaRQGRKTrYw== SRODATA dupok size=10
	0x0000 02 00 00 00 02 00 00 00 03 00                    ..........
github.com/dolthub/swiss/minswiss.(*Hasher[go.shape.int64]).Hash64.arginfo1 SRODATA static dupok size=5
	0x0000 08 08 10 08 ff                                   .....
github.com/dolthub/swiss/minswiss.(*Hasher[go.shape.int64]).Hash64.argliveinfo SRODATA static dupok size=2
	0x0000 00 00                                            ..
